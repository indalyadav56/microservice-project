import {
  require_react
} from "./chunk-32E4H3EV.js";
import {
  E as E2,
  J,
  diff,
  e
} from "./chunk-7RQVLVWK.js";
import {
  useBreakpoints
} from "./chunk-XTT2Q3MF.js";
import {
  AVAILABLE_CLIENTS,
  c as c2,
  f,
  snippetz
} from "./chunk-VSCFWJFX.js";
import {
  O as O2
} from "./chunk-DCUFLCOA.js";
import "./chunk-U6UZPZXA.js";
import {
  f as f2
} from "./chunk-4VTJNOIA.js";
import "./chunk-ZM6PV6NT.js";
import "./chunk-HG4QS5B7.js";
import "./chunk-BFDVTPMT.js";
import "./chunk-W57CGMC5.js";
import {
  t as t2,
  u
} from "./chunk-KEMKBPRU.js";
import {
  cookieSchema
} from "./chunk-AE36LDHR.js";
import {
  O,
  p
} from "./chunk-YMJHZV34.js";
import {
  Fuse,
  t
} from "./chunk-BGMGCHHM.js";
import {
  RouterView,
  createMemoryHistory,
  createRouter
} from "./chunk-UKABXAIE.js";
import {
  LS_KEYS,
  P,
  REFERENCE_LS_KEYS,
  Y,
  apiClientConfigurationSchema,
  apiReferenceConfigurationSchema,
  bundle,
  c as c3,
  collectionSchema,
  dereference,
  environmentSchema,
  escapeJsonPointer,
  ge,
  getExampleFromSchema,
  getResolvedRef,
  getSegmentsFromPath,
  getSlugUid,
  getThemeStyles,
  hasObtrusiveScrollbars,
  isConfigurationWithSources,
  isLocalRef,
  isObject,
  isRemoteUrl,
  je,
  normalize,
  parse as parse2,
  qe,
  requestExampleSchema,
  requestSchema,
  s as s2,
  safeLocalStorage,
  securitySchemeSchema,
  tagSchema,
  themeLabels,
  toJson,
  toYaml,
  upgrade,
  workspaceSchema,
  z
} from "./chunk-V4XIGGIS.js";
import {
  $,
  $2,
  B,
  B4 as B2,
  C,
  C2,
  C4 as C3,
  D2 as D,
  E,
  Fragment,
  H,
  H2,
  H4 as H3,
  Ie,
  L,
  N,
  Q,
  S,
  V,
  V2,
  W,
  _,
  _2,
  _3,
  _4,
  _6 as _5,
  _7 as _6,
  _8 as _7,
  _9 as _8,
  browser_default,
  c2 as c,
  camelToTitleWords,
  capitalize,
  capitalize2,
  combineUrlAndPath,
  computed,
  createApp,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createSlots,
  createStaticVNode,
  createTextVNode,
  createVNode,
  cva,
  d,
  defineComponent,
  fetchDocument,
  getCurrentInstance,
  getHeadings,
  getHttpMethodInfo,
  getOperationStability,
  getOperationStabilityColor,
  getServersFromDocument,
  guardReactiveProps,
  h,
  h2,
  h3,
  httpMethods,
  i,
  inject,
  isDefined,
  isHttpMethod,
  isJsonString,
  isMacOS,
  isOperationDeprecated,
  isRef,
  k,
  k2,
  m,
  m3 as m2,
  m4 as m3,
  m5 as m4,
  makeUrlAbsolute,
  me,
  mergeModels,
  mergeProps,
  mergeUrls,
  nanoid,
  nextTick,
  normalizeClass,
  normalizeMimeTypeObject,
  normalizeProps,
  normalizeStyle,
  notNullish,
  objectKeys,
  onActivated,
  onBeforeMount,
  onBeforeUnmount,
  onDeactivated,
  onMounted,
  onUnmounted,
  openBlock,
  parse,
  parseJsonOrYaml,
  pe,
  prettyPrintJson,
  provide,
  q,
  reactive,
  redirectToProxy,
  ref,
  renderList,
  renderSlot,
  replaceVariables,
  resolveComponent,
  resolveDynamicComponent,
  s,
  schemaModel,
  serverSchema,
  splitContent,
  toDisplayString,
  toRef,
  toValue,
  toValue2,
  tryOnScopeDispose,
  unref,
  unrefElement,
  useBindCx,
  useClipboard,
  useColorMode,
  useDebounceFn,
  useElementHover,
  useEventBus,
  useFavicon,
  useId,
  useIntersectionObserver,
  useMediaQuery,
  useModel,
  useResizeObserver,
  useTemplateRef,
  v,
  v2,
  vModelCheckbox,
  vShow,
  version,
  w,
  w2,
  w3,
  watch,
  watchDebounced,
  watchEffect,
  withCtx,
  withDirectives,
  withKeys,
  withModifiers,
  x2 as x,
  xe,
  y,
  y2,
  y3,
  ye
} from "./chunk-BCXGVGOY.js";
import {
  __commonJS,
  __export,
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/react/cjs/react-jsx-runtime.development.js
var require_react_jsx_runtime_development = __commonJS({
  "node_modules/react/cjs/react-jsx-runtime.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React = require_react();
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x12) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var assign = Object.assign;
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x12) {
                var match = x12.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x12) {
                  control = x12;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x12) {
                  control = x12;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x12) {
                control = x12;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s15 = sampleLines.length - 1;
              var c14 = controlLines.length - 1;
              while (s15 >= 1 && c14 >= 0 && sampleLines[s15] !== controlLines[c14]) {
                c14--;
              }
              for (; s15 >= 1 && c14 >= 0; s15--, c14--) {
                if (sampleLines[s15] !== controlLines[c14]) {
                  if (s15 !== 1 || c14 !== 1) {
                    do {
                      s15--;
                      c14--;
                      if (c14 < 0 || sampleLines[s15] !== controlLines[c14]) {
                        var _frame = "\n" + sampleLines[s15].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s15 >= 1 && c14 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x12) {
                }
              }
            }
          }
          return "";
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a18) {
          return isArrayImpl(a18);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e16) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown;
        var specialPropRefWarningShown;
        var didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== void 0;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== void 0;
        }
        function warnIfStringRefCannotBeAutoConverted(config, self2) {
          {
            if (typeof config.ref === "string" && ReactCurrentOwner.current && self2 && ReactCurrentOwner.current.stateNode !== self2) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        function defineKeyPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingKey = function() {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, "key", {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }
        }
        function defineRefPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingRef = function() {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, "ref", {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }
        }
        var ReactElement = function(type, key, ref2, self2, source, owner, props) {
          var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type,
            key,
            ref: ref2,
            props,
            // Record the component responsible for creating this element.
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function jsxDEV(type, config, maybeKey, source, self2) {
          {
            var propName;
            var props = {};
            var key = null;
            var ref2 = null;
            if (maybeKey !== void 0) {
              {
                checkKeyStringCoercion(maybeKey);
              }
              key = "" + maybeKey;
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            if (hasValidRef(config)) {
              ref2 = config.ref;
              warnIfStringRefCannotBeAutoConverted(config, self2);
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
            if (type && type.defaultProps) {
              var defaultProps = type.defaultProps;
              for (propName in defaultProps) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps[propName];
                }
              }
            }
            if (key || ref2) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref2) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
            return ReactElement(type, key, ref2, self2, source, ReactCurrentOwner.current, props);
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function isValidElement(object) {
          {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
        }
        function getDeclarationErrorAddendum() {
          {
            if (ReactCurrentOwner$1.current) {
              var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
              if (name) {
                return "\n\nCheck the render method of `" + name + "`.";
              }
            }
            return "";
          }
        }
        function getSourceInfoErrorAddendum(source) {
          {
            if (source !== void 0) {
              var fileName = source.fileName.replace(/^.*[\\\/]/, "");
              var lineNumber = source.lineNumber;
              return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
            }
            return "";
          }
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          {
            var info = getDeclarationErrorAddendum();
            if (!info) {
              var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
              if (parentName) {
                info = "\n\nCheck the top-level render call using <" + parentName + ">.";
              }
            }
            return info;
          }
        }
        function validateExplicitKey(element, parentType) {
          {
            if (!element._store || element._store.validated || element.key != null) {
              return;
            }
            element._store.validated = true;
            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
            var childOwner = "";
            if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
              childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
            }
            setCurrentlyValidatingElement$1(element);
            error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          {
            if (typeof node !== "object") {
              return;
            }
            if (isArray(node)) {
              for (var i17 = 0; i17 < node.length; i17++) {
                var child = node[i17];
                if (isValidElement(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement(node)) {
              if (node._store) {
                node._store.validated = true;
              }
            } else if (node) {
              var iteratorFn = getIteratorFn(node);
              if (typeof iteratorFn === "function") {
                if (iteratorFn !== node.entries) {
                  var iterator = iteratorFn.call(node);
                  var step;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes;
            if (typeof type === "function") {
              propTypes = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
            // Inner props are checked in the reconciler.
            type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentNameFromType(type);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type);
              error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i17 = 0; i17 < keys.length; i17++) {
              var key = keys[i17];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        var didWarnAboutKeySpread = {};
        function jsxWithValidation(type, props, key, isStaticChildren, source, self2) {
          {
            var validType = isValidElementType(type);
            if (!validType) {
              var info = "";
              if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
              }
              var sourceInfo = getSourceInfoErrorAddendum(source);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }
              var typeString;
              if (type === null) {
                typeString = "null";
              } else if (isArray(type)) {
                typeString = "array";
              } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
              } else {
                typeString = typeof type;
              }
              error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
            var element = jsxDEV(type, props, key, source, self2);
            if (element == null) {
              return element;
            }
            if (validType) {
              var children = props.children;
              if (children !== void 0) {
                if (isStaticChildren) {
                  if (isArray(children)) {
                    for (var i17 = 0; i17 < children.length; i17++) {
                      validateChildKeys(children[i17], type);
                    }
                    if (Object.freeze) {
                      Object.freeze(children);
                    }
                  } else {
                    error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                  }
                } else {
                  validateChildKeys(children, type);
                }
              }
            }
            {
              if (hasOwnProperty.call(props, "key")) {
                var componentName = getComponentNameFromType(type);
                var keys = Object.keys(props).filter(function(k13) {
                  return k13 !== "key";
                });
                var beforeExample = keys.length > 0 ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
                if (!didWarnAboutKeySpread[componentName + beforeExample]) {
                  var afterExample = keys.length > 0 ? "{" + keys.join(": ..., ") + ": ...}" : "{}";
                  error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);
                  didWarnAboutKeySpread[componentName + beforeExample] = true;
                }
              }
            }
            if (type === REACT_FRAGMENT_TYPE) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }
            return element;
          }
        }
        function jsxWithValidationStatic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, true);
          }
        }
        function jsxWithValidationDynamic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, false);
          }
        }
        var jsx = jsxWithValidationDynamic;
        var jsxs = jsxWithValidationStatic;
        exports.Fragment = REACT_FRAGMENT_TYPE;
        exports.jsx = jsx;
        exports.jsxs = jsxs;
      })();
    }
  }
});

// node_modules/react/jsx-runtime.js
var require_jsx_runtime = __commonJS({
  "node_modules/react/jsx-runtime.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_jsx_runtime_development();
    }
  }
});

// node_modules/@scalar/api-reference-react/dist/ApiReferenceReact.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/@scalar/json-magic/dist/utils/json-path-utils.js
function parseJsonPointer(pointer) {
  return pointer.split("/").filter((segment, index) => (index !== 0 || segment !== "#") && segment);
}
function getValueByPath(obj, pointer) {
  return pointer.reduce((acc, part) => {
    if (acc === void 0 || acc === null) {
      return void 0;
    }
    return acc[part];
  }, obj);
}

// node_modules/@scalar/json-magic/dist/magic-proxy/proxy.js
var isMagicProxy = Symbol("isMagicProxy");
var magicProxyTarget = Symbol("magicProxyTarget");
var REF_VALUE = "$ref-value";
var REF_KEY = "$ref";
var createMagicProxy = (target, root = target, cache = /* @__PURE__ */ new Map()) => {
  if (!isObject(target) && !Array.isArray(target)) {
    return target;
  }
  const handler = {
    /**
     * Proxy "get" trap for magic proxy.
     * - If accessing the special isMagicProxy symbol, return true to identify proxy.
     * - If accessing the magicProxyTarget symbol, return the original target object.
     * - If accessing "$ref-value" and the object has a local $ref, resolve and return the referenced value as a new magic proxy.
     * - For all other properties, recursively wrap the returned value in a magic proxy (if applicable).
     */
    get(target2, prop, receiver) {
      if (prop === isMagicProxy) {
        return true;
      }
      if (prop === magicProxyTarget) {
        return target2;
      }
      const ref2 = Reflect.get(target2, REF_KEY, receiver);
      if (prop === REF_VALUE && typeof ref2 === "string" && isLocalRef(ref2)) {
        if (cache.has(ref2)) {
          return cache.get(ref2);
        }
        const resolvedValue = getValueByPath(root, parseJsonPointer(ref2));
        const proxiedValue = createMagicProxy(resolvedValue, root, cache);
        cache.set(ref2, proxiedValue);
        return proxiedValue;
      }
      const value = Reflect.get(target2, prop, receiver);
      return createMagicProxy(value, root, cache);
    },
    /**
     * Proxy "set" trap for magic proxy.
     * Allows setting properties on the proxied object.
     * This will update the underlying target object.
     */
    set(target2, prop, newValue, receiver) {
      const ref2 = Reflect.get(target2, REF_KEY, receiver);
      if (prop === REF_VALUE && typeof ref2 === "string" && isLocalRef(ref2)) {
        const segments = getSegmentsFromPath(ref2);
        if (segments.length === 0) {
          return false;
        }
        const parentNode = getValueByPath(root, segments.slice(0, -1));
        if (!parentNode || !isObject(parentNode) && !Array.isArray(parentNode)) {
          return false;
        }
        parentNode[segments.at(-1)] = newValue;
        return true;
      }
      return Reflect.set(target2, prop, newValue, receiver);
    },
    /**
     * Proxy "deleteProperty" trap for magic proxy.
     * Allows deleting properties from the proxied object.
     * This will update the underlying target object.
     */
    deleteProperty(target2, prop) {
      return Reflect.deleteProperty(target2, prop);
    },
    /**
     * Proxy "has" trap for magic proxy.
     * - Pretend that "$ref-value" exists if "$ref" exists on the target.
     *   This allows expressions like `"$ref-value" in obj` to return true for objects with a $ref,
     *   even though "$ref-value" is a virtual property provided by the proxy.
     * - For all other properties, defer to the default Reflect.has behavior.
     */
    has(target2, prop) {
      if (prop === REF_VALUE && REF_KEY in target2) {
        return true;
      }
      return Reflect.has(target2, prop);
    },
    /**
     * Proxy "ownKeys" trap for magic proxy.
     * - Returns the list of own property keys for the proxied object.
     * - If the object has a "$ref" property, ensures that "$ref-value" is also included in the keys,
     *   even though "$ref-value" is a virtual property provided by the proxy.
     *   This allows Object.keys, Reflect.ownKeys, etc. to include "$ref-value" for objects with $ref.
     */
    ownKeys(target2) {
      const keys = Reflect.ownKeys(target2);
      if (REF_KEY in target2 && !keys.includes(REF_VALUE)) {
        keys.push(REF_VALUE);
      }
      return keys;
    },
    /**
     * Proxy "getOwnPropertyDescriptor" trap for magic proxy.
     * - For the virtual "$ref-value" property, returns a descriptor that makes it appear as a regular property.
     * - For all other properties, delegates to the default Reflect.getOwnPropertyDescriptor behavior.
     * - This ensures that Object.getOwnPropertyDescriptor and similar methods work correctly with the virtual property.
     */
    getOwnPropertyDescriptor(target2, prop) {
      const ref2 = Reflect.get(target2, REF_KEY);
      if (prop === REF_VALUE && typeof ref2 === "string") {
        return {
          configurable: true,
          enumerable: true,
          value: void 0,
          writable: false
        };
      }
      return Reflect.getOwnPropertyDescriptor(target2, prop);
    }
  };
  return new Proxy(target, handler);
};
function getRaw(obj) {
  if (typeof obj !== "object" || obj === null) {
    return obj;
  }
  if (obj[isMagicProxy]) {
    return obj[magicProxyTarget];
  }
  return obj;
}

// node_modules/@scalar/workspace-store/dist/helpers/general.js
function isObject2(value) {
  return typeof value === "object" && value !== null && !Array.isArray(value);
}
function isLocalRef2(value) {
  return value.startsWith("#");
}
var split = (array, condition) => {
  return array.reduce(
    ([pass, fail], item) => {
      return condition(item) ? [[...pass, item], fail] : [pass, [...fail, item]];
    },
    [[], []]
  );
};
var safeAssign = (target, source) => {
  Object.assign(target, source);
};

// node_modules/@scalar/json-magic/dist/diff/diff.js
var diff2 = (doc1, doc2) => {
  const diff22 = [];
  const bfs = (el1, el2, prefix = []) => {
    if (typeof el1 !== typeof el2) {
      if (typeof el1 === "undefined") {
        diff22.push({ path: prefix, changes: el2, type: "add" });
        return;
      }
      if (typeof el2 === "undefined") {
        diff22.push({ path: prefix, changes: el1, type: "delete" });
        return;
      }
      diff22.push({ path: prefix, changes: el2, type: "update" });
      return;
    }
    if (typeof el1 === "object" && typeof el2 === "object" && el1 !== null && el2 !== null) {
      const keys = /* @__PURE__ */ new Set([...Object.keys(el1), ...Object.keys(el2)]);
      for (const key of keys) {
        bfs(el1[key], el2[key], [...prefix, key]);
      }
      return;
    }
    if (el1 !== el2) {
      diff22.push({ path: prefix, changes: el2, type: "update" });
    }
  };
  bfs(doc1, doc2);
  return diff22;
};

// node_modules/@scalar/json-magic/dist/diff/apply.js
var InvalidChangesDetectedError = class extends Error {
  constructor(message) {
    super(message);
    this.name = "InvalidChangesDetectedError";
  }
};
var apply = (document2, diff3) => {
  const applyChange = (current, path, d24, depth = 0) => {
    if (path[depth] === void 0) {
      throw new InvalidChangesDetectedError(
        `Process aborted. Path ${path.join(".")} at depth ${depth} is undefined, check diff object`
      );
    }
    if (depth >= path.length - 1) {
      if (d24.type === "add" || d24.type === "update") {
        current[path[depth]] = d24.changes;
      } else {
        if (Array.isArray(current)) {
          current.splice(Number.parseInt(path[depth]), 1);
        } else {
          delete current[path[depth]];
        }
      }
      return;
    }
    if (current[path[depth]] === void 0 || typeof current[path[depth]] !== "object") {
      throw new InvalidChangesDetectedError("Process aborted, check diff object");
    }
    applyChange(current[path[depth]], path, d24, depth + 1);
  };
  for (const d24 of diff3) {
    applyChange(document2, d24.path, d24);
  }
  return document2;
};

// node_modules/@scalar/json-magic/dist/diff/trie.js
var TrieNode = class {
  constructor(value, children) {
    this.value = value;
    this.children = children;
  }
};
var Trie = class {
  root;
  constructor() {
    this.root = new TrieNode(null, {});
  }
  /**
   * Adds a value to the trie at the specified path.
   * Creates new nodes as needed to build the path.
   *
   * @param path - Array of strings representing the path to store the value
   * @param value - The value to store at the end of the path
   *
   * @example
   * const trie = new Trie<number>()
   * trie.addPath(['users', 'john', 'age'], 30)
   */
  addPath(path, value) {
    let current = this.root;
    for (const dir of path) {
      if (current.children[dir]) {
        current = current.children[dir];
      } else {
        current.children[dir] = new TrieNode(null, {});
        current = current.children[dir];
      }
    }
    current.value = value;
  }
  /**
   * Finds all matches along a given path in the trie.
   * This method traverses both the exact path and all deeper paths,
   * executing a callback for each matching value found.
   *
   * The search is performed in two phases:
   * 1. Traverse the exact path, checking for matches at each node
   * 2. Perform a depth-first search from the end of the path to find all deeper matches
   *
   * @param path - Array of strings representing the path to search
   * @param callback - Function to execute for each matching value found
   *
   * @example
   * const trie = new Trie<number>()
   * trie.addPath(['a', 'b', 'c'], 1)
   * trie.addPath(['a', 'b', 'd'], 2)
   * trie.findMatch(['a', 'b'], (value) => console.log(value)) // Logs: 1, 2
   */
  findMatch(path, callback) {
    let current = this.root;
    for (const dir of path) {
      if (current.value !== null) {
        callback(current.value);
      }
      const next = current.children[dir];
      if (!next) {
        return;
      }
      current = next;
    }
    const dfs = (current2) => {
      for (const child of Object.keys(current2?.children ?? {})) {
        if (current2 && Object.hasOwn(current2.children, child)) {
          dfs(current2?.children[child]);
        }
      }
      if (current2?.value) {
        callback(current2.value);
      }
    };
    dfs(current);
  }
};

// node_modules/@scalar/json-magic/dist/diff/utils.js
var isKeyCollisions = (a18, b10) => {
  if (typeof a18 !== typeof b10) {
    return true;
  }
  if (typeof a18 === "object" && typeof b10 === "object" && a18 !== null && b10 !== null) {
    const keys = /* @__PURE__ */ new Set([...Object.keys(a18), ...Object.keys(b10)]);
    for (const key of keys) {
      if (a18[key] !== void 0 && b10[key] !== void 0) {
        if (isKeyCollisions(a18[key], b10[key])) {
          return true;
        }
      }
    }
    return false;
  }
  return a18 !== b10;
};
var mergeObjects = (a18, b10) => {
  for (const key in b10) {
    if (!(key in a18)) {
      a18[key] = b10[key];
    } else {
      const aValue = a18[key];
      const bValue = b10[key];
      if (typeof aValue === "object" && aValue !== null && typeof bValue === "object" && bValue !== null) {
        a18[key] = mergeObjects(aValue, bValue);
      }
    }
  }
  return a18;
};
var isArrayEqual = (a18, b10) => {
  if (a18.length !== b10.length) {
    return false;
  }
  for (let i17 = 0; i17 <= a18.length; ++i17) {
    if (a18[i17] !== b10[i17]) {
      return false;
    }
  }
  return true;
};

// node_modules/@scalar/json-magic/dist/diff/merge.js
var merge = (diff1, diff22) => {
  const trie = new Trie();
  for (const [index, diff3] of diff1.entries()) {
    trie.addPath(diff3.path, { index, changes: diff3 });
  }
  const skipDiff1 = /* @__PURE__ */ new Set();
  const skipDiff2 = /* @__PURE__ */ new Set();
  const conflictsMap1 = /* @__PURE__ */ new Map();
  const conflictsMap2 = /* @__PURE__ */ new Map();
  for (const [index, diff3] of diff22.entries()) {
    trie.findMatch(diff3.path, (value) => {
      if (diff3.type === "delete") {
        if (value.changes.type === "delete") {
          if (value.changes.path.length > diff3.path.length) {
            skipDiff1.add(value.index);
          } else {
            skipDiff2.add(value.index);
          }
        } else {
          skipDiff1.add(value.index);
          skipDiff2.add(index);
          const conflictEntry = conflictsMap2.get(index);
          if (conflictEntry !== void 0) {
            conflictEntry[0].push(value.changes);
          } else {
            conflictsMap2.set(index, [[value.changes], [diff3]]);
          }
        }
      }
      if (diff3.type === "add" || diff3.type === "update") {
        if (isArrayEqual(diff3.path, value.changes.path) && value.changes.type !== "delete" && !isKeyCollisions(diff3.changes, value.changes.changes)) {
          skipDiff1.add(value.index);
          if (typeof diff3.changes === "object") {
            mergeObjects(diff3.changes, value.changes.changes);
          }
          return;
        }
        skipDiff1.add(value.index);
        skipDiff2.add(index);
        const conflictEntry = conflictsMap1.get(value.index);
        if (conflictEntry !== void 0) {
          conflictEntry[1].push(diff3);
        } else {
          conflictsMap1.set(value.index, [[value.changes], [diff3]]);
        }
      }
    });
  }
  const conflicts = [...conflictsMap1.values(), ...conflictsMap2.values()];
  const diffs = [
    ...diff1.filter((_22, index) => !skipDiff1.has(index)),
    ...diff22.filter((_22, index) => !skipDiff2.has(index))
  ];
  return { diffs, conflicts };
};

// node_modules/@scalar/workspace-store/dist/helpers/apply-selective-updates.js
var excludeKeys = /* @__PURE__ */ new Set(["x-scalar-navigation", "x-ext", "x-ext-urls", "$status"]);
var applySelectiveUpdates = (originalDocument, updatedDocument) => {
  const diffs = diff2(originalDocument, updatedDocument);
  const [writableDiffs, excludedDiffs] = split(diffs, (d24) => !d24.path.some((p25) => excludeKeys.has(p25)));
  apply(originalDocument, writableDiffs);
  return [originalDocument, excludedDiffs];
};

// node_modules/@scalar/workspace-store/dist/helpers/deep-clone.js
var deepClone = (value, hash = /* @__PURE__ */ new WeakMap()) => {
  if (typeof value !== "object" || value === null) {
    return value;
  }
  if (hash.has(value)) {
    return hash.get(value);
  }
  const result = Array.isArray(value) ? [] : {};
  hash.set(value, result);
  Object.keys(value).forEach((key) => {
    result[key] = deepClone(value[key], hash);
  });
  return result;
};

// node_modules/@scalar/workspace-store/dist/helpers/json-path-utils.js
function getValueByPath2(obj, pointer) {
  return pointer.reduce((acc, part) => {
    if (acc === void 0 || acc === null) {
      return void 0;
    }
    return acc[part];
  }, obj);
}

// node_modules/@scalar/workspace-store/dist/helpers/merge-object.js
var mergeObjects2 = (a18, b10, cache = /* @__PURE__ */ new Set()) => {
  for (const key in b10) {
    if (!(key in a18)) {
      a18[key] = b10[key];
    } else {
      const aValue = a18[key];
      const bValue = b10[key];
      if (typeof aValue === "object" && aValue !== null && typeof bValue === "object" && bValue !== null) {
        const rawA = getRaw(aValue);
        const rawB = getRaw(bValue);
        if (cache.has(rawA) || cache.has(rawB)) {
          continue;
        }
        cache.add(rawA);
        cache.add(rawB);
        mergeObjects2(aValue, bValue, cache);
      } else {
        a18[key] = bValue;
      }
    }
  }
  return a18;
};

// node_modules/@scalar/workspace-store/dist/helpers/overrides-proxy.js
var isOverridesProxy = Symbol("isOverridesProxy");
var createOverridesProxy = (targetObject, overrides) => {
  if (!targetObject || typeof targetObject !== "object") {
    return targetObject;
  }
  const handler = {
    get(target, prop, receiver) {
      if (prop === isOverridesProxy) {
        return true;
      }
      if (prop === TARGET_SYMBOL) {
        return target;
      }
      const value = Reflect.get(target, prop, receiver);
      if (!isObject2(value)) {
        return Reflect.get(overrides ?? {}, prop) ?? value;
      }
      return createOverridesProxy(value, Reflect.get(overrides ?? {}, prop));
    },
    set(target, prop, value, receiver) {
      if (prop === isOverridesProxy || prop === TARGET_SYMBOL) {
        return false;
      }
      const hasOverride = overrides && Reflect.has(overrides, prop);
      if (hasOverride && overrides && typeof overrides === "object") {
        ;
        overrides[prop] = value;
        return true;
      }
      return Reflect.set(target, prop, value, receiver);
    }
  };
  return new Proxy(targetObject, handler);
};
var TARGET_SYMBOL = Symbol("overridesProxyTarget");

// node_modules/github-slugger/regex.js
var regex = /[\0-\x1F!-,\.\/:-@\[-\^`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482\u0530\u0557\u0558\u055A-\u055F\u0589-\u0590\u05BE\u05C0\u05C3\u05C6\u05C8-\u05CF\u05EB-\u05EE\u05F3-\u060F\u061B-\u061F\u066A-\u066D\u06D4\u06DD\u06DE\u06E9\u06FD\u06FE\u0700-\u070F\u074B\u074C\u07B2-\u07BF\u07F6-\u07F9\u07FB\u07FC\u07FE\u07FF\u082E-\u083F\u085C-\u085F\u086B-\u089F\u08B5\u08C8-\u08D2\u08E2\u0964\u0965\u0970\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA\u09BB\u09C5\u09C6\u09C9\u09CA\u09CF-\u09D6\u09D8-\u09DB\u09DE\u09E4\u09E5\u09F2-\u09FB\u09FD\u09FF\u0A00\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A\u0A3B\u0A3D\u0A43-\u0A46\u0A49\u0A4A\u0A4E-\u0A50\u0A52-\u0A58\u0A5D\u0A5F-\u0A65\u0A76-\u0A80\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA\u0ABB\u0AC6\u0ACA\u0ACE\u0ACF\u0AD1-\u0ADF\u0AE4\u0AE5\u0AF0-\u0AF8\u0B00\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A\u0B3B\u0B45\u0B46\u0B49\u0B4A\u0B4E-\u0B54\u0B58-\u0B5B\u0B5E\u0B64\u0B65\u0B70\u0B72-\u0B81\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BBD\u0BC3-\u0BC5\u0BC9\u0BCE\u0BCF\u0BD1-\u0BD6\u0BD8-\u0BE5\u0BF0-\u0BFF\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C45\u0C49\u0C4E-\u0C54\u0C57\u0C5B-\u0C5F\u0C64\u0C65\u0C70-\u0C7F\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA\u0CBB\u0CC5\u0CC9\u0CCE-\u0CD4\u0CD7-\u0CDD\u0CDF\u0CE4\u0CE5\u0CF0\u0CF3-\u0CFF\u0D0D\u0D11\u0D45\u0D49\u0D4F-\u0D53\u0D58-\u0D5E\u0D64\u0D65\u0D70-\u0D79\u0D80\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0DC9\u0DCB-\u0DCE\u0DD5\u0DD7\u0DE0-\u0DE5\u0DF0\u0DF1\u0DF4-\u0E00\u0E3B-\u0E3F\u0E4F\u0E5A-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EBE\u0EBF\u0EC5\u0EC7\u0ECE\u0ECF\u0EDA\u0EDB\u0EE0-\u0EFF\u0F01-\u0F17\u0F1A-\u0F1F\u0F2A-\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F48\u0F6D-\u0F70\u0F85\u0F98\u0FBD-\u0FC5\u0FC7-\u0FFF\u104A-\u104F\u109E\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B\u135C\u1360-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16ED\u16F9-\u16FF\u170D\u1715-\u171F\u1735-\u173F\u1754-\u175F\u176D\u1771\u1774-\u177F\u17D4-\u17D6\u17D8-\u17DB\u17DE\u17DF\u17EA-\u180A\u180E\u180F\u181A-\u181F\u1879-\u187F\u18AB-\u18AF\u18F6-\u18FF\u191F\u192C-\u192F\u193C-\u1945\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19CF\u19DA-\u19FF\u1A1C-\u1A1F\u1A5F\u1A7D\u1A7E\u1A8A-\u1A8F\u1A9A-\u1AA6\u1AA8-\u1AAF\u1AC1-\u1AFF\u1B4C-\u1B4F\u1B5A-\u1B6A\u1B74-\u1B7F\u1BF4-\u1BFF\u1C38-\u1C3F\u1C4A-\u1C4C\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CCF\u1CD3\u1CFB-\u1CFF\u1DFA\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u203E\u2041-\u2053\u2055-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u20CF\u20F1-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u215F\u2189-\u24B5\u24EA-\u2BFF\u2C2F\u2C5F\u2CE5-\u2CEA\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7E\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF\u2E00-\u2E2E\u2E30-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u3040\u3097\u3098\u309B\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31C0-\u31EF\u3200-\u33FF\u4DC0-\u4DFF\u9FFD-\u9FFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA62C-\uA63F\uA673\uA67E\uA6F2-\uA716\uA720\uA721\uA789\uA78A\uA7C0\uA7C1\uA7CB-\uA7F4\uA828-\uA82B\uA82D-\uA83F\uA874-\uA87F\uA8C6-\uA8CF\uA8DA-\uA8DF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA954-\uA95F\uA97D-\uA97F\uA9C1-\uA9CE\uA9DA-\uA9DF\uA9FF\uAA37-\uAA3F\uAA4E\uAA4F\uAA5A-\uAA5F\uAA77-\uAA79\uAAC3-\uAADA\uAADE\uAADF\uAAF0\uAAF1\uAAF7-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB6A-\uAB6F\uABEB\uABEE\uABEF\uABFA-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFDFF\uFE10-\uFE1F\uFE30-\uFE32\uFE35-\uFE4C\uFE50-\uFE6F\uFE75\uFEFD-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF3E\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDD3F\uDD75-\uDDFC\uDDFE-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEDF\uDEE1-\uDEFF\uDF20-\uDF2C\uDF4B-\uDF4F\uDF7B-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0\uDFD6-\uDFFF]|\uD801[\uDC9E\uDC9F\uDCAA-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE04\uDE07-\uDE0B\uDE14\uDE18\uDE36\uDE37\uDE3B-\uDE3E\uDE40-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE7-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD28-\uDD2F\uDD3A-\uDE7F\uDEAA\uDEAD-\uDEAF\uDEB2-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF51-\uDFAF\uDFC5-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC47-\uDC65\uDC70-\uDC7E\uDCBB-\uDCCF\uDCE9-\uDCEF\uDCFA-\uDCFF\uDD35\uDD40-\uDD43\uDD48-\uDD4F\uDD74\uDD75\uDD77-\uDD7F\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDFF\uDE12\uDE38-\uDE3D\uDE3F-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEEB-\uDEEF\uDEFA-\uDEFF\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A\uDF45\uDF46\uDF49\uDF4A\uDF4E\uDF4F\uDF51-\uDF56\uDF58-\uDF5C\uDF64\uDF65\uDF6D-\uDF6F\uDF75-\uDFFF]|\uD805[\uDC4B-\uDC4F\uDC5A-\uDC5D\uDC62-\uDC7F\uDCC6\uDCC8-\uDCCF\uDCDA-\uDD7F\uDDB6\uDDB7\uDDC1-\uDDD7\uDDDE-\uDDFF\uDE41-\uDE43\uDE45-\uDE4F\uDE5A-\uDE7F\uDEB9-\uDEBF\uDECA-\uDEFF\uDF1B\uDF1C\uDF2C-\uDF2F\uDF3A-\uDFFF]|\uD806[\uDC3B-\uDC9F\uDCEA-\uDCFE\uDD07\uDD08\uDD0A\uDD0B\uDD14\uDD17\uDD36\uDD39\uDD3A\uDD44-\uDD4F\uDD5A-\uDD9F\uDDA8\uDDA9\uDDD8\uDDD9\uDDE2\uDDE5-\uDDFF\uDE3F-\uDE46\uDE48-\uDE4F\uDE9A-\uDE9C\uDE9E-\uDEBF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC37\uDC41-\uDC4F\uDC5A-\uDC71\uDC90\uDC91\uDCA8\uDCB7-\uDCFF\uDD07\uDD0A\uDD37-\uDD39\uDD3B\uDD3E\uDD48-\uDD4F\uDD5A-\uDD5F\uDD66\uDD69\uDD8F\uDD92\uDD99-\uDD9F\uDDAA-\uDEDF\uDEF7-\uDFAF\uDFB1-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC6F-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80B\uD80E-\uD810\uD812-\uD819\uD824-\uD82B\uD82D\uD82E\uD830-\uD833\uD837\uD839\uD83D\uD83F\uD87B-\uD87D\uD87F\uD885-\uDB3F\uDB41-\uDBFF][\uDC00-\uDFFF]|\uD80D[\uDC2F-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F\uDE6A-\uDECF\uDEEE\uDEEF\uDEF5-\uDEFF\uDF37-\uDF3F\uDF44-\uDF4F\uDF5A-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4E\uDF88-\uDF8E\uDFA0-\uDFDF\uDFE2\uDFE5-\uDFEF\uDFF2-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD823[\uDCD6-\uDCFF\uDD09-\uDFFF]|\uD82C[\uDD1F-\uDD4F\uDD53-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDC9C\uDC9F-\uDFFF]|\uD834[\uDC00-\uDD64\uDD6A-\uDD6C\uDD73-\uDD7A\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDE41\uDE45-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC\uDFCD]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE9A\uDEA0\uDEB0-\uDFFF]|\uD838[\uDC07\uDC19\uDC1A\uDC22\uDC25\uDC2B-\uDCFF\uDD2D-\uDD2F\uDD3E\uDD3F\uDD4A-\uDD4D\uDD4F-\uDEBF\uDEFA-\uDFFF]|\uD83A[\uDCC5-\uDCCF\uDCD7-\uDCFF\uDD4C-\uDD4F\uDD5A-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD83C[\uDC00-\uDD2F\uDD4A-\uDD4F\uDD6A-\uDD6F\uDD8A-\uDFFF]|\uD83E[\uDC00-\uDFEF\uDFFA-\uDFFF]|\uD869[\uDEDE-\uDEFF]|\uD86D[\uDF35-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uD884[\uDF4B-\uDFFF]|\uDB40[\uDC00-\uDCFF\uDDF0-\uDFFF]/g;

// node_modules/github-slugger/index.js
var own = Object.hasOwnProperty;
var BananaSlug = class {
  /**
   * Create a new slug class.
   */
  constructor() {
    this.occurrences;
    this.reset();
  }
  /**
   * Generate a unique slug.
  *
  * Tracks previously generated slugs: repeated calls with the same value
  * will result in different slugs.
  * Use the `slug` function to get same slugs.
   *
   * @param  {string} value
   *   String of text to slugify
   * @param  {boolean} [maintainCase=false]
   *   Keep the current case, otherwise make all lowercase
   * @return {string}
   *   A unique slug string
   */
  slug(value, maintainCase) {
    const self2 = this;
    let result = slug(value, maintainCase === true);
    const originalSlug = result;
    while (own.call(self2.occurrences, result)) {
      self2.occurrences[originalSlug]++;
      result = originalSlug + "-" + self2.occurrences[originalSlug];
    }
    self2.occurrences[result] = 0;
    return result;
  }
  /**
   * Reset - Forget all previous slugs
   *
   * @return void
   */
  reset() {
    this.occurrences = /* @__PURE__ */ Object.create(null);
  }
};
function slug(value, maintainCase) {
  if (typeof value !== "string") return "";
  if (!maintainCase) value = value.toLowerCase();
  return value.replace(regex, "").replace(/ /g, "-");
}

// node_modules/@scalar/workspace-store/dist/navigation/helpers/utils.js
var withSlugs = (headings, slugger) => headings.map((heading) => {
  return {
    ...heading,
    slug: slugger.slug(heading.value)
  };
});
function getHeadingsFromMarkdown(input) {
  const slugger = new BananaSlug();
  const headings = getHeadings(input);
  return withSlugs(headings, slugger);
}
var getLowestHeadingLevel = (headings) => {
  const lowestLevel = Math.min(...headings.map((heading) => heading.depth));
  if (lowestLevel >= 1 && lowestLevel <= 6) {
    return lowestLevel;
  }
  return 1;
};

// node_modules/@scalar/workspace-store/dist/navigation/helpers/traverse-description.js
var DEFAULT_INTRODUCTION_SLUG = "introduction";
var traverseDescription = (description, titlesMap, getHeadingId) => {
  if (!description?.trim()) {
    return [];
  }
  const headings = getHeadingsFromMarkdown(description);
  const lowestLevel = getLowestHeadingLevel(headings);
  const entries = [];
  let currentParent = null;
  if (description && !description.trim().startsWith("#")) {
    const heading = {
      depth: 1,
      value: "Introduction",
      slug: DEFAULT_INTRODUCTION_SLUG
    };
    const id = getHeadingId(heading);
    const title = heading.value;
    entries.push({
      id,
      title,
      type: "text"
    });
    titlesMap.set(id, title);
  }
  for (const heading of headings) {
    if (heading.depth !== lowestLevel && heading.depth !== lowestLevel + 1) {
      continue;
    }
    const entry = {
      id: getHeadingId(heading),
      title: heading.value,
      type: "text"
    };
    titlesMap.set(entry.id, entry.title);
    if (heading.depth === lowestLevel) {
      entry.children = [];
      entries.push(entry);
      currentParent = entry;
    } else if (currentParent) {
      currentParent.children?.push(entry);
    }
  }
  return entries;
};

// node_modules/@scalar/workspace-store/dist/navigation/helpers/get-tag.js
var getTag = (tagsMap, name) => {
  if (!tagsMap.get(name)) {
    tagsMap.set(name, { entries: [], tag: { name } });
  }
  return tagsMap.get(name);
};

// node_modules/@scalar/workspace-store/dist/navigation/helpers/traverse-paths.js
var createOperationEntry = (ref2, operation, method, path = "Unknown", tag, titlesMap, getOperationId) => {
  const id = getOperationId({ ...operation, method, path }, tag);
  const title = operation.summary?.trim() ? operation.summary : path;
  titlesMap.set(id, title);
  return {
    id,
    title,
    path,
    method,
    ref: ref2,
    type: "operation"
  };
};
var traversePaths = (content, tagsMap, titlesMap, getOperationId) => {
  Object.entries(content.paths ?? {}).forEach(([path, pathItemObject]) => {
    const pathKeys = objectKeys(pathItemObject ?? {}).filter((key) => isHttpMethod(key));
    pathKeys.forEach((method) => {
      const _operation = pathItemObject?.[method];
      const operation = getResolvedRef(_operation);
      if (!operation) {
        return;
      }
      if (operation["x-internal"] || operation["x-scalar-ignore"] || !isHttpMethod(method)) {
        return;
      }
      const ref2 = `#/paths/${escapeJsonPointer(path)}/${method}`;
      if (operation.tags?.length) {
        operation.tags.forEach((tagName) => {
          const { tag } = getTag(tagsMap, tagName);
          tagsMap.get(tagName)?.entries.push(createOperationEntry(ref2, operation, method, path, tag, titlesMap, getOperationId));
        });
      } else {
        const { tag } = getTag(tagsMap, "default");
        tagsMap.get("default")?.entries.push(createOperationEntry(ref2, operation, method, path, tag, titlesMap, getOperationId));
      }
    });
  });
};

// node_modules/@scalar/workspace-store/dist/navigation/helpers/traverse-schemas.js
var createSchemaEntry = (ref2, name = "Unknown", titlesMap, getModelId, tag, _schema) => {
  const id = getModelId({ name }, tag);
  const schema = getResolvedRef(_schema);
  const title = schema?.title || name;
  titlesMap.set(id, title);
  return {
    id,
    title,
    name,
    ref: ref2,
    type: "model"
  };
};
var traverseSchemas = (content, tagsMap, titlesMap, getModelId) => {
  const schemas = content.components?.schemas ?? {};
  const untagged = [];
  for (const name in schemas) {
    const schema = getResolvedRef(schemas[name]);
    if (schema?.["x-internal"] || schema?.["x-scalar-ignore"] || !Object.hasOwn(schemas, name)) {
      continue;
    }
    const ref2 = `#/content/components/schemas/${name}`;
    if (schema?.["x-tags"]) {
      schema["x-tags"].forEach((tagName) => {
        const { tag } = getTag(tagsMap, tagName);
        tagsMap.get(tagName)?.entries.push(createSchemaEntry(ref2, name, titlesMap, getModelId, tag));
      });
    } else {
      untagged.push(createSchemaEntry(ref2, name, titlesMap, getModelId, void 0, getResolvedRef(schemas[name])));
    }
  }
  return untagged;
};

// node_modules/@scalar/workspace-store/dist/navigation/helpers/traverse-tags.js
var createTagEntry = (tag, titlesMap, getTagId, children, isGroup = false) => {
  const id = getTagId(tag);
  const title = tag["x-displayName"] ?? tag.name ?? "Untitled Tag";
  titlesMap.set(id, title);
  return {
    id,
    title,
    name: tag.name || title,
    children,
    isGroup,
    type: "tag"
  };
};
var getSortedTagEntries = (_keys, tagsMap, titlesMap, { getTagId, tagsSorter, operationsSorter }) => {
  const hasDefault = _keys.includes("default");
  const keys = hasDefault ? _keys.filter((key) => key !== "default") : _keys;
  if (tagsSorter === "alpha") {
    keys.sort((a18, b10) => {
      const nameA = getTag(tagsMap, a18).tag["x-displayName"] || a18 || "Untitled Tag";
      const nameB = getTag(tagsMap, b10).tag["x-displayName"] || b10 || "Untitled Tag";
      return nameA.localeCompare(nameB);
    });
  } else if (typeof tagsSorter === "function") {
    keys.sort((a18, b10) => tagsSorter(getTag(tagsMap, a18).tag, getTag(tagsMap, b10).tag));
  }
  if (hasDefault) {
    keys.push("default");
  }
  return keys.flatMap((key) => {
    const { tag, entries } = getTag(tagsMap, key);
    if (tag["x-internal"] || tag["x-scalar-ignore"]) {
      return [];
    }
    if (operationsSorter === "alpha") {
      entries.sort((a18, b10) => "method" in a18 && "method" in b10 ? a18.title.localeCompare(b10.title) : 0);
    } else if (operationsSorter === "method") {
      entries.sort((a18, b10) => "method" in a18 && "method" in b10 ? a18.method.localeCompare(b10.method) : 0);
    } else if (typeof operationsSorter === "function") {
      entries.sort((a18, b10) => {
        if (a18.type !== "operation" && a18.type !== "webhook" || b10.type !== "operation" && b10.type !== "webhook") {
          return 0;
        }
        const pathA = a18.type === "operation" ? a18.path : a18.name;
        const pathB = b10.type === "operation" ? b10.path : b10.name;
        return operationsSorter(
          { method: a18.method, path: pathA, ref: a18.ref, httpVerb: a18.method },
          { method: b10.method, path: pathB, ref: b10.ref, httpVerb: b10.method }
        );
      });
    }
    return entries.length ? createTagEntry(tag, titlesMap, getTagId, entries) : [];
  });
};
var traverseTags = (content, tagsMap, titlesMap, { getTagId, tagsSorter, operationsSorter }) => {
  if (content["x-tagGroups"]) {
    const tagGroups = content["x-tagGroups"];
    return tagGroups.flatMap((tagGroup) => {
      const entries = getSortedTagEntries(tagGroup.tags ?? [], tagsMap, titlesMap, {
        getTagId,
        tagsSorter,
        operationsSorter
      });
      return entries.length ? createTagEntry(tagGroup, titlesMap, getTagId, entries, true) : [];
    });
  }
  const keys = Array.from(tagsMap.keys());
  const tags = getSortedTagEntries(keys, tagsMap, titlesMap, { getTagId, tagsSorter, operationsSorter });
  if (tags.length === 1 && tags[0]?.title === "default") {
    return tags[0]?.children ?? [];
  }
  return tags;
};

// node_modules/@scalar/workspace-store/dist/navigation/helpers/traverse-webhooks.js
var createWebhookEntry = (ref2, method, name = "Unknown", title = "Unknown", titlesMap, getWebhookId, tag) => {
  const id = getWebhookId({ name, method }, tag);
  titlesMap.set(id, title);
  return {
    id,
    title,
    name,
    ref: ref2,
    method,
    type: "webhook"
  };
};
var traverseWebhooks = (content, tagsMap, titlesMap, getWebhookId) => {
  const untagged = [];
  Object.entries(content.webhooks ?? {}).forEach(([name, pathItemObject]) => {
    const pathKeys = objectKeys(pathItemObject ?? {}).filter((key) => isHttpMethod(key));
    pathKeys.forEach((method) => {
      const _operation = pathItemObject?.[method];
      const operation = getResolvedRef(_operation);
      if (!operation) {
        return;
      }
      if (operation["x-internal"] || operation["x-scalar-ignore"]) {
        return;
      }
      const ref2 = `#/webhooks/${name}/${method}`;
      if (operation.tags?.length) {
        operation.tags.forEach((tagName) => {
          const { tag } = getTag(tagsMap, tagName);
          tagsMap.get(tagName)?.entries.push(
            createWebhookEntry(ref2, method, name, operation.summary ?? name, titlesMap, getWebhookId, tag)
          );
        });
      } else {
        untagged.push(createWebhookEntry(ref2, method, name, operation.summary ?? name, titlesMap, getWebhookId));
      }
    });
  });
  return untagged;
};

// node_modules/@scalar/workspace-store/dist/navigation/helpers/traverse-document.js
var traverseDocument = (document2, {
  hideModels = false,
  tagsSorter = "alpha",
  operationsSorter = "alpha",
  getHeadingId = (heading) => heading.value,
  getOperationId = (operation) => operation.summary ?? "",
  getWebhookId = (webhook) => webhook?.name ?? "webhooks",
  getModelId = (model) => model?.name ?? "",
  getTagId = (tag) => tag.name ?? ""
}) => {
  const titles = /* @__PURE__ */ new Map();
  const tagsMap = new Map(
    document2.tags?.map((tag) => [tag.name ?? "Untitled Tag", { tag, entries: [] }]) ?? []
  );
  const entries = traverseDescription(document2.info?.description, titles, getHeadingId);
  traversePaths(document2, tagsMap, titles, getOperationId);
  const untaggedWebhooks = traverseWebhooks(document2, tagsMap, titles, getWebhookId);
  const tagsEntries = traverseTags(document2, tagsMap, titles, {
    getTagId,
    tagsSorter,
    operationsSorter
  });
  entries.push(...tagsEntries);
  if (untaggedWebhooks.length) {
    entries.push({
      id: getWebhookId({ name: "" }),
      title: "Webhooks",
      children: untaggedWebhooks,
      type: "text"
    });
  }
  if (!hideModels && document2.components?.schemas) {
    const untaggedModels = traverseSchemas(document2, tagsMap, titles, getModelId);
    if (untaggedModels.length) {
      entries.push({
        id: getModelId({}),
        title: "Models",
        children: untaggedModels,
        type: "text"
      });
    }
  }
  return { entries, titles };
};

// node_modules/@scalar/workspace-store/dist/plugins.js
var loadingStatus = () => {
  return {
    type: "lifecycle",
    onResolveStart: (node) => {
      node["$status"] = "loading";
    },
    onResolveError: (node) => {
      node["$status"] = "error";
    },
    onResolveSuccess: (node) => {
      delete node["$status"];
    }
  };
};
var externalValueResolver = () => {
  return {
    type: "lifecycle",
    onAfterNodeProcess: async (node, context) => {
      const externalValue = node["externalValue"];
      const cache = context.resolutionCache;
      if (typeof externalValue !== "string") {
        return;
      }
      const loader = context.loaders.find((it2) => it2.validate(externalValue));
      if (!loader) {
        return;
      }
      if (!cache.has(externalValue)) {
        cache.set(externalValue, loader.exec(externalValue));
      }
      const result = await cache.get(externalValue);
      if (result?.ok) {
        node["value"] = result.data;
      }
    }
  };
};
var refsEverywhere = () => {
  return {
    type: "lifecycle",
    onBeforeNodeProcess: async (node, context) => {
      const { path, resolutionCache, parentNode } = context;
      const ref2 = node["$ref"];
      if (typeof ref2 !== "string") {
        return;
      }
      if (!parentNode || !path.length) {
        return;
      }
      const loader = context.loaders.find((it2) => it2.validate(ref2));
      if (!loader) {
        return;
      }
      if (path[0] === "info") {
        if (!resolutionCache.has(ref2)) {
          resolutionCache.set(ref2, loader.exec(ref2));
        }
        const result = await resolutionCache.get(ref2);
        if (result?.ok) {
          parentNode[path.at(-1)] = result.data;
        }
      }
    }
  };
};
var restoreOriginalRefs = () => {
  return {
    type: "lifecycle",
    onBeforeNodeProcess: (node, context) => {
      const ref2 = node["$ref"];
      const root = context.rootNode;
      const extUrls = root["x-ext-urls"];
      if (typeof ref2 !== "string" || typeof extUrls !== "object" || extUrls === null || !isLocalRef2(ref2)) {
        return;
      }
      const segments = ref2.split("/");
      const key = segments.at(-1) ?? "";
      node["$ref"] = extUrls[key] ?? ref2;
    }
  };
};

// node_modules/@scalar/workspace-store/dist/schemas/extensions.js
var extensions = {
  document: {
    navigation: "x-scalar-navigation",
    activeAuth: "x-scalar-active-auth",
    activeServer: "x-scalar-active-server"
  },
  workspace: {
    darkMode: "x-scalar-dark-mode",
    defaultClient: "x-scalar-default-client",
    activeDocument: "x-scalar-active-document",
    theme: "x-scalar-theme"
  }
};

// node_modules/@sinclair/typebox/build/esm/type/guard/value.mjs
var value_exports = {};
__export(value_exports, {
  HasPropertyKey: () => HasPropertyKey,
  IsArray: () => IsArray,
  IsAsyncIterator: () => IsAsyncIterator,
  IsBigInt: () => IsBigInt,
  IsBoolean: () => IsBoolean,
  IsDate: () => IsDate,
  IsFunction: () => IsFunction,
  IsIterator: () => IsIterator,
  IsNull: () => IsNull,
  IsNumber: () => IsNumber,
  IsObject: () => IsObject,
  IsRegExp: () => IsRegExp,
  IsString: () => IsString,
  IsSymbol: () => IsSymbol,
  IsUint8Array: () => IsUint8Array,
  IsUndefined: () => IsUndefined
});
function HasPropertyKey(value, key) {
  return key in value;
}
function IsAsyncIterator(value) {
  return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.asyncIterator in value;
}
function IsArray(value) {
  return Array.isArray(value);
}
function IsBigInt(value) {
  return typeof value === "bigint";
}
function IsBoolean(value) {
  return typeof value === "boolean";
}
function IsDate(value) {
  return value instanceof globalThis.Date;
}
function IsFunction(value) {
  return typeof value === "function";
}
function IsIterator(value) {
  return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.iterator in value;
}
function IsNull(value) {
  return value === null;
}
function IsNumber(value) {
  return typeof value === "number";
}
function IsObject(value) {
  return typeof value === "object" && value !== null;
}
function IsRegExp(value) {
  return value instanceof globalThis.RegExp;
}
function IsString(value) {
  return typeof value === "string";
}
function IsSymbol(value) {
  return typeof value === "symbol";
}
function IsUint8Array(value) {
  return value instanceof globalThis.Uint8Array;
}
function IsUndefined(value) {
  return value === void 0;
}

// node_modules/@sinclair/typebox/build/esm/type/clone/value.mjs
function ArrayType(value) {
  return value.map((value2) => Visit(value2));
}
function DateType(value) {
  return new Date(value.getTime());
}
function Uint8ArrayType(value) {
  return new Uint8Array(value);
}
function RegExpType(value) {
  return new RegExp(value.source, value.flags);
}
function ObjectType(value) {
  const result = {};
  for (const key of Object.getOwnPropertyNames(value)) {
    result[key] = Visit(value[key]);
  }
  for (const key of Object.getOwnPropertySymbols(value)) {
    result[key] = Visit(value[key]);
  }
  return result;
}
function Visit(value) {
  return IsArray(value) ? ArrayType(value) : IsDate(value) ? DateType(value) : IsUint8Array(value) ? Uint8ArrayType(value) : IsRegExp(value) ? RegExpType(value) : IsObject(value) ? ObjectType(value) : value;
}
function Clone(value) {
  return Visit(value);
}

// node_modules/@sinclair/typebox/build/esm/type/clone/type.mjs
function CloneType(schema, options) {
  return options === void 0 ? Clone(schema) : Clone({ ...options, ...schema });
}

// node_modules/@sinclair/typebox/build/esm/value/guard/guard.mjs
function IsAsyncIterator2(value) {
  return IsObject2(value) && globalThis.Symbol.asyncIterator in value;
}
function IsIterator2(value) {
  return IsObject2(value) && globalThis.Symbol.iterator in value;
}
function IsStandardObject(value) {
  return IsObject2(value) && (globalThis.Object.getPrototypeOf(value) === Object.prototype || globalThis.Object.getPrototypeOf(value) === null);
}
function IsPromise(value) {
  return value instanceof globalThis.Promise;
}
function IsDate2(value) {
  return value instanceof Date && globalThis.Number.isFinite(value.getTime());
}
function IsMap(value) {
  return value instanceof globalThis.Map;
}
function IsSet(value) {
  return value instanceof globalThis.Set;
}
function IsTypedArray(value) {
  return globalThis.ArrayBuffer.isView(value);
}
function IsUint8Array2(value) {
  return value instanceof globalThis.Uint8Array;
}
function HasPropertyKey2(value, key) {
  return key in value;
}
function IsObject2(value) {
  return value !== null && typeof value === "object";
}
function IsArray2(value) {
  return globalThis.Array.isArray(value) && !globalThis.ArrayBuffer.isView(value);
}
function IsUndefined2(value) {
  return value === void 0;
}
function IsNull2(value) {
  return value === null;
}
function IsBoolean2(value) {
  return typeof value === "boolean";
}
function IsNumber2(value) {
  return typeof value === "number";
}
function IsInteger(value) {
  return globalThis.Number.isInteger(value);
}
function IsBigInt2(value) {
  return typeof value === "bigint";
}
function IsString2(value) {
  return typeof value === "string";
}
function IsFunction2(value) {
  return typeof value === "function";
}
function IsSymbol2(value) {
  return typeof value === "symbol";
}
function IsValueType(value) {
  return IsBigInt2(value) || IsBoolean2(value) || IsNull2(value) || IsNumber2(value) || IsString2(value) || IsSymbol2(value) || IsUndefined2(value);
}

// node_modules/@sinclair/typebox/build/esm/system/policy.mjs
var TypeSystemPolicy;
(function(TypeSystemPolicy2) {
  TypeSystemPolicy2.InstanceMode = "default";
  TypeSystemPolicy2.ExactOptionalPropertyTypes = false;
  TypeSystemPolicy2.AllowArrayObject = false;
  TypeSystemPolicy2.AllowNaN = false;
  TypeSystemPolicy2.AllowNullVoid = false;
  function IsExactOptionalProperty(value, key) {
    return TypeSystemPolicy2.ExactOptionalPropertyTypes ? key in value : value[key] !== void 0;
  }
  TypeSystemPolicy2.IsExactOptionalProperty = IsExactOptionalProperty;
  function IsObjectLike(value) {
    const isObject3 = IsObject2(value);
    return TypeSystemPolicy2.AllowArrayObject ? isObject3 : isObject3 && !IsArray2(value);
  }
  TypeSystemPolicy2.IsObjectLike = IsObjectLike;
  function IsRecordLike(value) {
    return IsObjectLike(value) && !(value instanceof Date) && !(value instanceof Uint8Array);
  }
  TypeSystemPolicy2.IsRecordLike = IsRecordLike;
  function IsNumberLike(value) {
    return TypeSystemPolicy2.AllowNaN ? IsNumber2(value) : Number.isFinite(value);
  }
  TypeSystemPolicy2.IsNumberLike = IsNumberLike;
  function IsVoidLike(value) {
    const isUndefined = IsUndefined2(value);
    return TypeSystemPolicy2.AllowNullVoid ? isUndefined || value === null : isUndefined;
  }
  TypeSystemPolicy2.IsVoidLike = IsVoidLike;
})(TypeSystemPolicy || (TypeSystemPolicy = {}));

// node_modules/@sinclair/typebox/build/esm/type/create/immutable.mjs
function ImmutableArray(value) {
  return globalThis.Object.freeze(value).map((value2) => Immutable(value2));
}
function ImmutableDate(value) {
  return value;
}
function ImmutableUint8Array(value) {
  return value;
}
function ImmutableRegExp(value) {
  return value;
}
function ImmutableObject(value) {
  const result = {};
  for (const key of Object.getOwnPropertyNames(value)) {
    result[key] = Immutable(value[key]);
  }
  for (const key of Object.getOwnPropertySymbols(value)) {
    result[key] = Immutable(value[key]);
  }
  return globalThis.Object.freeze(result);
}
function Immutable(value) {
  return IsArray(value) ? ImmutableArray(value) : IsDate(value) ? ImmutableDate(value) : IsUint8Array(value) ? ImmutableUint8Array(value) : IsRegExp(value) ? ImmutableRegExp(value) : IsObject(value) ? ImmutableObject(value) : value;
}

// node_modules/@sinclair/typebox/build/esm/type/create/type.mjs
function CreateType(schema, options) {
  const result = options !== void 0 ? { ...options, ...schema } : schema;
  switch (TypeSystemPolicy.InstanceMode) {
    case "freeze":
      return Immutable(result);
    case "clone":
      return Clone(result);
    default:
      return result;
  }
}

// node_modules/@sinclair/typebox/build/esm/type/error/error.mjs
var TypeBoxError = class extends Error {
  constructor(message) {
    super(message);
  }
};

// node_modules/@sinclair/typebox/build/esm/type/symbols/symbols.mjs
var TransformKind = Symbol.for("TypeBox.Transform");
var ReadonlyKind = Symbol.for("TypeBox.Readonly");
var OptionalKind = Symbol.for("TypeBox.Optional");
var Hint = Symbol.for("TypeBox.Hint");
var Kind = Symbol.for("TypeBox.Kind");

// node_modules/@sinclair/typebox/build/esm/type/guard/kind.mjs
function IsReadonly(value) {
  return IsObject(value) && value[ReadonlyKind] === "Readonly";
}
function IsOptional(value) {
  return IsObject(value) && value[OptionalKind] === "Optional";
}
function IsAny(value) {
  return IsKindOf(value, "Any");
}
function IsArgument(value) {
  return IsKindOf(value, "Argument");
}
function IsArray3(value) {
  return IsKindOf(value, "Array");
}
function IsAsyncIterator3(value) {
  return IsKindOf(value, "AsyncIterator");
}
function IsBigInt3(value) {
  return IsKindOf(value, "BigInt");
}
function IsBoolean3(value) {
  return IsKindOf(value, "Boolean");
}
function IsComputed(value) {
  return IsKindOf(value, "Computed");
}
function IsConstructor(value) {
  return IsKindOf(value, "Constructor");
}
function IsDate3(value) {
  return IsKindOf(value, "Date");
}
function IsFunction3(value) {
  return IsKindOf(value, "Function");
}
function IsInteger2(value) {
  return IsKindOf(value, "Integer");
}
function IsIntersect(value) {
  return IsKindOf(value, "Intersect");
}
function IsIterator3(value) {
  return IsKindOf(value, "Iterator");
}
function IsKindOf(value, kind) {
  return IsObject(value) && Kind in value && value[Kind] === kind;
}
function IsLiteralValue(value) {
  return IsBoolean(value) || IsNumber(value) || IsString(value);
}
function IsLiteral(value) {
  return IsKindOf(value, "Literal");
}
function IsMappedKey(value) {
  return IsKindOf(value, "MappedKey");
}
function IsMappedResult(value) {
  return IsKindOf(value, "MappedResult");
}
function IsNever(value) {
  return IsKindOf(value, "Never");
}
function IsNot(value) {
  return IsKindOf(value, "Not");
}
function IsNull3(value) {
  return IsKindOf(value, "Null");
}
function IsNumber3(value) {
  return IsKindOf(value, "Number");
}
function IsObject3(value) {
  return IsKindOf(value, "Object");
}
function IsPromise2(value) {
  return IsKindOf(value, "Promise");
}
function IsRecord(value) {
  return IsKindOf(value, "Record");
}
function IsRef(value) {
  return IsKindOf(value, "Ref");
}
function IsRegExp2(value) {
  return IsKindOf(value, "RegExp");
}
function IsString3(value) {
  return IsKindOf(value, "String");
}
function IsSymbol3(value) {
  return IsKindOf(value, "Symbol");
}
function IsTemplateLiteral(value) {
  return IsKindOf(value, "TemplateLiteral");
}
function IsThis(value) {
  return IsKindOf(value, "This");
}
function IsTransform(value) {
  return IsObject(value) && TransformKind in value;
}
function IsTuple(value) {
  return IsKindOf(value, "Tuple");
}
function IsUndefined3(value) {
  return IsKindOf(value, "Undefined");
}
function IsUnion(value) {
  return IsKindOf(value, "Union");
}
function IsUint8Array3(value) {
  return IsKindOf(value, "Uint8Array");
}
function IsUnknown(value) {
  return IsKindOf(value, "Unknown");
}
function IsUnsafe(value) {
  return IsKindOf(value, "Unsafe");
}
function IsVoid(value) {
  return IsKindOf(value, "Void");
}
function IsKind(value) {
  return IsObject(value) && Kind in value && IsString(value[Kind]);
}
function IsSchema(value) {
  return IsAny(value) || IsArgument(value) || IsArray3(value) || IsBoolean3(value) || IsBigInt3(value) || IsAsyncIterator3(value) || IsComputed(value) || IsConstructor(value) || IsDate3(value) || IsFunction3(value) || IsInteger2(value) || IsIntersect(value) || IsIterator3(value) || IsLiteral(value) || IsMappedKey(value) || IsMappedResult(value) || IsNever(value) || IsNot(value) || IsNull3(value) || IsNumber3(value) || IsObject3(value) || IsPromise2(value) || IsRecord(value) || IsRef(value) || IsRegExp2(value) || IsString3(value) || IsSymbol3(value) || IsTemplateLiteral(value) || IsThis(value) || IsTuple(value) || IsUndefined3(value) || IsUnion(value) || IsUint8Array3(value) || IsUnknown(value) || IsUnsafe(value) || IsVoid(value) || IsKind(value);
}

// node_modules/@sinclair/typebox/build/esm/type/guard/type.mjs
var type_exports = {};
__export(type_exports, {
  IsAny: () => IsAny2,
  IsArgument: () => IsArgument2,
  IsArray: () => IsArray4,
  IsAsyncIterator: () => IsAsyncIterator4,
  IsBigInt: () => IsBigInt4,
  IsBoolean: () => IsBoolean4,
  IsComputed: () => IsComputed2,
  IsConstructor: () => IsConstructor2,
  IsDate: () => IsDate4,
  IsFunction: () => IsFunction4,
  IsImport: () => IsImport,
  IsInteger: () => IsInteger3,
  IsIntersect: () => IsIntersect2,
  IsIterator: () => IsIterator4,
  IsKind: () => IsKind2,
  IsKindOf: () => IsKindOf2,
  IsLiteral: () => IsLiteral2,
  IsLiteralBoolean: () => IsLiteralBoolean,
  IsLiteralNumber: () => IsLiteralNumber,
  IsLiteralString: () => IsLiteralString,
  IsLiteralValue: () => IsLiteralValue2,
  IsMappedKey: () => IsMappedKey2,
  IsMappedResult: () => IsMappedResult2,
  IsNever: () => IsNever2,
  IsNot: () => IsNot2,
  IsNull: () => IsNull4,
  IsNumber: () => IsNumber4,
  IsObject: () => IsObject4,
  IsOptional: () => IsOptional2,
  IsPromise: () => IsPromise3,
  IsProperties: () => IsProperties,
  IsReadonly: () => IsReadonly2,
  IsRecord: () => IsRecord2,
  IsRecursive: () => IsRecursive,
  IsRef: () => IsRef2,
  IsRegExp: () => IsRegExp3,
  IsSchema: () => IsSchema2,
  IsString: () => IsString4,
  IsSymbol: () => IsSymbol4,
  IsTemplateLiteral: () => IsTemplateLiteral2,
  IsThis: () => IsThis2,
  IsTransform: () => IsTransform2,
  IsTuple: () => IsTuple2,
  IsUint8Array: () => IsUint8Array4,
  IsUndefined: () => IsUndefined4,
  IsUnion: () => IsUnion2,
  IsUnionLiteral: () => IsUnionLiteral,
  IsUnknown: () => IsUnknown2,
  IsUnsafe: () => IsUnsafe2,
  IsVoid: () => IsVoid2,
  TypeGuardUnknownTypeError: () => TypeGuardUnknownTypeError
});
var TypeGuardUnknownTypeError = class extends TypeBoxError {
};
var KnownTypes = [
  "Argument",
  "Any",
  "Array",
  "AsyncIterator",
  "BigInt",
  "Boolean",
  "Computed",
  "Constructor",
  "Date",
  "Enum",
  "Function",
  "Integer",
  "Intersect",
  "Iterator",
  "Literal",
  "MappedKey",
  "MappedResult",
  "Not",
  "Null",
  "Number",
  "Object",
  "Promise",
  "Record",
  "Ref",
  "RegExp",
  "String",
  "Symbol",
  "TemplateLiteral",
  "This",
  "Tuple",
  "Undefined",
  "Union",
  "Uint8Array",
  "Unknown",
  "Void"
];
function IsPattern(value) {
  try {
    new RegExp(value);
    return true;
  } catch {
    return false;
  }
}
function IsControlCharacterFree(value) {
  if (!IsString(value))
    return false;
  for (let i17 = 0; i17 < value.length; i17++) {
    const code = value.charCodeAt(i17);
    if (code >= 7 && code <= 13 || code === 27 || code === 127) {
      return false;
    }
  }
  return true;
}
function IsAdditionalProperties(value) {
  return IsOptionalBoolean(value) || IsSchema2(value);
}
function IsOptionalBigInt(value) {
  return IsUndefined(value) || IsBigInt(value);
}
function IsOptionalNumber(value) {
  return IsUndefined(value) || IsNumber(value);
}
function IsOptionalBoolean(value) {
  return IsUndefined(value) || IsBoolean(value);
}
function IsOptionalString(value) {
  return IsUndefined(value) || IsString(value);
}
function IsOptionalPattern(value) {
  return IsUndefined(value) || IsString(value) && IsControlCharacterFree(value) && IsPattern(value);
}
function IsOptionalFormat(value) {
  return IsUndefined(value) || IsString(value) && IsControlCharacterFree(value);
}
function IsOptionalSchema(value) {
  return IsUndefined(value) || IsSchema2(value);
}
function IsReadonly2(value) {
  return IsObject(value) && value[ReadonlyKind] === "Readonly";
}
function IsOptional2(value) {
  return IsObject(value) && value[OptionalKind] === "Optional";
}
function IsAny2(value) {
  return IsKindOf2(value, "Any") && IsOptionalString(value.$id);
}
function IsArgument2(value) {
  return IsKindOf2(value, "Argument") && IsNumber(value.index);
}
function IsArray4(value) {
  return IsKindOf2(value, "Array") && value.type === "array" && IsOptionalString(value.$id) && IsSchema2(value.items) && IsOptionalNumber(value.minItems) && IsOptionalNumber(value.maxItems) && IsOptionalBoolean(value.uniqueItems) && IsOptionalSchema(value.contains) && IsOptionalNumber(value.minContains) && IsOptionalNumber(value.maxContains);
}
function IsAsyncIterator4(value) {
  return IsKindOf2(value, "AsyncIterator") && value.type === "AsyncIterator" && IsOptionalString(value.$id) && IsSchema2(value.items);
}
function IsBigInt4(value) {
  return IsKindOf2(value, "BigInt") && value.type === "bigint" && IsOptionalString(value.$id) && IsOptionalBigInt(value.exclusiveMaximum) && IsOptionalBigInt(value.exclusiveMinimum) && IsOptionalBigInt(value.maximum) && IsOptionalBigInt(value.minimum) && IsOptionalBigInt(value.multipleOf);
}
function IsBoolean4(value) {
  return IsKindOf2(value, "Boolean") && value.type === "boolean" && IsOptionalString(value.$id);
}
function IsComputed2(value) {
  return IsKindOf2(value, "Computed") && IsString(value.target) && IsArray(value.parameters) && value.parameters.every((schema) => IsSchema2(schema));
}
function IsConstructor2(value) {
  return IsKindOf2(value, "Constructor") && value.type === "Constructor" && IsOptionalString(value.$id) && IsArray(value.parameters) && value.parameters.every((schema) => IsSchema2(schema)) && IsSchema2(value.returns);
}
function IsDate4(value) {
  return IsKindOf2(value, "Date") && value.type === "Date" && IsOptionalString(value.$id) && IsOptionalNumber(value.exclusiveMaximumTimestamp) && IsOptionalNumber(value.exclusiveMinimumTimestamp) && IsOptionalNumber(value.maximumTimestamp) && IsOptionalNumber(value.minimumTimestamp) && IsOptionalNumber(value.multipleOfTimestamp);
}
function IsFunction4(value) {
  return IsKindOf2(value, "Function") && value.type === "Function" && IsOptionalString(value.$id) && IsArray(value.parameters) && value.parameters.every((schema) => IsSchema2(schema)) && IsSchema2(value.returns);
}
function IsImport(value) {
  return IsKindOf2(value, "Import") && HasPropertyKey(value, "$defs") && IsObject(value.$defs) && IsProperties(value.$defs) && HasPropertyKey(value, "$ref") && IsString(value.$ref) && value.$ref in value.$defs;
}
function IsInteger3(value) {
  return IsKindOf2(value, "Integer") && value.type === "integer" && IsOptionalString(value.$id) && IsOptionalNumber(value.exclusiveMaximum) && IsOptionalNumber(value.exclusiveMinimum) && IsOptionalNumber(value.maximum) && IsOptionalNumber(value.minimum) && IsOptionalNumber(value.multipleOf);
}
function IsProperties(value) {
  return IsObject(value) && Object.entries(value).every(([key, schema]) => IsControlCharacterFree(key) && IsSchema2(schema));
}
function IsIntersect2(value) {
  return IsKindOf2(value, "Intersect") && (IsString(value.type) && value.type !== "object" ? false : true) && IsArray(value.allOf) && value.allOf.every((schema) => IsSchema2(schema) && !IsTransform2(schema)) && IsOptionalString(value.type) && (IsOptionalBoolean(value.unevaluatedProperties) || IsOptionalSchema(value.unevaluatedProperties)) && IsOptionalString(value.$id);
}
function IsIterator4(value) {
  return IsKindOf2(value, "Iterator") && value.type === "Iterator" && IsOptionalString(value.$id) && IsSchema2(value.items);
}
function IsKindOf2(value, kind) {
  return IsObject(value) && Kind in value && value[Kind] === kind;
}
function IsLiteralString(value) {
  return IsLiteral2(value) && IsString(value.const);
}
function IsLiteralNumber(value) {
  return IsLiteral2(value) && IsNumber(value.const);
}
function IsLiteralBoolean(value) {
  return IsLiteral2(value) && IsBoolean(value.const);
}
function IsLiteral2(value) {
  return IsKindOf2(value, "Literal") && IsOptionalString(value.$id) && IsLiteralValue2(value.const);
}
function IsLiteralValue2(value) {
  return IsBoolean(value) || IsNumber(value) || IsString(value);
}
function IsMappedKey2(value) {
  return IsKindOf2(value, "MappedKey") && IsArray(value.keys) && value.keys.every((key) => IsNumber(key) || IsString(key));
}
function IsMappedResult2(value) {
  return IsKindOf2(value, "MappedResult") && IsProperties(value.properties);
}
function IsNever2(value) {
  return IsKindOf2(value, "Never") && IsObject(value.not) && Object.getOwnPropertyNames(value.not).length === 0;
}
function IsNot2(value) {
  return IsKindOf2(value, "Not") && IsSchema2(value.not);
}
function IsNull4(value) {
  return IsKindOf2(value, "Null") && value.type === "null" && IsOptionalString(value.$id);
}
function IsNumber4(value) {
  return IsKindOf2(value, "Number") && value.type === "number" && IsOptionalString(value.$id) && IsOptionalNumber(value.exclusiveMaximum) && IsOptionalNumber(value.exclusiveMinimum) && IsOptionalNumber(value.maximum) && IsOptionalNumber(value.minimum) && IsOptionalNumber(value.multipleOf);
}
function IsObject4(value) {
  return IsKindOf2(value, "Object") && value.type === "object" && IsOptionalString(value.$id) && IsProperties(value.properties) && IsAdditionalProperties(value.additionalProperties) && IsOptionalNumber(value.minProperties) && IsOptionalNumber(value.maxProperties);
}
function IsPromise3(value) {
  return IsKindOf2(value, "Promise") && value.type === "Promise" && IsOptionalString(value.$id) && IsSchema2(value.item);
}
function IsRecord2(value) {
  return IsKindOf2(value, "Record") && value.type === "object" && IsOptionalString(value.$id) && IsAdditionalProperties(value.additionalProperties) && IsObject(value.patternProperties) && ((schema) => {
    const keys = Object.getOwnPropertyNames(schema.patternProperties);
    return keys.length === 1 && IsPattern(keys[0]) && IsObject(schema.patternProperties) && IsSchema2(schema.patternProperties[keys[0]]);
  })(value);
}
function IsRecursive(value) {
  return IsObject(value) && Hint in value && value[Hint] === "Recursive";
}
function IsRef2(value) {
  return IsKindOf2(value, "Ref") && IsOptionalString(value.$id) && IsString(value.$ref);
}
function IsRegExp3(value) {
  return IsKindOf2(value, "RegExp") && IsOptionalString(value.$id) && IsString(value.source) && IsString(value.flags) && IsOptionalNumber(value.maxLength) && IsOptionalNumber(value.minLength);
}
function IsString4(value) {
  return IsKindOf2(value, "String") && value.type === "string" && IsOptionalString(value.$id) && IsOptionalNumber(value.minLength) && IsOptionalNumber(value.maxLength) && IsOptionalPattern(value.pattern) && IsOptionalFormat(value.format);
}
function IsSymbol4(value) {
  return IsKindOf2(value, "Symbol") && value.type === "symbol" && IsOptionalString(value.$id);
}
function IsTemplateLiteral2(value) {
  return IsKindOf2(value, "TemplateLiteral") && value.type === "string" && IsString(value.pattern) && value.pattern[0] === "^" && value.pattern[value.pattern.length - 1] === "$";
}
function IsThis2(value) {
  return IsKindOf2(value, "This") && IsOptionalString(value.$id) && IsString(value.$ref);
}
function IsTransform2(value) {
  return IsObject(value) && TransformKind in value;
}
function IsTuple2(value) {
  return IsKindOf2(value, "Tuple") && value.type === "array" && IsOptionalString(value.$id) && IsNumber(value.minItems) && IsNumber(value.maxItems) && value.minItems === value.maxItems && // empty
  (IsUndefined(value.items) && IsUndefined(value.additionalItems) && value.minItems === 0 || IsArray(value.items) && value.items.every((schema) => IsSchema2(schema)));
}
function IsUndefined4(value) {
  return IsKindOf2(value, "Undefined") && value.type === "undefined" && IsOptionalString(value.$id);
}
function IsUnionLiteral(value) {
  return IsUnion2(value) && value.anyOf.every((schema) => IsLiteralString(schema) || IsLiteralNumber(schema));
}
function IsUnion2(value) {
  return IsKindOf2(value, "Union") && IsOptionalString(value.$id) && IsObject(value) && IsArray(value.anyOf) && value.anyOf.every((schema) => IsSchema2(schema));
}
function IsUint8Array4(value) {
  return IsKindOf2(value, "Uint8Array") && value.type === "Uint8Array" && IsOptionalString(value.$id) && IsOptionalNumber(value.minByteLength) && IsOptionalNumber(value.maxByteLength);
}
function IsUnknown2(value) {
  return IsKindOf2(value, "Unknown") && IsOptionalString(value.$id);
}
function IsUnsafe2(value) {
  return IsKindOf2(value, "Unsafe");
}
function IsVoid2(value) {
  return IsKindOf2(value, "Void") && value.type === "void" && IsOptionalString(value.$id);
}
function IsKind2(value) {
  return IsObject(value) && Kind in value && IsString(value[Kind]) && !KnownTypes.includes(value[Kind]);
}
function IsSchema2(value) {
  return IsObject(value) && (IsAny2(value) || IsArgument2(value) || IsArray4(value) || IsBoolean4(value) || IsBigInt4(value) || IsAsyncIterator4(value) || IsComputed2(value) || IsConstructor2(value) || IsDate4(value) || IsFunction4(value) || IsInteger3(value) || IsIntersect2(value) || IsIterator4(value) || IsLiteral2(value) || IsMappedKey2(value) || IsMappedResult2(value) || IsNever2(value) || IsNot2(value) || IsNull4(value) || IsNumber4(value) || IsObject4(value) || IsPromise3(value) || IsRecord2(value) || IsRef2(value) || IsRegExp3(value) || IsString4(value) || IsSymbol4(value) || IsTemplateLiteral2(value) || IsThis2(value) || IsTuple2(value) || IsUndefined4(value) || IsUnion2(value) || IsUint8Array4(value) || IsUnknown2(value) || IsUnsafe2(value) || IsVoid2(value) || IsKind2(value));
}

// node_modules/@sinclair/typebox/build/esm/type/patterns/patterns.mjs
var PatternBoolean = "(true|false)";
var PatternNumber = "(0|[1-9][0-9]*)";
var PatternString = "(.*)";
var PatternNever = "(?!.*)";
var PatternBooleanExact = `^${PatternBoolean}$`;
var PatternNumberExact = `^${PatternNumber}$`;
var PatternStringExact = `^${PatternString}$`;
var PatternNeverExact = `^${PatternNever}$`;

// node_modules/@sinclair/typebox/build/esm/type/registry/format.mjs
var format_exports = {};
__export(format_exports, {
  Clear: () => Clear,
  Delete: () => Delete,
  Entries: () => Entries,
  Get: () => Get,
  Has: () => Has,
  Set: () => Set2
});
var map = /* @__PURE__ */ new Map();
function Entries() {
  return new Map(map);
}
function Clear() {
  return map.clear();
}
function Delete(format) {
  return map.delete(format);
}
function Has(format) {
  return map.has(format);
}
function Set2(format, func) {
  map.set(format, func);
}
function Get(format) {
  return map.get(format);
}

// node_modules/@sinclair/typebox/build/esm/type/registry/type.mjs
var type_exports2 = {};
__export(type_exports2, {
  Clear: () => Clear2,
  Delete: () => Delete2,
  Entries: () => Entries2,
  Get: () => Get2,
  Has: () => Has2,
  Set: () => Set3
});
var map2 = /* @__PURE__ */ new Map();
function Entries2() {
  return new Map(map2);
}
function Clear2() {
  return map2.clear();
}
function Delete2(kind) {
  return map2.delete(kind);
}
function Has2(kind) {
  return map2.has(kind);
}
function Set3(kind, func) {
  map2.set(kind, func);
}
function Get2(kind) {
  return map2.get(kind);
}

// node_modules/@sinclair/typebox/build/esm/type/sets/set.mjs
function SetIncludes(T9, S8) {
  return T9.includes(S8);
}
function SetDistinct(T9) {
  return [...new Set(T9)];
}
function SetIntersect(T9, S8) {
  return T9.filter((L5) => S8.includes(L5));
}
function SetIntersectManyResolve(T9, Init) {
  return T9.reduce((Acc, L5) => {
    return SetIntersect(Acc, L5);
  }, Init);
}
function SetIntersectMany(T9) {
  return T9.length === 1 ? T9[0] : T9.length > 1 ? SetIntersectManyResolve(T9.slice(1), T9[0]) : [];
}
function SetUnionMany(T9) {
  const Acc = [];
  for (const L5 of T9)
    Acc.push(...L5);
  return Acc;
}

// node_modules/@sinclair/typebox/build/esm/type/any/any.mjs
function Any(options) {
  return CreateType({ [Kind]: "Any" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/array/array.mjs
function Array2(items, options) {
  return CreateType({ [Kind]: "Array", type: "array", items }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/argument/argument.mjs
function Argument(index) {
  return CreateType({ [Kind]: "Argument", index });
}

// node_modules/@sinclair/typebox/build/esm/type/async-iterator/async-iterator.mjs
function AsyncIterator(items, options) {
  return CreateType({ [Kind]: "AsyncIterator", type: "AsyncIterator", items }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/computed/computed.mjs
function Computed(target, parameters, options) {
  return CreateType({ [Kind]: "Computed", target, parameters }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/discard/discard.mjs
function DiscardKey(value, key) {
  const { [key]: _22, ...rest } = value;
  return rest;
}
function Discard(value, keys) {
  return keys.reduce((acc, key) => DiscardKey(acc, key), value);
}

// node_modules/@sinclair/typebox/build/esm/type/never/never.mjs
function Never(options) {
  return CreateType({ [Kind]: "Never", not: {} }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/mapped/mapped-result.mjs
function MappedResult(properties) {
  return CreateType({
    [Kind]: "MappedResult",
    properties
  });
}

// node_modules/@sinclair/typebox/build/esm/type/constructor/constructor.mjs
function Constructor(parameters, returns, options) {
  return CreateType({ [Kind]: "Constructor", type: "Constructor", parameters, returns }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/function/function.mjs
function Function2(parameters, returns, options) {
  return CreateType({ [Kind]: "Function", type: "Function", parameters, returns }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/union/union-create.mjs
function UnionCreate(T9, options) {
  return CreateType({ [Kind]: "Union", anyOf: T9 }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/union/union-evaluated.mjs
function IsUnionOptional(types) {
  return types.some((type) => IsOptional(type));
}
function RemoveOptionalFromRest(types) {
  return types.map((left) => IsOptional(left) ? RemoveOptionalFromType(left) : left);
}
function RemoveOptionalFromType(T9) {
  return Discard(T9, [OptionalKind]);
}
function ResolveUnion(types, options) {
  const isOptional = IsUnionOptional(types);
  return isOptional ? Optional(UnionCreate(RemoveOptionalFromRest(types), options)) : UnionCreate(RemoveOptionalFromRest(types), options);
}
function UnionEvaluated(T9, options) {
  return T9.length === 1 ? CreateType(T9[0], options) : T9.length === 0 ? Never(options) : ResolveUnion(T9, options);
}

// node_modules/@sinclair/typebox/build/esm/type/union/union.mjs
function Union(types, options) {
  return types.length === 0 ? Never(options) : types.length === 1 ? CreateType(types[0], options) : UnionCreate(types, options);
}

// node_modules/@sinclair/typebox/build/esm/type/template-literal/parse.mjs
var TemplateLiteralParserError = class extends TypeBoxError {
};
function Unescape(pattern) {
  return pattern.replace(/\\\$/g, "$").replace(/\\\*/g, "*").replace(/\\\^/g, "^").replace(/\\\|/g, "|").replace(/\\\(/g, "(").replace(/\\\)/g, ")");
}
function IsNonEscaped(pattern, index, char) {
  return pattern[index] === char && pattern.charCodeAt(index - 1) !== 92;
}
function IsOpenParen(pattern, index) {
  return IsNonEscaped(pattern, index, "(");
}
function IsCloseParen(pattern, index) {
  return IsNonEscaped(pattern, index, ")");
}
function IsSeparator(pattern, index) {
  return IsNonEscaped(pattern, index, "|");
}
function IsGroup(pattern) {
  if (!(IsOpenParen(pattern, 0) && IsCloseParen(pattern, pattern.length - 1)))
    return false;
  let count = 0;
  for (let index = 0; index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      count += 1;
    if (IsCloseParen(pattern, index))
      count -= 1;
    if (count === 0 && index !== pattern.length - 1)
      return false;
  }
  return true;
}
function InGroup(pattern) {
  return pattern.slice(1, pattern.length - 1);
}
function IsPrecedenceOr(pattern) {
  let count = 0;
  for (let index = 0; index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      count += 1;
    if (IsCloseParen(pattern, index))
      count -= 1;
    if (IsSeparator(pattern, index) && count === 0)
      return true;
  }
  return false;
}
function IsPrecedenceAnd(pattern) {
  for (let index = 0; index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      return true;
  }
  return false;
}
function Or(pattern) {
  let [count, start] = [0, 0];
  const expressions = [];
  for (let index = 0; index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      count += 1;
    if (IsCloseParen(pattern, index))
      count -= 1;
    if (IsSeparator(pattern, index) && count === 0) {
      const range2 = pattern.slice(start, index);
      if (range2.length > 0)
        expressions.push(TemplateLiteralParse(range2));
      start = index + 1;
    }
  }
  const range = pattern.slice(start);
  if (range.length > 0)
    expressions.push(TemplateLiteralParse(range));
  if (expressions.length === 0)
    return { type: "const", const: "" };
  if (expressions.length === 1)
    return expressions[0];
  return { type: "or", expr: expressions };
}
function And(pattern) {
  function Group(value, index) {
    if (!IsOpenParen(value, index))
      throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);
    let count = 0;
    for (let scan = index; scan < value.length; scan++) {
      if (IsOpenParen(value, scan))
        count += 1;
      if (IsCloseParen(value, scan))
        count -= 1;
      if (count === 0)
        return [index, scan];
    }
    throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);
  }
  function Range(pattern2, index) {
    for (let scan = index; scan < pattern2.length; scan++) {
      if (IsOpenParen(pattern2, scan))
        return [index, scan];
    }
    return [index, pattern2.length];
  }
  const expressions = [];
  for (let index = 0; index < pattern.length; index++) {
    if (IsOpenParen(pattern, index)) {
      const [start, end] = Group(pattern, index);
      const range = pattern.slice(start, end + 1);
      expressions.push(TemplateLiteralParse(range));
      index = end;
    } else {
      const [start, end] = Range(pattern, index);
      const range = pattern.slice(start, end);
      if (range.length > 0)
        expressions.push(TemplateLiteralParse(range));
      index = end - 1;
    }
  }
  return expressions.length === 0 ? { type: "const", const: "" } : expressions.length === 1 ? expressions[0] : { type: "and", expr: expressions };
}
function TemplateLiteralParse(pattern) {
  return IsGroup(pattern) ? TemplateLiteralParse(InGroup(pattern)) : IsPrecedenceOr(pattern) ? Or(pattern) : IsPrecedenceAnd(pattern) ? And(pattern) : { type: "const", const: Unescape(pattern) };
}
function TemplateLiteralParseExact(pattern) {
  return TemplateLiteralParse(pattern.slice(1, pattern.length - 1));
}

// node_modules/@sinclair/typebox/build/esm/type/template-literal/finite.mjs
var TemplateLiteralFiniteError = class extends TypeBoxError {
};
function IsNumberExpression(expression) {
  return expression.type === "or" && expression.expr.length === 2 && expression.expr[0].type === "const" && expression.expr[0].const === "0" && expression.expr[1].type === "const" && expression.expr[1].const === "[1-9][0-9]*";
}
function IsBooleanExpression(expression) {
  return expression.type === "or" && expression.expr.length === 2 && expression.expr[0].type === "const" && expression.expr[0].const === "true" && expression.expr[1].type === "const" && expression.expr[1].const === "false";
}
function IsStringExpression(expression) {
  return expression.type === "const" && expression.const === ".*";
}
function IsTemplateLiteralExpressionFinite(expression) {
  return IsNumberExpression(expression) || IsStringExpression(expression) ? false : IsBooleanExpression(expression) ? true : expression.type === "and" ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) : expression.type === "or" ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) : expression.type === "const" ? true : (() => {
    throw new TemplateLiteralFiniteError(`Unknown expression type`);
  })();
}
function IsTemplateLiteralFinite(schema) {
  const expression = TemplateLiteralParseExact(schema.pattern);
  return IsTemplateLiteralExpressionFinite(expression);
}

// node_modules/@sinclair/typebox/build/esm/type/template-literal/generate.mjs
var TemplateLiteralGenerateError = class extends TypeBoxError {
};
function* GenerateReduce(buffer) {
  if (buffer.length === 1)
    return yield* buffer[0];
  for (const left of buffer[0]) {
    for (const right of GenerateReduce(buffer.slice(1))) {
      yield `${left}${right}`;
    }
  }
}
function* GenerateAnd(expression) {
  return yield* GenerateReduce(expression.expr.map((expr) => [...TemplateLiteralExpressionGenerate(expr)]));
}
function* GenerateOr(expression) {
  for (const expr of expression.expr)
    yield* TemplateLiteralExpressionGenerate(expr);
}
function* GenerateConst(expression) {
  return yield expression.const;
}
function* TemplateLiteralExpressionGenerate(expression) {
  return expression.type === "and" ? yield* GenerateAnd(expression) : expression.type === "or" ? yield* GenerateOr(expression) : expression.type === "const" ? yield* GenerateConst(expression) : (() => {
    throw new TemplateLiteralGenerateError("Unknown expression");
  })();
}
function TemplateLiteralGenerate(schema) {
  const expression = TemplateLiteralParseExact(schema.pattern);
  return IsTemplateLiteralExpressionFinite(expression) ? [...TemplateLiteralExpressionGenerate(expression)] : [];
}

// node_modules/@sinclair/typebox/build/esm/type/literal/literal.mjs
function Literal(value, options) {
  return CreateType({
    [Kind]: "Literal",
    const: value,
    type: typeof value
  }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/boolean/boolean.mjs
function Boolean2(options) {
  return CreateType({ [Kind]: "Boolean", type: "boolean" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/bigint/bigint.mjs
function BigInt2(options) {
  return CreateType({ [Kind]: "BigInt", type: "bigint" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/number/number.mjs
function Number2(options) {
  return CreateType({ [Kind]: "Number", type: "number" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/string/string.mjs
function String2(options) {
  return CreateType({ [Kind]: "String", type: "string" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/template-literal/syntax.mjs
function* FromUnion(syntax) {
  const trim = syntax.trim().replace(/"|'/g, "");
  return trim === "boolean" ? yield Boolean2() : trim === "number" ? yield Number2() : trim === "bigint" ? yield BigInt2() : trim === "string" ? yield String2() : yield (() => {
    const literals = trim.split("|").map((literal) => Literal(literal.trim()));
    return literals.length === 0 ? Never() : literals.length === 1 ? literals[0] : UnionEvaluated(literals);
  })();
}
function* FromTerminal(syntax) {
  if (syntax[1] !== "{") {
    const L5 = Literal("$");
    const R8 = FromSyntax(syntax.slice(1));
    return yield* [L5, ...R8];
  }
  for (let i17 = 2; i17 < syntax.length; i17++) {
    if (syntax[i17] === "}") {
      const L5 = FromUnion(syntax.slice(2, i17));
      const R8 = FromSyntax(syntax.slice(i17 + 1));
      return yield* [...L5, ...R8];
    }
  }
  yield Literal(syntax);
}
function* FromSyntax(syntax) {
  for (let i17 = 0; i17 < syntax.length; i17++) {
    if (syntax[i17] === "$") {
      const L5 = Literal(syntax.slice(0, i17));
      const R8 = FromTerminal(syntax.slice(i17));
      return yield* [L5, ...R8];
    }
  }
  yield Literal(syntax);
}
function TemplateLiteralSyntax(syntax) {
  return [...FromSyntax(syntax)];
}

// node_modules/@sinclair/typebox/build/esm/type/template-literal/pattern.mjs
var TemplateLiteralPatternError = class extends TypeBoxError {
};
function Escape(value) {
  return value.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}
function Visit2(schema, acc) {
  return IsTemplateLiteral(schema) ? schema.pattern.slice(1, schema.pattern.length - 1) : IsUnion(schema) ? `(${schema.anyOf.map((schema2) => Visit2(schema2, acc)).join("|")})` : IsNumber3(schema) ? `${acc}${PatternNumber}` : IsInteger2(schema) ? `${acc}${PatternNumber}` : IsBigInt3(schema) ? `${acc}${PatternNumber}` : IsString3(schema) ? `${acc}${PatternString}` : IsLiteral(schema) ? `${acc}${Escape(schema.const.toString())}` : IsBoolean3(schema) ? `${acc}${PatternBoolean}` : (() => {
    throw new TemplateLiteralPatternError(`Unexpected Kind '${schema[Kind]}'`);
  })();
}
function TemplateLiteralPattern(kinds) {
  return `^${kinds.map((schema) => Visit2(schema, "")).join("")}$`;
}

// node_modules/@sinclair/typebox/build/esm/type/template-literal/union.mjs
function TemplateLiteralToUnion(schema) {
  const R8 = TemplateLiteralGenerate(schema);
  const L5 = R8.map((S8) => Literal(S8));
  return UnionEvaluated(L5);
}

// node_modules/@sinclair/typebox/build/esm/type/template-literal/template-literal.mjs
function TemplateLiteral(unresolved, options) {
  const pattern = IsString(unresolved) ? TemplateLiteralPattern(TemplateLiteralSyntax(unresolved)) : TemplateLiteralPattern(unresolved);
  return CreateType({ [Kind]: "TemplateLiteral", type: "string", pattern }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-property-keys.mjs
function FromTemplateLiteral(templateLiteral) {
  const keys = TemplateLiteralGenerate(templateLiteral);
  return keys.map((key) => key.toString());
}
function FromUnion2(types) {
  const result = [];
  for (const type of types)
    result.push(...IndexPropertyKeys(type));
  return result;
}
function FromLiteral(literalValue) {
  return [literalValue.toString()];
}
function IndexPropertyKeys(type) {
  return [...new Set(IsTemplateLiteral(type) ? FromTemplateLiteral(type) : IsUnion(type) ? FromUnion2(type.anyOf) : IsLiteral(type) ? FromLiteral(type.const) : IsNumber3(type) ? ["[number]"] : IsInteger2(type) ? ["[number]"] : [])];
}

// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-result.mjs
function FromProperties(type, properties, options) {
  const result = {};
  for (const K22 of Object.getOwnPropertyNames(properties)) {
    result[K22] = Index(type, IndexPropertyKeys(properties[K22]), options);
  }
  return result;
}
function FromMappedResult(type, mappedResult, options) {
  return FromProperties(type, mappedResult.properties, options);
}
function IndexFromMappedResult(type, mappedResult, options) {
  const properties = FromMappedResult(type, mappedResult, options);
  return MappedResult(properties);
}

// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed.mjs
function FromRest(types, key) {
  return types.map((type) => IndexFromPropertyKey(type, key));
}
function FromIntersectRest(types) {
  return types.filter((type) => !IsNever(type));
}
function FromIntersect(types, key) {
  return IntersectEvaluated(FromIntersectRest(FromRest(types, key)));
}
function FromUnionRest(types) {
  return types.some((L5) => IsNever(L5)) ? [] : types;
}
function FromUnion3(types, key) {
  return UnionEvaluated(FromUnionRest(FromRest(types, key)));
}
function FromTuple(types, key) {
  return key in types ? types[key] : key === "[number]" ? UnionEvaluated(types) : Never();
}
function FromArray(type, key) {
  return key === "[number]" ? type : Never();
}
function FromProperty(properties, propertyKey) {
  return propertyKey in properties ? properties[propertyKey] : Never();
}
function IndexFromPropertyKey(type, propertyKey) {
  return IsIntersect(type) ? FromIntersect(type.allOf, propertyKey) : IsUnion(type) ? FromUnion3(type.anyOf, propertyKey) : IsTuple(type) ? FromTuple(type.items ?? [], propertyKey) : IsArray3(type) ? FromArray(type.items, propertyKey) : IsObject3(type) ? FromProperty(type.properties, propertyKey) : Never();
}
function IndexFromPropertyKeys(type, propertyKeys) {
  return propertyKeys.map((propertyKey) => IndexFromPropertyKey(type, propertyKey));
}
function FromSchema(type, propertyKeys) {
  return UnionEvaluated(IndexFromPropertyKeys(type, propertyKeys));
}
function Index(type, key, options) {
  if (IsRef(type) || IsRef(key)) {
    const error = `Index types using Ref parameters require both Type and Key to be of TSchema`;
    if (!IsSchema(type) || !IsSchema(key))
      throw new TypeBoxError(error);
    return Computed("Index", [type, key]);
  }
  if (IsMappedResult(key))
    return IndexFromMappedResult(type, key, options);
  if (IsMappedKey(key))
    return IndexFromMappedKey(type, key, options);
  return CreateType(IsSchema(key) ? FromSchema(type, IndexPropertyKeys(key)) : FromSchema(type, key), options);
}

// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-key.mjs
function MappedIndexPropertyKey(type, key, options) {
  return { [key]: Index(type, [key], Clone(options)) };
}
function MappedIndexPropertyKeys(type, propertyKeys, options) {
  return propertyKeys.reduce((result, left) => {
    return { ...result, ...MappedIndexPropertyKey(type, left, options) };
  }, {});
}
function MappedIndexProperties(type, mappedKey, options) {
  return MappedIndexPropertyKeys(type, mappedKey.keys, options);
}
function IndexFromMappedKey(type, mappedKey, options) {
  const properties = MappedIndexProperties(type, mappedKey, options);
  return MappedResult(properties);
}

// node_modules/@sinclair/typebox/build/esm/type/iterator/iterator.mjs
function Iterator(items, options) {
  return CreateType({ [Kind]: "Iterator", type: "Iterator", items }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/object/object.mjs
function RequiredKeys(properties) {
  const keys = [];
  for (let key in properties) {
    if (!IsOptional(properties[key]))
      keys.push(key);
  }
  return keys;
}
function _Object(properties, options) {
  const required = RequiredKeys(properties);
  const schematic = required.length > 0 ? { [Kind]: "Object", type: "object", properties, required } : { [Kind]: "Object", type: "object", properties };
  return CreateType(schematic, options);
}
var Object2 = _Object;

// node_modules/@sinclair/typebox/build/esm/type/promise/promise.mjs
function Promise2(item, options) {
  return CreateType({ [Kind]: "Promise", type: "Promise", item }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/readonly/readonly.mjs
function RemoveReadonly(schema) {
  return CreateType(Discard(schema, [ReadonlyKind]));
}
function AddReadonly(schema) {
  return CreateType({ ...schema, [ReadonlyKind]: "Readonly" });
}
function ReadonlyWithFlag(schema, F4) {
  return F4 === false ? RemoveReadonly(schema) : AddReadonly(schema);
}
function Readonly(schema, enable) {
  const F4 = enable ?? true;
  return IsMappedResult(schema) ? ReadonlyFromMappedResult(schema, F4) : ReadonlyWithFlag(schema, F4);
}

// node_modules/@sinclair/typebox/build/esm/type/readonly/readonly-from-mapped-result.mjs
function FromProperties2(K6, F4) {
  const Acc = {};
  for (const K22 of globalThis.Object.getOwnPropertyNames(K6))
    Acc[K22] = Readonly(K6[K22], F4);
  return Acc;
}
function FromMappedResult2(R8, F4) {
  return FromProperties2(R8.properties, F4);
}
function ReadonlyFromMappedResult(R8, F4) {
  const P10 = FromMappedResult2(R8, F4);
  return MappedResult(P10);
}

// node_modules/@sinclair/typebox/build/esm/type/tuple/tuple.mjs
function Tuple(types, options) {
  return CreateType(types.length > 0 ? { [Kind]: "Tuple", type: "array", items: types, additionalItems: false, minItems: types.length, maxItems: types.length } : { [Kind]: "Tuple", type: "array", minItems: types.length, maxItems: types.length }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/mapped/mapped.mjs
function FromMappedResult3(K6, P10) {
  return K6 in P10 ? FromSchemaType(K6, P10[K6]) : MappedResult(P10);
}
function MappedKeyToKnownMappedResultProperties(K6) {
  return { [K6]: Literal(K6) };
}
function MappedKeyToUnknownMappedResultProperties(P10) {
  const Acc = {};
  for (const L5 of P10)
    Acc[L5] = Literal(L5);
  return Acc;
}
function MappedKeyToMappedResultProperties(K6, P10) {
  return SetIncludes(P10, K6) ? MappedKeyToKnownMappedResultProperties(K6) : MappedKeyToUnknownMappedResultProperties(P10);
}
function FromMappedKey(K6, P10) {
  const R8 = MappedKeyToMappedResultProperties(K6, P10);
  return FromMappedResult3(K6, R8);
}
function FromRest2(K6, T9) {
  return T9.map((L5) => FromSchemaType(K6, L5));
}
function FromProperties3(K6, T9) {
  const Acc = {};
  for (const K22 of globalThis.Object.getOwnPropertyNames(T9))
    Acc[K22] = FromSchemaType(K6, T9[K22]);
  return Acc;
}
function FromSchemaType(K6, T9) {
  const options = { ...T9 };
  return (
    // unevaluated modifier types
    IsOptional(T9) ? Optional(FromSchemaType(K6, Discard(T9, [OptionalKind]))) : IsReadonly(T9) ? Readonly(FromSchemaType(K6, Discard(T9, [ReadonlyKind]))) : (
      // unevaluated mapped types
      IsMappedResult(T9) ? FromMappedResult3(K6, T9.properties) : IsMappedKey(T9) ? FromMappedKey(K6, T9.keys) : (
        // unevaluated types
        IsConstructor(T9) ? Constructor(FromRest2(K6, T9.parameters), FromSchemaType(K6, T9.returns), options) : IsFunction3(T9) ? Function2(FromRest2(K6, T9.parameters), FromSchemaType(K6, T9.returns), options) : IsAsyncIterator3(T9) ? AsyncIterator(FromSchemaType(K6, T9.items), options) : IsIterator3(T9) ? Iterator(FromSchemaType(K6, T9.items), options) : IsIntersect(T9) ? Intersect(FromRest2(K6, T9.allOf), options) : IsUnion(T9) ? Union(FromRest2(K6, T9.anyOf), options) : IsTuple(T9) ? Tuple(FromRest2(K6, T9.items ?? []), options) : IsObject3(T9) ? Object2(FromProperties3(K6, T9.properties), options) : IsArray3(T9) ? Array2(FromSchemaType(K6, T9.items), options) : IsPromise2(T9) ? Promise2(FromSchemaType(K6, T9.item), options) : T9
      )
    )
  );
}
function MappedFunctionReturnType(K6, T9) {
  const Acc = {};
  for (const L5 of K6)
    Acc[L5] = FromSchemaType(L5, T9);
  return Acc;
}
function Mapped(key, map3, options) {
  const K6 = IsSchema(key) ? IndexPropertyKeys(key) : key;
  const RT = map3({ [Kind]: "MappedKey", keys: K6 });
  const R8 = MappedFunctionReturnType(K6, RT);
  return Object2(R8, options);
}

// node_modules/@sinclair/typebox/build/esm/type/optional/optional.mjs
function RemoveOptional(schema) {
  return CreateType(Discard(schema, [OptionalKind]));
}
function AddOptional(schema) {
  return CreateType({ ...schema, [OptionalKind]: "Optional" });
}
function OptionalWithFlag(schema, F4) {
  return F4 === false ? RemoveOptional(schema) : AddOptional(schema);
}
function Optional(schema, enable) {
  const F4 = enable ?? true;
  return IsMappedResult(schema) ? OptionalFromMappedResult(schema, F4) : OptionalWithFlag(schema, F4);
}

// node_modules/@sinclair/typebox/build/esm/type/optional/optional-from-mapped-result.mjs
function FromProperties4(P10, F4) {
  const Acc = {};
  for (const K22 of globalThis.Object.getOwnPropertyNames(P10))
    Acc[K22] = Optional(P10[K22], F4);
  return Acc;
}
function FromMappedResult4(R8, F4) {
  return FromProperties4(R8.properties, F4);
}
function OptionalFromMappedResult(R8, F4) {
  const P10 = FromMappedResult4(R8, F4);
  return MappedResult(P10);
}

// node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-create.mjs
function IntersectCreate(T9, options = {}) {
  const allObjects = T9.every((schema) => IsObject3(schema));
  const clonedUnevaluatedProperties = IsSchema(options.unevaluatedProperties) ? { unevaluatedProperties: options.unevaluatedProperties } : {};
  return CreateType(options.unevaluatedProperties === false || IsSchema(options.unevaluatedProperties) || allObjects ? { ...clonedUnevaluatedProperties, [Kind]: "Intersect", type: "object", allOf: T9 } : { ...clonedUnevaluatedProperties, [Kind]: "Intersect", allOf: T9 }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-evaluated.mjs
function IsIntersectOptional(types) {
  return types.every((left) => IsOptional(left));
}
function RemoveOptionalFromType2(type) {
  return Discard(type, [OptionalKind]);
}
function RemoveOptionalFromRest2(types) {
  return types.map((left) => IsOptional(left) ? RemoveOptionalFromType2(left) : left);
}
function ResolveIntersect(types, options) {
  return IsIntersectOptional(types) ? Optional(IntersectCreate(RemoveOptionalFromRest2(types), options)) : IntersectCreate(RemoveOptionalFromRest2(types), options);
}
function IntersectEvaluated(types, options = {}) {
  if (types.length === 1)
    return CreateType(types[0], options);
  if (types.length === 0)
    return Never(options);
  if (types.some((schema) => IsTransform(schema)))
    throw new Error("Cannot intersect transform types");
  return ResolveIntersect(types, options);
}

// node_modules/@sinclair/typebox/build/esm/type/intersect/intersect.mjs
function Intersect(types, options) {
  if (types.length === 1)
    return CreateType(types[0], options);
  if (types.length === 0)
    return Never(options);
  if (types.some((schema) => IsTransform(schema)))
    throw new Error("Cannot intersect transform types");
  return IntersectCreate(types, options);
}

// node_modules/@sinclair/typebox/build/esm/type/ref/ref.mjs
function Ref(...args) {
  const [$ref, options] = typeof args[0] === "string" ? [args[0], args[1]] : [args[0].$id, args[1]];
  if (typeof $ref !== "string")
    throw new TypeBoxError("Ref: $ref must be a string");
  return CreateType({ [Kind]: "Ref", $ref }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/awaited/awaited.mjs
function FromComputed(target, parameters) {
  return Computed("Awaited", [Computed(target, parameters)]);
}
function FromRef($ref) {
  return Computed("Awaited", [Ref($ref)]);
}
function FromIntersect2(types) {
  return Intersect(FromRest3(types));
}
function FromUnion4(types) {
  return Union(FromRest3(types));
}
function FromPromise(type) {
  return Awaited(type);
}
function FromRest3(types) {
  return types.map((type) => Awaited(type));
}
function Awaited(type, options) {
  return CreateType(IsComputed(type) ? FromComputed(type.target, type.parameters) : IsIntersect(type) ? FromIntersect2(type.allOf) : IsUnion(type) ? FromUnion4(type.anyOf) : IsPromise2(type) ? FromPromise(type.item) : IsRef(type) ? FromRef(type.$ref) : type, options);
}

// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-keys.mjs
function FromRest4(types) {
  const result = [];
  for (const L5 of types)
    result.push(KeyOfPropertyKeys(L5));
  return result;
}
function FromIntersect3(types) {
  const propertyKeysArray = FromRest4(types);
  const propertyKeys = SetUnionMany(propertyKeysArray);
  return propertyKeys;
}
function FromUnion5(types) {
  const propertyKeysArray = FromRest4(types);
  const propertyKeys = SetIntersectMany(propertyKeysArray);
  return propertyKeys;
}
function FromTuple2(types) {
  return types.map((_22, indexer) => indexer.toString());
}
function FromArray2(_22) {
  return ["[number]"];
}
function FromProperties5(T9) {
  return globalThis.Object.getOwnPropertyNames(T9);
}
function FromPatternProperties(patternProperties) {
  if (!includePatternProperties)
    return [];
  const patternPropertyKeys = globalThis.Object.getOwnPropertyNames(patternProperties);
  return patternPropertyKeys.map((key) => {
    return key[0] === "^" && key[key.length - 1] === "$" ? key.slice(1, key.length - 1) : key;
  });
}
function KeyOfPropertyKeys(type) {
  return IsIntersect(type) ? FromIntersect3(type.allOf) : IsUnion(type) ? FromUnion5(type.anyOf) : IsTuple(type) ? FromTuple2(type.items ?? []) : IsArray3(type) ? FromArray2(type.items) : IsObject3(type) ? FromProperties5(type.properties) : IsRecord(type) ? FromPatternProperties(type.patternProperties) : [];
}
var includePatternProperties = false;
function KeyOfPattern(schema) {
  includePatternProperties = true;
  const keys = KeyOfPropertyKeys(schema);
  includePatternProperties = false;
  const pattern = keys.map((key) => `(${key})`);
  return `^(${pattern.join("|")})$`;
}

// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof.mjs
function FromComputed2(target, parameters) {
  return Computed("KeyOf", [Computed(target, parameters)]);
}
function FromRef2($ref) {
  return Computed("KeyOf", [Ref($ref)]);
}
function KeyOfFromType(type, options) {
  const propertyKeys = KeyOfPropertyKeys(type);
  const propertyKeyTypes = KeyOfPropertyKeysToRest(propertyKeys);
  const result = UnionEvaluated(propertyKeyTypes);
  return CreateType(result, options);
}
function KeyOfPropertyKeysToRest(propertyKeys) {
  return propertyKeys.map((L5) => L5 === "[number]" ? Number2() : Literal(L5));
}
function KeyOf(type, options) {
  return IsComputed(type) ? FromComputed2(type.target, type.parameters) : IsRef(type) ? FromRef2(type.$ref) : IsMappedResult(type) ? KeyOfFromMappedResult(type, options) : KeyOfFromType(type, options);
}

// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-from-mapped-result.mjs
function FromProperties6(properties, options) {
  const result = {};
  for (const K22 of globalThis.Object.getOwnPropertyNames(properties))
    result[K22] = KeyOf(properties[K22], Clone(options));
  return result;
}
function FromMappedResult5(mappedResult, options) {
  return FromProperties6(mappedResult.properties, options);
}
function KeyOfFromMappedResult(mappedResult, options) {
  const properties = FromMappedResult5(mappedResult, options);
  return MappedResult(properties);
}

// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-entries.mjs
function KeyOfPropertyEntries(schema) {
  const keys = KeyOfPropertyKeys(schema);
  const schemas = IndexFromPropertyKeys(schema, keys);
  return keys.map((_22, index) => [keys[index], schemas[index]]);
}

// node_modules/@sinclair/typebox/build/esm/type/composite/composite.mjs
function CompositeKeys(T9) {
  const Acc = [];
  for (const L5 of T9)
    Acc.push(...KeyOfPropertyKeys(L5));
  return SetDistinct(Acc);
}
function FilterNever(T9) {
  return T9.filter((L5) => !IsNever(L5));
}
function CompositeProperty(T9, K6) {
  const Acc = [];
  for (const L5 of T9)
    Acc.push(...IndexFromPropertyKeys(L5, [K6]));
  return FilterNever(Acc);
}
function CompositeProperties(T9, K6) {
  const Acc = {};
  for (const L5 of K6) {
    Acc[L5] = IntersectEvaluated(CompositeProperty(T9, L5));
  }
  return Acc;
}
function Composite(T9, options) {
  const K6 = CompositeKeys(T9);
  const P10 = CompositeProperties(T9, K6);
  const R8 = Object2(P10, options);
  return R8;
}

// node_modules/@sinclair/typebox/build/esm/type/date/date.mjs
function Date2(options) {
  return CreateType({ [Kind]: "Date", type: "Date" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/null/null.mjs
function Null(options) {
  return CreateType({ [Kind]: "Null", type: "null" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/symbol/symbol.mjs
function Symbol2(options) {
  return CreateType({ [Kind]: "Symbol", type: "symbol" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/undefined/undefined.mjs
function Undefined(options) {
  return CreateType({ [Kind]: "Undefined", type: "undefined" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/uint8array/uint8array.mjs
function Uint8Array2(options) {
  return CreateType({ [Kind]: "Uint8Array", type: "Uint8Array" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/unknown/unknown.mjs
function Unknown(options) {
  return CreateType({ [Kind]: "Unknown" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/const/const.mjs
function FromArray3(T9) {
  return T9.map((L5) => FromValue(L5, false));
}
function FromProperties7(value) {
  const Acc = {};
  for (const K6 of globalThis.Object.getOwnPropertyNames(value))
    Acc[K6] = Readonly(FromValue(value[K6], false));
  return Acc;
}
function ConditionalReadonly(T9, root) {
  return root === true ? T9 : Readonly(T9);
}
function FromValue(value, root) {
  return IsAsyncIterator(value) ? ConditionalReadonly(Any(), root) : IsIterator(value) ? ConditionalReadonly(Any(), root) : IsArray(value) ? Readonly(Tuple(FromArray3(value))) : IsUint8Array(value) ? Uint8Array2() : IsDate(value) ? Date2() : IsObject(value) ? ConditionalReadonly(Object2(FromProperties7(value)), root) : IsFunction(value) ? ConditionalReadonly(Function2([], Unknown()), root) : IsUndefined(value) ? Undefined() : IsNull(value) ? Null() : IsSymbol(value) ? Symbol2() : IsBigInt(value) ? BigInt2() : IsNumber(value) ? Literal(value) : IsBoolean(value) ? Literal(value) : IsString(value) ? Literal(value) : Object2({});
}
function Const(T9, options) {
  return CreateType(FromValue(T9, true), options);
}

// node_modules/@sinclair/typebox/build/esm/type/constructor-parameters/constructor-parameters.mjs
function ConstructorParameters(schema, options) {
  return IsConstructor(schema) ? Tuple(schema.parameters, options) : Never(options);
}

// node_modules/@sinclair/typebox/build/esm/type/enum/enum.mjs
function Enum(item, options) {
  if (IsUndefined(item))
    throw new Error("Enum undefined or empty");
  const values1 = globalThis.Object.getOwnPropertyNames(item).filter((key) => isNaN(key)).map((key) => item[key]);
  const values2 = [...new Set(values1)];
  const anyOf = values2.map((value) => Literal(value));
  return Union(anyOf, { ...options, [Hint]: "Enum" });
}

// node_modules/@sinclair/typebox/build/esm/type/extends/extends-check.mjs
var ExtendsResolverError = class extends TypeBoxError {
};
var ExtendsResult;
(function(ExtendsResult2) {
  ExtendsResult2[ExtendsResult2["Union"] = 0] = "Union";
  ExtendsResult2[ExtendsResult2["True"] = 1] = "True";
  ExtendsResult2[ExtendsResult2["False"] = 2] = "False";
})(ExtendsResult || (ExtendsResult = {}));
function IntoBooleanResult(result) {
  return result === ExtendsResult.False ? result : ExtendsResult.True;
}
function Throw(message) {
  throw new ExtendsResolverError(message);
}
function IsStructuralRight(right) {
  return type_exports.IsNever(right) || type_exports.IsIntersect(right) || type_exports.IsUnion(right) || type_exports.IsUnknown(right) || type_exports.IsAny(right);
}
function StructuralRight(left, right) {
  return type_exports.IsNever(right) ? FromNeverRight(left, right) : type_exports.IsIntersect(right) ? FromIntersectRight(left, right) : type_exports.IsUnion(right) ? FromUnionRight(left, right) : type_exports.IsUnknown(right) ? FromUnknownRight(left, right) : type_exports.IsAny(right) ? FromAnyRight(left, right) : Throw("StructuralRight");
}
function FromAnyRight(left, right) {
  return ExtendsResult.True;
}
function FromAny(left, right) {
  return type_exports.IsIntersect(right) ? FromIntersectRight(left, right) : type_exports.IsUnion(right) && right.anyOf.some((schema) => type_exports.IsAny(schema) || type_exports.IsUnknown(schema)) ? ExtendsResult.True : type_exports.IsUnion(right) ? ExtendsResult.Union : type_exports.IsUnknown(right) ? ExtendsResult.True : type_exports.IsAny(right) ? ExtendsResult.True : ExtendsResult.Union;
}
function FromArrayRight(left, right) {
  return type_exports.IsUnknown(left) ? ExtendsResult.False : type_exports.IsAny(left) ? ExtendsResult.Union : type_exports.IsNever(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromArray4(left, right) {
  return type_exports.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : !type_exports.IsArray(right) ? ExtendsResult.False : IntoBooleanResult(Visit3(left.items, right.items));
}
function FromAsyncIterator(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : !type_exports.IsAsyncIterator(right) ? ExtendsResult.False : IntoBooleanResult(Visit3(left.items, right.items));
}
function FromBigInt(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : type_exports.IsBigInt(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromBooleanRight(left, right) {
  return type_exports.IsLiteralBoolean(left) ? ExtendsResult.True : type_exports.IsBoolean(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromBoolean(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : type_exports.IsBoolean(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromConstructor(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : !type_exports.IsConstructor(right) ? ExtendsResult.False : left.parameters.length > right.parameters.length ? ExtendsResult.False : !left.parameters.every((schema, index) => IntoBooleanResult(Visit3(right.parameters[index], schema)) === ExtendsResult.True) ? ExtendsResult.False : IntoBooleanResult(Visit3(left.returns, right.returns));
}
function FromDate(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : type_exports.IsDate(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromFunction(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : !type_exports.IsFunction(right) ? ExtendsResult.False : left.parameters.length > right.parameters.length ? ExtendsResult.False : !left.parameters.every((schema, index) => IntoBooleanResult(Visit3(right.parameters[index], schema)) === ExtendsResult.True) ? ExtendsResult.False : IntoBooleanResult(Visit3(left.returns, right.returns));
}
function FromIntegerRight(left, right) {
  return type_exports.IsLiteral(left) && value_exports.IsNumber(left.const) ? ExtendsResult.True : type_exports.IsNumber(left) || type_exports.IsInteger(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromInteger(left, right) {
  return type_exports.IsInteger(right) || type_exports.IsNumber(right) ? ExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : ExtendsResult.False;
}
function FromIntersectRight(left, right) {
  return right.allOf.every((schema) => Visit3(left, schema) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromIntersect4(left, right) {
  return left.allOf.some((schema) => Visit3(schema, right) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromIterator(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : !type_exports.IsIterator(right) ? ExtendsResult.False : IntoBooleanResult(Visit3(left.items, right.items));
}
function FromLiteral2(left, right) {
  return type_exports.IsLiteral(right) && right.const === left.const ? ExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : type_exports.IsString(right) ? FromStringRight(left, right) : type_exports.IsNumber(right) ? FromNumberRight(left, right) : type_exports.IsInteger(right) ? FromIntegerRight(left, right) : type_exports.IsBoolean(right) ? FromBooleanRight(left, right) : ExtendsResult.False;
}
function FromNeverRight(left, right) {
  return ExtendsResult.False;
}
function FromNever(left, right) {
  return ExtendsResult.True;
}
function UnwrapTNot(schema) {
  let [current, depth] = [schema, 0];
  while (true) {
    if (!type_exports.IsNot(current))
      break;
    current = current.not;
    depth += 1;
  }
  return depth % 2 === 0 ? current : Unknown();
}
function FromNot(left, right) {
  return type_exports.IsNot(left) ? Visit3(UnwrapTNot(left), right) : type_exports.IsNot(right) ? Visit3(left, UnwrapTNot(right)) : Throw("Invalid fallthrough for Not");
}
function FromNull(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : type_exports.IsNull(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromNumberRight(left, right) {
  return type_exports.IsLiteralNumber(left) ? ExtendsResult.True : type_exports.IsNumber(left) || type_exports.IsInteger(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromNumber(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : type_exports.IsInteger(right) || type_exports.IsNumber(right) ? ExtendsResult.True : ExtendsResult.False;
}
function IsObjectPropertyCount(schema, count) {
  return Object.getOwnPropertyNames(schema.properties).length === count;
}
function IsObjectStringLike(schema) {
  return IsObjectArrayLike(schema);
}
function IsObjectSymbolLike(schema) {
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "description" in schema.properties && type_exports.IsUnion(schema.properties.description) && schema.properties.description.anyOf.length === 2 && (type_exports.IsString(schema.properties.description.anyOf[0]) && type_exports.IsUndefined(schema.properties.description.anyOf[1]) || type_exports.IsString(schema.properties.description.anyOf[1]) && type_exports.IsUndefined(schema.properties.description.anyOf[0]));
}
function IsObjectNumberLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectBooleanLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectBigIntLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectDateLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectUint8ArrayLike(schema) {
  return IsObjectArrayLike(schema);
}
function IsObjectFunctionLike(schema) {
  const length = Number2();
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "length" in schema.properties && IntoBooleanResult(Visit3(schema.properties["length"], length)) === ExtendsResult.True;
}
function IsObjectConstructorLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectArrayLike(schema) {
  const length = Number2();
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "length" in schema.properties && IntoBooleanResult(Visit3(schema.properties["length"], length)) === ExtendsResult.True;
}
function IsObjectPromiseLike(schema) {
  const then = Function2([Any()], Any());
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "then" in schema.properties && IntoBooleanResult(Visit3(schema.properties["then"], then)) === ExtendsResult.True;
}
function Property(left, right) {
  return Visit3(left, right) === ExtendsResult.False ? ExtendsResult.False : type_exports.IsOptional(left) && !type_exports.IsOptional(right) ? ExtendsResult.False : ExtendsResult.True;
}
function FromObjectRight(left, right) {
  return type_exports.IsUnknown(left) ? ExtendsResult.False : type_exports.IsAny(left) ? ExtendsResult.Union : type_exports.IsNever(left) || type_exports.IsLiteralString(left) && IsObjectStringLike(right) || type_exports.IsLiteralNumber(left) && IsObjectNumberLike(right) || type_exports.IsLiteralBoolean(left) && IsObjectBooleanLike(right) || type_exports.IsSymbol(left) && IsObjectSymbolLike(right) || type_exports.IsBigInt(left) && IsObjectBigIntLike(right) || type_exports.IsString(left) && IsObjectStringLike(right) || type_exports.IsSymbol(left) && IsObjectSymbolLike(right) || type_exports.IsNumber(left) && IsObjectNumberLike(right) || type_exports.IsInteger(left) && IsObjectNumberLike(right) || type_exports.IsBoolean(left) && IsObjectBooleanLike(right) || type_exports.IsUint8Array(left) && IsObjectUint8ArrayLike(right) || type_exports.IsDate(left) && IsObjectDateLike(right) || type_exports.IsConstructor(left) && IsObjectConstructorLike(right) || type_exports.IsFunction(left) && IsObjectFunctionLike(right) ? ExtendsResult.True : type_exports.IsRecord(left) && type_exports.IsString(RecordKey(left)) ? (() => {
    return right[Hint] === "Record" ? ExtendsResult.True : ExtendsResult.False;
  })() : type_exports.IsRecord(left) && type_exports.IsNumber(RecordKey(left)) ? (() => {
    return IsObjectPropertyCount(right, 0) ? ExtendsResult.True : ExtendsResult.False;
  })() : ExtendsResult.False;
}
function FromObject(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : !type_exports.IsObject(right) ? ExtendsResult.False : (() => {
    for (const key of Object.getOwnPropertyNames(right.properties)) {
      if (!(key in left.properties) && !type_exports.IsOptional(right.properties[key])) {
        return ExtendsResult.False;
      }
      if (type_exports.IsOptional(right.properties[key])) {
        return ExtendsResult.True;
      }
      if (Property(left.properties[key], right.properties[key]) === ExtendsResult.False) {
        return ExtendsResult.False;
      }
    }
    return ExtendsResult.True;
  })();
}
function FromPromise2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) && IsObjectPromiseLike(right) ? ExtendsResult.True : !type_exports.IsPromise(right) ? ExtendsResult.False : IntoBooleanResult(Visit3(left.item, right.item));
}
function RecordKey(schema) {
  return PatternNumberExact in schema.patternProperties ? Number2() : PatternStringExact in schema.patternProperties ? String2() : Throw("Unknown record key pattern");
}
function RecordValue(schema) {
  return PatternNumberExact in schema.patternProperties ? schema.patternProperties[PatternNumberExact] : PatternStringExact in schema.patternProperties ? schema.patternProperties[PatternStringExact] : Throw("Unable to get record value schema");
}
function FromRecordRight(left, right) {
  const [Key, Value] = [RecordKey(right), RecordValue(right)];
  return type_exports.IsLiteralString(left) && type_exports.IsNumber(Key) && IntoBooleanResult(Visit3(left, Value)) === ExtendsResult.True ? ExtendsResult.True : type_exports.IsUint8Array(left) && type_exports.IsNumber(Key) ? Visit3(left, Value) : type_exports.IsString(left) && type_exports.IsNumber(Key) ? Visit3(left, Value) : type_exports.IsArray(left) && type_exports.IsNumber(Key) ? Visit3(left, Value) : type_exports.IsObject(left) ? (() => {
    for (const key of Object.getOwnPropertyNames(left.properties)) {
      if (Property(Value, left.properties[key]) === ExtendsResult.False) {
        return ExtendsResult.False;
      }
    }
    return ExtendsResult.True;
  })() : ExtendsResult.False;
}
function FromRecord(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : !type_exports.IsRecord(right) ? ExtendsResult.False : Visit3(RecordValue(left), RecordValue(right));
}
function FromRegExp(left, right) {
  const L5 = type_exports.IsRegExp(left) ? String2() : left;
  const R8 = type_exports.IsRegExp(right) ? String2() : right;
  return Visit3(L5, R8);
}
function FromStringRight(left, right) {
  return type_exports.IsLiteral(left) && value_exports.IsString(left.const) ? ExtendsResult.True : type_exports.IsString(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromString(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : type_exports.IsString(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromSymbol(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : type_exports.IsSymbol(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromTemplateLiteral2(left, right) {
  return type_exports.IsTemplateLiteral(left) ? Visit3(TemplateLiteralToUnion(left), right) : type_exports.IsTemplateLiteral(right) ? Visit3(left, TemplateLiteralToUnion(right)) : Throw("Invalid fallthrough for TemplateLiteral");
}
function IsArrayOfTuple(left, right) {
  return type_exports.IsArray(right) && left.items !== void 0 && left.items.every((schema) => Visit3(schema, right.items) === ExtendsResult.True);
}
function FromTupleRight(left, right) {
  return type_exports.IsNever(left) ? ExtendsResult.True : type_exports.IsUnknown(left) ? ExtendsResult.False : type_exports.IsAny(left) ? ExtendsResult.Union : ExtendsResult.False;
}
function FromTuple3(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True : type_exports.IsArray(right) && IsArrayOfTuple(left, right) ? ExtendsResult.True : !type_exports.IsTuple(right) ? ExtendsResult.False : value_exports.IsUndefined(left.items) && !value_exports.IsUndefined(right.items) || !value_exports.IsUndefined(left.items) && value_exports.IsUndefined(right.items) ? ExtendsResult.False : value_exports.IsUndefined(left.items) && !value_exports.IsUndefined(right.items) ? ExtendsResult.True : left.items.every((schema, index) => Visit3(schema, right.items[index]) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUint8Array(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : type_exports.IsUint8Array(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUndefined(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsRecord(right) ? FromRecordRight(left, right) : type_exports.IsVoid(right) ? FromVoidRight(left, right) : type_exports.IsUndefined(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUnionRight(left, right) {
  return right.anyOf.some((schema) => Visit3(left, schema) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUnion6(left, right) {
  return left.anyOf.every((schema) => Visit3(schema, right) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUnknownRight(left, right) {
  return ExtendsResult.True;
}
function FromUnknown(left, right) {
  return type_exports.IsNever(right) ? FromNeverRight(left, right) : type_exports.IsIntersect(right) ? FromIntersectRight(left, right) : type_exports.IsUnion(right) ? FromUnionRight(left, right) : type_exports.IsAny(right) ? FromAnyRight(left, right) : type_exports.IsString(right) ? FromStringRight(left, right) : type_exports.IsNumber(right) ? FromNumberRight(left, right) : type_exports.IsInteger(right) ? FromIntegerRight(left, right) : type_exports.IsBoolean(right) ? FromBooleanRight(left, right) : type_exports.IsArray(right) ? FromArrayRight(left, right) : type_exports.IsTuple(right) ? FromTupleRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsUnknown(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromVoidRight(left, right) {
  return type_exports.IsUndefined(left) ? ExtendsResult.True : type_exports.IsUndefined(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromVoid(left, right) {
  return type_exports.IsIntersect(right) ? FromIntersectRight(left, right) : type_exports.IsUnion(right) ? FromUnionRight(left, right) : type_exports.IsUnknown(right) ? FromUnknownRight(left, right) : type_exports.IsAny(right) ? FromAnyRight(left, right) : type_exports.IsObject(right) ? FromObjectRight(left, right) : type_exports.IsVoid(right) ? ExtendsResult.True : ExtendsResult.False;
}
function Visit3(left, right) {
  return (
    // resolvable
    type_exports.IsTemplateLiteral(left) || type_exports.IsTemplateLiteral(right) ? FromTemplateLiteral2(left, right) : type_exports.IsRegExp(left) || type_exports.IsRegExp(right) ? FromRegExp(left, right) : type_exports.IsNot(left) || type_exports.IsNot(right) ? FromNot(left, right) : (
      // standard
      type_exports.IsAny(left) ? FromAny(left, right) : type_exports.IsArray(left) ? FromArray4(left, right) : type_exports.IsBigInt(left) ? FromBigInt(left, right) : type_exports.IsBoolean(left) ? FromBoolean(left, right) : type_exports.IsAsyncIterator(left) ? FromAsyncIterator(left, right) : type_exports.IsConstructor(left) ? FromConstructor(left, right) : type_exports.IsDate(left) ? FromDate(left, right) : type_exports.IsFunction(left) ? FromFunction(left, right) : type_exports.IsInteger(left) ? FromInteger(left, right) : type_exports.IsIntersect(left) ? FromIntersect4(left, right) : type_exports.IsIterator(left) ? FromIterator(left, right) : type_exports.IsLiteral(left) ? FromLiteral2(left, right) : type_exports.IsNever(left) ? FromNever(left, right) : type_exports.IsNull(left) ? FromNull(left, right) : type_exports.IsNumber(left) ? FromNumber(left, right) : type_exports.IsObject(left) ? FromObject(left, right) : type_exports.IsRecord(left) ? FromRecord(left, right) : type_exports.IsString(left) ? FromString(left, right) : type_exports.IsSymbol(left) ? FromSymbol(left, right) : type_exports.IsTuple(left) ? FromTuple3(left, right) : type_exports.IsPromise(left) ? FromPromise2(left, right) : type_exports.IsUint8Array(left) ? FromUint8Array(left, right) : type_exports.IsUndefined(left) ? FromUndefined(left, right) : type_exports.IsUnion(left) ? FromUnion6(left, right) : type_exports.IsUnknown(left) ? FromUnknown(left, right) : type_exports.IsVoid(left) ? FromVoid(left, right) : Throw(`Unknown left type operand '${left[Kind]}'`)
    )
  );
}
function ExtendsCheck(left, right) {
  return Visit3(left, right);
}

// node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-result.mjs
function FromProperties8(P10, Right, True, False, options) {
  const Acc = {};
  for (const K22 of globalThis.Object.getOwnPropertyNames(P10))
    Acc[K22] = Extends(P10[K22], Right, True, False, Clone(options));
  return Acc;
}
function FromMappedResult6(Left, Right, True, False, options) {
  return FromProperties8(Left.properties, Right, True, False, options);
}
function ExtendsFromMappedResult(Left, Right, True, False, options) {
  const P10 = FromMappedResult6(Left, Right, True, False, options);
  return MappedResult(P10);
}

// node_modules/@sinclair/typebox/build/esm/type/extends/extends.mjs
function ExtendsResolve(left, right, trueType, falseType) {
  const R8 = ExtendsCheck(left, right);
  return R8 === ExtendsResult.Union ? Union([trueType, falseType]) : R8 === ExtendsResult.True ? trueType : falseType;
}
function Extends(L5, R8, T9, F4, options) {
  return IsMappedResult(L5) ? ExtendsFromMappedResult(L5, R8, T9, F4, options) : IsMappedKey(L5) ? CreateType(ExtendsFromMappedKey(L5, R8, T9, F4, options)) : CreateType(ExtendsResolve(L5, R8, T9, F4), options);
}

// node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-key.mjs
function FromPropertyKey(K6, U6, L5, R8, options) {
  return {
    [K6]: Extends(Literal(K6), U6, L5, R8, Clone(options))
  };
}
function FromPropertyKeys(K6, U6, L5, R8, options) {
  return K6.reduce((Acc, LK) => {
    return { ...Acc, ...FromPropertyKey(LK, U6, L5, R8, options) };
  }, {});
}
function FromMappedKey2(K6, U6, L5, R8, options) {
  return FromPropertyKeys(K6.keys, U6, L5, R8, options);
}
function ExtendsFromMappedKey(T9, U6, L5, R8, options) {
  const P10 = FromMappedKey2(T9, U6, L5, R8, options);
  return MappedResult(P10);
}

// node_modules/@sinclair/typebox/build/esm/type/extends/extends-undefined.mjs
function Intersect2(schema) {
  return schema.allOf.every((schema2) => ExtendsUndefinedCheck(schema2));
}
function Union2(schema) {
  return schema.anyOf.some((schema2) => ExtendsUndefinedCheck(schema2));
}
function Not(schema) {
  return !ExtendsUndefinedCheck(schema.not);
}
function ExtendsUndefinedCheck(schema) {
  return schema[Kind] === "Intersect" ? Intersect2(schema) : schema[Kind] === "Union" ? Union2(schema) : schema[Kind] === "Not" ? Not(schema) : schema[Kind] === "Undefined" ? true : false;
}

// node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-template-literal.mjs
function ExcludeFromTemplateLiteral(L5, R8) {
  return Exclude(TemplateLiteralToUnion(L5), R8);
}

// node_modules/@sinclair/typebox/build/esm/type/exclude/exclude.mjs
function ExcludeRest(L5, R8) {
  const excluded = L5.filter((inner) => ExtendsCheck(inner, R8) === ExtendsResult.False);
  return excluded.length === 1 ? excluded[0] : Union(excluded);
}
function Exclude(L5, R8, options = {}) {
  if (IsTemplateLiteral(L5))
    return CreateType(ExcludeFromTemplateLiteral(L5, R8), options);
  if (IsMappedResult(L5))
    return CreateType(ExcludeFromMappedResult(L5, R8), options);
  return CreateType(IsUnion(L5) ? ExcludeRest(L5.anyOf, R8) : ExtendsCheck(L5, R8) !== ExtendsResult.False ? Never() : L5, options);
}

// node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-mapped-result.mjs
function FromProperties9(P10, U6) {
  const Acc = {};
  for (const K22 of globalThis.Object.getOwnPropertyNames(P10))
    Acc[K22] = Exclude(P10[K22], U6);
  return Acc;
}
function FromMappedResult7(R8, T9) {
  return FromProperties9(R8.properties, T9);
}
function ExcludeFromMappedResult(R8, T9) {
  const P10 = FromMappedResult7(R8, T9);
  return MappedResult(P10);
}

// node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-template-literal.mjs
function ExtractFromTemplateLiteral(L5, R8) {
  return Extract(TemplateLiteralToUnion(L5), R8);
}

// node_modules/@sinclair/typebox/build/esm/type/extract/extract.mjs
function ExtractRest(L5, R8) {
  const extracted = L5.filter((inner) => ExtendsCheck(inner, R8) !== ExtendsResult.False);
  return extracted.length === 1 ? extracted[0] : Union(extracted);
}
function Extract(L5, R8, options) {
  if (IsTemplateLiteral(L5))
    return CreateType(ExtractFromTemplateLiteral(L5, R8), options);
  if (IsMappedResult(L5))
    return CreateType(ExtractFromMappedResult(L5, R8), options);
  return CreateType(IsUnion(L5) ? ExtractRest(L5.anyOf, R8) : ExtendsCheck(L5, R8) !== ExtendsResult.False ? L5 : Never(), options);
}

// node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-mapped-result.mjs
function FromProperties10(P10, T9) {
  const Acc = {};
  for (const K22 of globalThis.Object.getOwnPropertyNames(P10))
    Acc[K22] = Extract(P10[K22], T9);
  return Acc;
}
function FromMappedResult8(R8, T9) {
  return FromProperties10(R8.properties, T9);
}
function ExtractFromMappedResult(R8, T9) {
  const P10 = FromMappedResult8(R8, T9);
  return MappedResult(P10);
}

// node_modules/@sinclair/typebox/build/esm/type/instance-type/instance-type.mjs
function InstanceType(schema, options) {
  return IsConstructor(schema) ? CreateType(schema.returns, options) : Never(options);
}

// node_modules/@sinclair/typebox/build/esm/type/readonly-optional/readonly-optional.mjs
function ReadonlyOptional(schema) {
  return Readonly(Optional(schema));
}

// node_modules/@sinclair/typebox/build/esm/type/record/record.mjs
function RecordCreateFromPattern(pattern, T9, options) {
  return CreateType({ [Kind]: "Record", type: "object", patternProperties: { [pattern]: T9 } }, options);
}
function RecordCreateFromKeys(K6, T9, options) {
  const result = {};
  for (const K22 of K6)
    result[K22] = T9;
  return Object2(result, { ...options, [Hint]: "Record" });
}
function FromTemplateLiteralKey(K6, T9, options) {
  return IsTemplateLiteralFinite(K6) ? RecordCreateFromKeys(IndexPropertyKeys(K6), T9, options) : RecordCreateFromPattern(K6.pattern, T9, options);
}
function FromUnionKey(key, type, options) {
  return RecordCreateFromKeys(IndexPropertyKeys(Union(key)), type, options);
}
function FromLiteralKey(key, type, options) {
  return RecordCreateFromKeys([key.toString()], type, options);
}
function FromRegExpKey(key, type, options) {
  return RecordCreateFromPattern(key.source, type, options);
}
function FromStringKey(key, type, options) {
  const pattern = IsUndefined(key.pattern) ? PatternStringExact : key.pattern;
  return RecordCreateFromPattern(pattern, type, options);
}
function FromAnyKey(_22, type, options) {
  return RecordCreateFromPattern(PatternStringExact, type, options);
}
function FromNeverKey(_key, type, options) {
  return RecordCreateFromPattern(PatternNeverExact, type, options);
}
function FromBooleanKey(_key, type, options) {
  return Object2({ true: type, false: type }, options);
}
function FromIntegerKey(_key, type, options) {
  return RecordCreateFromPattern(PatternNumberExact, type, options);
}
function FromNumberKey(_22, type, options) {
  return RecordCreateFromPattern(PatternNumberExact, type, options);
}
function Record(key, type, options = {}) {
  return IsUnion(key) ? FromUnionKey(key.anyOf, type, options) : IsTemplateLiteral(key) ? FromTemplateLiteralKey(key, type, options) : IsLiteral(key) ? FromLiteralKey(key.const, type, options) : IsBoolean3(key) ? FromBooleanKey(key, type, options) : IsInteger2(key) ? FromIntegerKey(key, type, options) : IsNumber3(key) ? FromNumberKey(key, type, options) : IsRegExp2(key) ? FromRegExpKey(key, type, options) : IsString3(key) ? FromStringKey(key, type, options) : IsAny(key) ? FromAnyKey(key, type, options) : IsNever(key) ? FromNeverKey(key, type, options) : Never(options);
}
function RecordPattern(record) {
  return globalThis.Object.getOwnPropertyNames(record.patternProperties)[0];
}
function RecordKey2(type) {
  const pattern = RecordPattern(type);
  return pattern === PatternStringExact ? String2() : pattern === PatternNumberExact ? Number2() : String2({ pattern });
}
function RecordValue2(type) {
  return type.patternProperties[RecordPattern(type)];
}

// node_modules/@sinclair/typebox/build/esm/type/instantiate/instantiate.mjs
function FromConstructor2(args, type) {
  type.parameters = FromTypes(args, type.parameters);
  type.returns = FromType(args, type.returns);
  return type;
}
function FromFunction2(args, type) {
  type.parameters = FromTypes(args, type.parameters);
  type.returns = FromType(args, type.returns);
  return type;
}
function FromIntersect5(args, type) {
  type.allOf = FromTypes(args, type.allOf);
  return type;
}
function FromUnion7(args, type) {
  type.anyOf = FromTypes(args, type.anyOf);
  return type;
}
function FromTuple4(args, type) {
  if (IsUndefined(type.items))
    return type;
  type.items = FromTypes(args, type.items);
  return type;
}
function FromArray5(args, type) {
  type.items = FromType(args, type.items);
  return type;
}
function FromAsyncIterator2(args, type) {
  type.items = FromType(args, type.items);
  return type;
}
function FromIterator2(args, type) {
  type.items = FromType(args, type.items);
  return type;
}
function FromPromise3(args, type) {
  type.item = FromType(args, type.item);
  return type;
}
function FromObject2(args, type) {
  const mappedProperties = FromProperties11(args, type.properties);
  return { ...type, ...Object2(mappedProperties) };
}
function FromRecord2(args, type) {
  const mappedKey = FromType(args, RecordKey2(type));
  const mappedValue = FromType(args, RecordValue2(type));
  const result = Record(mappedKey, mappedValue);
  return { ...type, ...result };
}
function FromArgument(args, argument) {
  return argument.index in args ? args[argument.index] : Unknown();
}
function FromProperty2(args, type) {
  const isReadonly = IsReadonly(type);
  const isOptional = IsOptional(type);
  const mapped = FromType(args, type);
  return isReadonly && isOptional ? ReadonlyOptional(mapped) : isReadonly && !isOptional ? Readonly(mapped) : !isReadonly && isOptional ? Optional(mapped) : mapped;
}
function FromProperties11(args, properties) {
  return globalThis.Object.getOwnPropertyNames(properties).reduce((result, key) => {
    return { ...result, [key]: FromProperty2(args, properties[key]) };
  }, {});
}
function FromTypes(args, types) {
  return types.map((type) => FromType(args, type));
}
function FromType(args, type) {
  return IsConstructor(type) ? FromConstructor2(args, type) : IsFunction3(type) ? FromFunction2(args, type) : IsIntersect(type) ? FromIntersect5(args, type) : IsUnion(type) ? FromUnion7(args, type) : IsTuple(type) ? FromTuple4(args, type) : IsArray3(type) ? FromArray5(args, type) : IsAsyncIterator3(type) ? FromAsyncIterator2(args, type) : IsIterator3(type) ? FromIterator2(args, type) : IsPromise2(type) ? FromPromise3(args, type) : IsObject3(type) ? FromObject2(args, type) : IsRecord(type) ? FromRecord2(args, type) : IsArgument(type) ? FromArgument(args, type) : type;
}
function Instantiate(type, args) {
  return FromType(args, CloneType(type));
}

// node_modules/@sinclair/typebox/build/esm/type/integer/integer.mjs
function Integer(options) {
  return CreateType({ [Kind]: "Integer", type: "integer" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic-from-mapped-key.mjs
function MappedIntrinsicPropertyKey(K6, M9, options) {
  return {
    [K6]: Intrinsic(Literal(K6), M9, Clone(options))
  };
}
function MappedIntrinsicPropertyKeys(K6, M9, options) {
  const result = K6.reduce((Acc, L5) => {
    return { ...Acc, ...MappedIntrinsicPropertyKey(L5, M9, options) };
  }, {});
  return result;
}
function MappedIntrinsicProperties(T9, M9, options) {
  return MappedIntrinsicPropertyKeys(T9["keys"], M9, options);
}
function IntrinsicFromMappedKey(T9, M9, options) {
  const P10 = MappedIntrinsicProperties(T9, M9, options);
  return MappedResult(P10);
}

// node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic.mjs
function ApplyUncapitalize(value) {
  const [first, rest] = [value.slice(0, 1), value.slice(1)];
  return [first.toLowerCase(), rest].join("");
}
function ApplyCapitalize(value) {
  const [first, rest] = [value.slice(0, 1), value.slice(1)];
  return [first.toUpperCase(), rest].join("");
}
function ApplyUppercase(value) {
  return value.toUpperCase();
}
function ApplyLowercase(value) {
  return value.toLowerCase();
}
function FromTemplateLiteral3(schema, mode, options) {
  const expression = TemplateLiteralParseExact(schema.pattern);
  const finite = IsTemplateLiteralExpressionFinite(expression);
  if (!finite)
    return { ...schema, pattern: FromLiteralValue(schema.pattern, mode) };
  const strings = [...TemplateLiteralExpressionGenerate(expression)];
  const literals = strings.map((value) => Literal(value));
  const mapped = FromRest5(literals, mode);
  const union = Union(mapped);
  return TemplateLiteral([union], options);
}
function FromLiteralValue(value, mode) {
  return typeof value === "string" ? mode === "Uncapitalize" ? ApplyUncapitalize(value) : mode === "Capitalize" ? ApplyCapitalize(value) : mode === "Uppercase" ? ApplyUppercase(value) : mode === "Lowercase" ? ApplyLowercase(value) : value : value.toString();
}
function FromRest5(T9, M9) {
  return T9.map((L5) => Intrinsic(L5, M9));
}
function Intrinsic(schema, mode, options = {}) {
  return (
    // Intrinsic-Mapped-Inference
    IsMappedKey(schema) ? IntrinsicFromMappedKey(schema, mode, options) : (
      // Standard-Inference
      IsTemplateLiteral(schema) ? FromTemplateLiteral3(schema, mode, options) : IsUnion(schema) ? Union(FromRest5(schema.anyOf, mode), options) : IsLiteral(schema) ? Literal(FromLiteralValue(schema.const, mode), options) : (
        // Default Type
        CreateType(schema, options)
      )
    )
  );
}

// node_modules/@sinclair/typebox/build/esm/type/intrinsic/capitalize.mjs
function Capitalize(T9, options = {}) {
  return Intrinsic(T9, "Capitalize", options);
}

// node_modules/@sinclair/typebox/build/esm/type/intrinsic/lowercase.mjs
function Lowercase(T9, options = {}) {
  return Intrinsic(T9, "Lowercase", options);
}

// node_modules/@sinclair/typebox/build/esm/type/intrinsic/uncapitalize.mjs
function Uncapitalize(T9, options = {}) {
  return Intrinsic(T9, "Uncapitalize", options);
}

// node_modules/@sinclair/typebox/build/esm/type/intrinsic/uppercase.mjs
function Uppercase(T9, options = {}) {
  return Intrinsic(T9, "Uppercase", options);
}

// node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-result.mjs
function FromProperties12(properties, propertyKeys, options) {
  const result = {};
  for (const K22 of globalThis.Object.getOwnPropertyNames(properties))
    result[K22] = Omit(properties[K22], propertyKeys, Clone(options));
  return result;
}
function FromMappedResult9(mappedResult, propertyKeys, options) {
  return FromProperties12(mappedResult.properties, propertyKeys, options);
}
function OmitFromMappedResult(mappedResult, propertyKeys, options) {
  const properties = FromMappedResult9(mappedResult, propertyKeys, options);
  return MappedResult(properties);
}

// node_modules/@sinclair/typebox/build/esm/type/omit/omit.mjs
function FromIntersect6(types, propertyKeys) {
  return types.map((type) => OmitResolve(type, propertyKeys));
}
function FromUnion8(types, propertyKeys) {
  return types.map((type) => OmitResolve(type, propertyKeys));
}
function FromProperty3(properties, key) {
  const { [key]: _22, ...R8 } = properties;
  return R8;
}
function FromProperties13(properties, propertyKeys) {
  return propertyKeys.reduce((T9, K22) => FromProperty3(T9, K22), properties);
}
function FromObject3(properties, propertyKeys) {
  const options = Discard(properties, [TransformKind, "$id", "required", "properties"]);
  const omittedProperties = FromProperties13(properties["properties"], propertyKeys);
  return Object2(omittedProperties, options);
}
function UnionFromPropertyKeys(propertyKeys) {
  const result = propertyKeys.reduce((result2, key) => IsLiteralValue(key) ? [...result2, Literal(key)] : result2, []);
  return Union(result);
}
function OmitResolve(properties, propertyKeys) {
  return IsIntersect(properties) ? Intersect(FromIntersect6(properties.allOf, propertyKeys)) : IsUnion(properties) ? Union(FromUnion8(properties.anyOf, propertyKeys)) : IsObject3(properties) ? FromObject3(properties, propertyKeys) : Object2({});
}
function Omit(type, key, options) {
  const typeKey = IsArray(key) ? UnionFromPropertyKeys(key) : key;
  const propertyKeys = IsSchema(key) ? IndexPropertyKeys(key) : key;
  const isTypeRef = IsRef(type);
  const isKeyRef = IsRef(key);
  return IsMappedResult(type) ? OmitFromMappedResult(type, propertyKeys, options) : IsMappedKey(key) ? OmitFromMappedKey(type, key, options) : isTypeRef && isKeyRef ? Computed("Omit", [type, typeKey], options) : !isTypeRef && isKeyRef ? Computed("Omit", [type, typeKey], options) : isTypeRef && !isKeyRef ? Computed("Omit", [type, typeKey], options) : CreateType({ ...OmitResolve(type, propertyKeys), ...options });
}

// node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-key.mjs
function FromPropertyKey2(type, key, options) {
  return { [key]: Omit(type, [key], Clone(options)) };
}
function FromPropertyKeys2(type, propertyKeys, options) {
  return propertyKeys.reduce((Acc, LK) => {
    return { ...Acc, ...FromPropertyKey2(type, LK, options) };
  }, {});
}
function FromMappedKey3(type, mappedKey, options) {
  return FromPropertyKeys2(type, mappedKey.keys, options);
}
function OmitFromMappedKey(type, mappedKey, options) {
  const properties = FromMappedKey3(type, mappedKey, options);
  return MappedResult(properties);
}

// node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-result.mjs
function FromProperties14(properties, propertyKeys, options) {
  const result = {};
  for (const K22 of globalThis.Object.getOwnPropertyNames(properties))
    result[K22] = Pick(properties[K22], propertyKeys, Clone(options));
  return result;
}
function FromMappedResult10(mappedResult, propertyKeys, options) {
  return FromProperties14(mappedResult.properties, propertyKeys, options);
}
function PickFromMappedResult(mappedResult, propertyKeys, options) {
  const properties = FromMappedResult10(mappedResult, propertyKeys, options);
  return MappedResult(properties);
}

// node_modules/@sinclair/typebox/build/esm/type/pick/pick.mjs
function FromIntersect7(types, propertyKeys) {
  return types.map((type) => PickResolve(type, propertyKeys));
}
function FromUnion9(types, propertyKeys) {
  return types.map((type) => PickResolve(type, propertyKeys));
}
function FromProperties15(properties, propertyKeys) {
  const result = {};
  for (const K22 of propertyKeys)
    if (K22 in properties)
      result[K22] = properties[K22];
  return result;
}
function FromObject4(T9, K6) {
  const options = Discard(T9, [TransformKind, "$id", "required", "properties"]);
  const properties = FromProperties15(T9["properties"], K6);
  return Object2(properties, options);
}
function UnionFromPropertyKeys2(propertyKeys) {
  const result = propertyKeys.reduce((result2, key) => IsLiteralValue(key) ? [...result2, Literal(key)] : result2, []);
  return Union(result);
}
function PickResolve(properties, propertyKeys) {
  return IsIntersect(properties) ? Intersect(FromIntersect7(properties.allOf, propertyKeys)) : IsUnion(properties) ? Union(FromUnion9(properties.anyOf, propertyKeys)) : IsObject3(properties) ? FromObject4(properties, propertyKeys) : Object2({});
}
function Pick(type, key, options) {
  const typeKey = IsArray(key) ? UnionFromPropertyKeys2(key) : key;
  const propertyKeys = IsSchema(key) ? IndexPropertyKeys(key) : key;
  const isTypeRef = IsRef(type);
  const isKeyRef = IsRef(key);
  return IsMappedResult(type) ? PickFromMappedResult(type, propertyKeys, options) : IsMappedKey(key) ? PickFromMappedKey(type, key, options) : isTypeRef && isKeyRef ? Computed("Pick", [type, typeKey], options) : !isTypeRef && isKeyRef ? Computed("Pick", [type, typeKey], options) : isTypeRef && !isKeyRef ? Computed("Pick", [type, typeKey], options) : CreateType({ ...PickResolve(type, propertyKeys), ...options });
}

// node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-key.mjs
function FromPropertyKey3(type, key, options) {
  return {
    [key]: Pick(type, [key], Clone(options))
  };
}
function FromPropertyKeys3(type, propertyKeys, options) {
  return propertyKeys.reduce((result, leftKey) => {
    return { ...result, ...FromPropertyKey3(type, leftKey, options) };
  }, {});
}
function FromMappedKey4(type, mappedKey, options) {
  return FromPropertyKeys3(type, mappedKey.keys, options);
}
function PickFromMappedKey(type, mappedKey, options) {
  const properties = FromMappedKey4(type, mappedKey, options);
  return MappedResult(properties);
}

// node_modules/@sinclair/typebox/build/esm/type/partial/partial.mjs
function FromComputed3(target, parameters) {
  return Computed("Partial", [Computed(target, parameters)]);
}
function FromRef3($ref) {
  return Computed("Partial", [Ref($ref)]);
}
function FromProperties16(properties) {
  const partialProperties = {};
  for (const K6 of globalThis.Object.getOwnPropertyNames(properties))
    partialProperties[K6] = Optional(properties[K6]);
  return partialProperties;
}
function FromObject5(type) {
  const options = Discard(type, [TransformKind, "$id", "required", "properties"]);
  const properties = FromProperties16(type["properties"]);
  return Object2(properties, options);
}
function FromRest6(types) {
  return types.map((type) => PartialResolve(type));
}
function PartialResolve(type) {
  return (
    // Mappable
    IsComputed(type) ? FromComputed3(type.target, type.parameters) : IsRef(type) ? FromRef3(type.$ref) : IsIntersect(type) ? Intersect(FromRest6(type.allOf)) : IsUnion(type) ? Union(FromRest6(type.anyOf)) : IsObject3(type) ? FromObject5(type) : (
      // Intrinsic
      IsBigInt3(type) ? type : IsBoolean3(type) ? type : IsInteger2(type) ? type : IsLiteral(type) ? type : IsNull3(type) ? type : IsNumber3(type) ? type : IsString3(type) ? type : IsSymbol3(type) ? type : IsUndefined3(type) ? type : (
        // Passthrough
        Object2({})
      )
    )
  );
}
function Partial(type, options) {
  if (IsMappedResult(type)) {
    return PartialFromMappedResult(type, options);
  } else {
    return CreateType({ ...PartialResolve(type), ...options });
  }
}

// node_modules/@sinclair/typebox/build/esm/type/partial/partial-from-mapped-result.mjs
function FromProperties17(K6, options) {
  const Acc = {};
  for (const K22 of globalThis.Object.getOwnPropertyNames(K6))
    Acc[K22] = Partial(K6[K22], Clone(options));
  return Acc;
}
function FromMappedResult11(R8, options) {
  return FromProperties17(R8.properties, options);
}
function PartialFromMappedResult(R8, options) {
  const P10 = FromMappedResult11(R8, options);
  return MappedResult(P10);
}

// node_modules/@sinclair/typebox/build/esm/type/required/required.mjs
function FromComputed4(target, parameters) {
  return Computed("Required", [Computed(target, parameters)]);
}
function FromRef4($ref) {
  return Computed("Required", [Ref($ref)]);
}
function FromProperties18(properties) {
  const requiredProperties = {};
  for (const K6 of globalThis.Object.getOwnPropertyNames(properties))
    requiredProperties[K6] = Discard(properties[K6], [OptionalKind]);
  return requiredProperties;
}
function FromObject6(type) {
  const options = Discard(type, [TransformKind, "$id", "required", "properties"]);
  const properties = FromProperties18(type["properties"]);
  return Object2(properties, options);
}
function FromRest7(types) {
  return types.map((type) => RequiredResolve(type));
}
function RequiredResolve(type) {
  return (
    // Mappable
    IsComputed(type) ? FromComputed4(type.target, type.parameters) : IsRef(type) ? FromRef4(type.$ref) : IsIntersect(type) ? Intersect(FromRest7(type.allOf)) : IsUnion(type) ? Union(FromRest7(type.anyOf)) : IsObject3(type) ? FromObject6(type) : (
      // Intrinsic
      IsBigInt3(type) ? type : IsBoolean3(type) ? type : IsInteger2(type) ? type : IsLiteral(type) ? type : IsNull3(type) ? type : IsNumber3(type) ? type : IsString3(type) ? type : IsSymbol3(type) ? type : IsUndefined3(type) ? type : (
        // Passthrough
        Object2({})
      )
    )
  );
}
function Required(type, options) {
  if (IsMappedResult(type)) {
    return RequiredFromMappedResult(type, options);
  } else {
    return CreateType({ ...RequiredResolve(type), ...options });
  }
}

// node_modules/@sinclair/typebox/build/esm/type/required/required-from-mapped-result.mjs
function FromProperties19(P10, options) {
  const Acc = {};
  for (const K22 of globalThis.Object.getOwnPropertyNames(P10))
    Acc[K22] = Required(P10[K22], options);
  return Acc;
}
function FromMappedResult12(R8, options) {
  return FromProperties19(R8.properties, options);
}
function RequiredFromMappedResult(R8, options) {
  const P10 = FromMappedResult12(R8, options);
  return MappedResult(P10);
}

// node_modules/@sinclair/typebox/build/esm/type/module/compute.mjs
function DereferenceParameters(moduleProperties, types) {
  return types.map((type) => {
    return IsRef(type) ? Dereference(moduleProperties, type.$ref) : FromType2(moduleProperties, type);
  });
}
function Dereference(moduleProperties, ref2) {
  return ref2 in moduleProperties ? IsRef(moduleProperties[ref2]) ? Dereference(moduleProperties, moduleProperties[ref2].$ref) : FromType2(moduleProperties, moduleProperties[ref2]) : Never();
}
function FromAwaited(parameters) {
  return Awaited(parameters[0]);
}
function FromIndex(parameters) {
  return Index(parameters[0], parameters[1]);
}
function FromKeyOf(parameters) {
  return KeyOf(parameters[0]);
}
function FromPartial(parameters) {
  return Partial(parameters[0]);
}
function FromOmit(parameters) {
  return Omit(parameters[0], parameters[1]);
}
function FromPick(parameters) {
  return Pick(parameters[0], parameters[1]);
}
function FromRequired(parameters) {
  return Required(parameters[0]);
}
function FromComputed5(moduleProperties, target, parameters) {
  const dereferenced = DereferenceParameters(moduleProperties, parameters);
  return target === "Awaited" ? FromAwaited(dereferenced) : target === "Index" ? FromIndex(dereferenced) : target === "KeyOf" ? FromKeyOf(dereferenced) : target === "Partial" ? FromPartial(dereferenced) : target === "Omit" ? FromOmit(dereferenced) : target === "Pick" ? FromPick(dereferenced) : target === "Required" ? FromRequired(dereferenced) : Never();
}
function FromArray6(moduleProperties, type) {
  return Array2(FromType2(moduleProperties, type));
}
function FromAsyncIterator3(moduleProperties, type) {
  return AsyncIterator(FromType2(moduleProperties, type));
}
function FromConstructor3(moduleProperties, parameters, instanceType) {
  return Constructor(FromTypes2(moduleProperties, parameters), FromType2(moduleProperties, instanceType));
}
function FromFunction3(moduleProperties, parameters, returnType) {
  return Function2(FromTypes2(moduleProperties, parameters), FromType2(moduleProperties, returnType));
}
function FromIntersect8(moduleProperties, types) {
  return Intersect(FromTypes2(moduleProperties, types));
}
function FromIterator3(moduleProperties, type) {
  return Iterator(FromType2(moduleProperties, type));
}
function FromObject7(moduleProperties, properties) {
  return Object2(globalThis.Object.keys(properties).reduce((result, key) => {
    return { ...result, [key]: FromType2(moduleProperties, properties[key]) };
  }, {}));
}
function FromRecord3(moduleProperties, type) {
  const [value, pattern] = [FromType2(moduleProperties, RecordValue2(type)), RecordPattern(type)];
  const result = CloneType(type);
  result.patternProperties[pattern] = value;
  return result;
}
function FromTransform(moduleProperties, transform) {
  return IsRef(transform) ? { ...Dereference(moduleProperties, transform.$ref), [TransformKind]: transform[TransformKind] } : transform;
}
function FromTuple5(moduleProperties, types) {
  return Tuple(FromTypes2(moduleProperties, types));
}
function FromUnion10(moduleProperties, types) {
  return Union(FromTypes2(moduleProperties, types));
}
function FromTypes2(moduleProperties, types) {
  return types.map((type) => FromType2(moduleProperties, type));
}
function FromType2(moduleProperties, type) {
  return (
    // Modifiers
    IsOptional(type) ? CreateType(FromType2(moduleProperties, Discard(type, [OptionalKind])), type) : IsReadonly(type) ? CreateType(FromType2(moduleProperties, Discard(type, [ReadonlyKind])), type) : (
      // Transform
      IsTransform(type) ? CreateType(FromTransform(moduleProperties, type), type) : (
        // Types
        IsArray3(type) ? CreateType(FromArray6(moduleProperties, type.items), type) : IsAsyncIterator3(type) ? CreateType(FromAsyncIterator3(moduleProperties, type.items), type) : IsComputed(type) ? CreateType(FromComputed5(moduleProperties, type.target, type.parameters)) : IsConstructor(type) ? CreateType(FromConstructor3(moduleProperties, type.parameters, type.returns), type) : IsFunction3(type) ? CreateType(FromFunction3(moduleProperties, type.parameters, type.returns), type) : IsIntersect(type) ? CreateType(FromIntersect8(moduleProperties, type.allOf), type) : IsIterator3(type) ? CreateType(FromIterator3(moduleProperties, type.items), type) : IsObject3(type) ? CreateType(FromObject7(moduleProperties, type.properties), type) : IsRecord(type) ? CreateType(FromRecord3(moduleProperties, type)) : IsTuple(type) ? CreateType(FromTuple5(moduleProperties, type.items || []), type) : IsUnion(type) ? CreateType(FromUnion10(moduleProperties, type.anyOf), type) : type
      )
    )
  );
}
function ComputeType(moduleProperties, key) {
  return key in moduleProperties ? FromType2(moduleProperties, moduleProperties[key]) : Never();
}
function ComputeModuleProperties(moduleProperties) {
  return globalThis.Object.getOwnPropertyNames(moduleProperties).reduce((result, key) => {
    return { ...result, [key]: ComputeType(moduleProperties, key) };
  }, {});
}

// node_modules/@sinclair/typebox/build/esm/type/module/module.mjs
var TModule = class {
  constructor($defs) {
    const computed2 = ComputeModuleProperties($defs);
    const identified = this.WithIdentifiers(computed2);
    this.$defs = identified;
  }
  /** `[Json]` Imports a Type by Key. */
  Import(key, options) {
    const $defs = { ...this.$defs, [key]: CreateType(this.$defs[key], options) };
    return CreateType({ [Kind]: "Import", $defs, $ref: key });
  }
  // prettier-ignore
  WithIdentifiers($defs) {
    return globalThis.Object.getOwnPropertyNames($defs).reduce((result, key) => {
      return { ...result, [key]: { ...$defs[key], $id: key } };
    }, {});
  }
};
function Module(properties) {
  return new TModule(properties);
}

// node_modules/@sinclair/typebox/build/esm/type/not/not.mjs
function Not2(type, options) {
  return CreateType({ [Kind]: "Not", not: type }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/parameters/parameters.mjs
function Parameters(schema, options) {
  return IsFunction3(schema) ? Tuple(schema.parameters, options) : Never();
}

// node_modules/@sinclair/typebox/build/esm/type/recursive/recursive.mjs
var Ordinal = 0;
function Recursive(callback, options = {}) {
  if (IsUndefined(options.$id))
    options.$id = `T${Ordinal++}`;
  const thisType = CloneType(callback({ [Kind]: "This", $ref: `${options.$id}` }));
  thisType.$id = options.$id;
  return CreateType({ [Hint]: "Recursive", ...thisType }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/regexp/regexp.mjs
function RegExp2(unresolved, options) {
  const expr = IsString(unresolved) ? new globalThis.RegExp(unresolved) : unresolved;
  return CreateType({ [Kind]: "RegExp", type: "RegExp", source: expr.source, flags: expr.flags }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/rest/rest.mjs
function RestResolve(T9) {
  return IsIntersect(T9) ? T9.allOf : IsUnion(T9) ? T9.anyOf : IsTuple(T9) ? T9.items ?? [] : [];
}
function Rest(T9) {
  return RestResolve(T9);
}

// node_modules/@sinclair/typebox/build/esm/type/return-type/return-type.mjs
function ReturnType(schema, options) {
  return IsFunction3(schema) ? CreateType(schema.returns, options) : Never(options);
}

// node_modules/@sinclair/typebox/build/esm/type/transform/transform.mjs
var TransformDecodeBuilder = class {
  constructor(schema) {
    this.schema = schema;
  }
  Decode(decode) {
    return new TransformEncodeBuilder(this.schema, decode);
  }
};
var TransformEncodeBuilder = class {
  constructor(schema, decode) {
    this.schema = schema;
    this.decode = decode;
  }
  EncodeTransform(encode, schema) {
    const Encode2 = (value) => schema[TransformKind].Encode(encode(value));
    const Decode2 = (value) => this.decode(schema[TransformKind].Decode(value));
    const Codec = { Encode: Encode2, Decode: Decode2 };
    return { ...schema, [TransformKind]: Codec };
  }
  EncodeSchema(encode, schema) {
    const Codec = { Decode: this.decode, Encode: encode };
    return { ...schema, [TransformKind]: Codec };
  }
  Encode(encode) {
    return IsTransform(this.schema) ? this.EncodeTransform(encode, this.schema) : this.EncodeSchema(encode, this.schema);
  }
};
function Transform(schema) {
  return new TransformDecodeBuilder(schema);
}

// node_modules/@sinclair/typebox/build/esm/type/unsafe/unsafe.mjs
function Unsafe(options = {}) {
  return CreateType({ [Kind]: options[Kind] ?? "Unsafe" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/void/void.mjs
function Void(options) {
  return CreateType({ [Kind]: "Void", type: "void" }, options);
}

// node_modules/@sinclair/typebox/build/esm/type/type/type.mjs
var type_exports3 = {};
__export(type_exports3, {
  Any: () => Any,
  Argument: () => Argument,
  Array: () => Array2,
  AsyncIterator: () => AsyncIterator,
  Awaited: () => Awaited,
  BigInt: () => BigInt2,
  Boolean: () => Boolean2,
  Capitalize: () => Capitalize,
  Composite: () => Composite,
  Const: () => Const,
  Constructor: () => Constructor,
  ConstructorParameters: () => ConstructorParameters,
  Date: () => Date2,
  Enum: () => Enum,
  Exclude: () => Exclude,
  Extends: () => Extends,
  Extract: () => Extract,
  Function: () => Function2,
  Index: () => Index,
  InstanceType: () => InstanceType,
  Instantiate: () => Instantiate,
  Integer: () => Integer,
  Intersect: () => Intersect,
  Iterator: () => Iterator,
  KeyOf: () => KeyOf,
  Literal: () => Literal,
  Lowercase: () => Lowercase,
  Mapped: () => Mapped,
  Module: () => Module,
  Never: () => Never,
  Not: () => Not2,
  Null: () => Null,
  Number: () => Number2,
  Object: () => Object2,
  Omit: () => Omit,
  Optional: () => Optional,
  Parameters: () => Parameters,
  Partial: () => Partial,
  Pick: () => Pick,
  Promise: () => Promise2,
  Readonly: () => Readonly,
  ReadonlyOptional: () => ReadonlyOptional,
  Record: () => Record,
  Recursive: () => Recursive,
  Ref: () => Ref,
  RegExp: () => RegExp2,
  Required: () => Required,
  Rest: () => Rest,
  ReturnType: () => ReturnType,
  String: () => String2,
  Symbol: () => Symbol2,
  TemplateLiteral: () => TemplateLiteral,
  Transform: () => Transform,
  Tuple: () => Tuple,
  Uint8Array: () => Uint8Array2,
  Uncapitalize: () => Uncapitalize,
  Undefined: () => Undefined,
  Union: () => Union,
  Unknown: () => Unknown,
  Unsafe: () => Unsafe,
  Uppercase: () => Uppercase,
  Void: () => Void
});

// node_modules/@sinclair/typebox/build/esm/type/type/index.mjs
var Type = type_exports3;

// node_modules/@scalar/workspace-store/dist/schemas/typebox-types.js
function PartialDeepProperties(properties) {
  return Object.getOwnPropertyNames(properties).reduce((acc, key) => {
    return { ...acc, [key]: PartialDeep(properties[key]) };
  }, {});
}
function PartialDeepRest(rest) {
  return rest.map((schema) => PartialDeep(schema));
}
function PartialDeep(schema) {
  return type_exports.IsIntersect(schema) ? Type.Intersect(PartialDeepRest(schema.allOf)) : type_exports.IsUnion(schema) ? Type.Union(PartialDeepRest(schema.anyOf)) : type_exports.IsObject(schema) ? Type.Partial(Type.Object(PartialDeepProperties(schema.properties))) : schema;
}

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/contact.js
var ContactObjectSchema = Type.Object({
  /** The identifying name of the contact person/organization. */
  name: Type.Optional(Type.String()),
  /** The URI for the contact information. This MUST be in the form of a URI. */
  url: Type.Optional(Type.String()),
  /** The email address of the contact person/organization. This MUST be in the form of an email address. */
  email: Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/license.js
var LicenseObjectSchema = Type.Object({
  /** REQUIRED. The license name used for the API. */
  name: Type.Optional(Type.String()),
  /** An SPDX license expression for the API. The identifier field is mutually exclusive of the url field. */
  identifier: Type.Optional(Type.String()),
  /** A URI for the license used for the API. This MUST be in the form of a URI. The url field is mutually exclusive of the identifier field. */
  url: Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/extensions/document/x-scalar-sdk-installation.js
var XScalarSdkInstallationSchema = Type.Object({
  "x-scalar-sdk-installation": Type.Optional(
    Type.Array(
      Type.Object({
        lang: Type.String(),
        source: Type.Optional(Type.String()),
        description: Type.Optional(Type.String())
      })
    )
  )
});

// node_modules/@scalar/workspace-store/dist/schemas/compose.js
var compose = (...args) => {
  return Type.Composite(args);
};

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/info.js
var InfoObjectSchema = compose(
  Type.Object({
    /** REQUIRED. The title of the API. */
    title: Type.String(),
    /** A short summary of the API. */
    summary: Type.Optional(Type.String()),
    /** A description of the API. CommonMark syntax MAY be used for rich text representation. */
    description: Type.Optional(Type.String()),
    /** A URI for the Terms of Service for the API. This MUST be in the form of a URI. */
    termsOfService: Type.Optional(Type.String()),
    /** The contact information for the exposed API. */
    contact: Type.Optional(ContactObjectSchema),
    /** The license information for the exposed API. */
    license: Type.Optional(LicenseObjectSchema),
    /** REQUIRED. The version of the OpenAPI Document (which is distinct from the OpenAPI Specification version or the version of the API being described or the version of the OpenAPI Description). */
    version: Type.String()
  }),
  XScalarSdkInstallationSchema
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/server-variable.js
var ServerVariableObjectSchema = Type.Object({
  /** An enumeration of string values to be used if the substitution options are from a limited set. The array MUST NOT be empty. */
  enum: Type.Optional(Type.Array(Type.String())),
  /** REQUIRED. The default value to use for substitution, which SHALL be sent if an alternate value is not supplied. If the enum is defined, the value MUST exist in the enum's values. Note that this behavior is different from the Schema Object's default keyword, which documents the receiver's behavior rather than inserting the value into the data. */
  default: Type.Optional(Type.String()),
  /** An optional description for the server variable. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/server.js
var ServerObjectSchema = Type.Object({
  /** REQUIRED. A URL to the target host. This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the document containing the Server Object is being served. Variable substitutions will be made when a variable is named in {braces}. */
  url: Type.String(),
  /** An optional string describing the host designated by the URL. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** A map between a variable name and its value. The value is used for substitution in the server's URL template. */
  variables: Type.Optional(Type.Record(Type.String(), ServerVariableObjectSchema))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/reference.js
var ReferenceObjectExtensionsSchema = Type.Object({
  /** Indicates the current status of the reference resolution. Can be either 'loading' while fetching the reference or 'error' if the resolution failed. */
  "$status": Type.Optional(Type.Union([Type.Literal("loading"), Type.Literal("error")])),
  /** Indicates whether this reference should be resolved globally across all documents, rather than just within the current document context. */
  "$global": Type.Optional(Type.Boolean())
});
var ReferenceObjectSchema = compose(
  Type.Object({
    /** REQUIRED. The reference identifier. This MUST be in the form of a URI. */
    "$ref": Type.String(),
    /** A short summary which by default SHOULD override that of the referenced component. If the referenced object-type does not allow a summary field, then this field has no effect. */
    summary: Type.Optional(Type.String()),
    /** A description which by default SHOULD override that of the referenced component. CommonMark syntax MAY be used for rich text representation. If the referenced object-type does not allow a description field, then this field has no effect. */
    description: Type.Optional(Type.String())
  }),
  ReferenceObjectExtensionsSchema
);
var reference = (schema) => compose(ReferenceObjectSchema, Type.Object({ "$ref-value": schema }));

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/callback.js
var callbackObjectSchemaBuilder = (pathItem) => Type.Record(
  Type.String(),
  /** A Path Item Object used to define a callback request and expected responses. A complete example is available. */
  Type.Union([pathItem, reference(pathItem)])
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/external-documentation.js
var ExternalDocumentationObjectSchema = Type.Object({
  /** A description of the target documentation. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** REQUIRED. The URI for the target documentation. This MUST be in the form of a URI. */
  url: Type.String()
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/encoding.js
var encodingObjectSchemaBuilder = (header) => Type.Object({
  /** The Content-Type for encoding a specific property. The value is a comma-separated list, each element of which is either a specific media type (e.g. image/png) or a wildcard media type (e.g. image/*). Default value depends on the property type as shown in the table below. */
  contentType: Type.Optional(Type.String()),
  /** A map allowing additional information to be provided as headers. Content-Type is described separately and SHALL be ignored in this section. This field SHALL be ignored if the request body media type is not a multipart. */
  headers: Type.Optional(Type.Record(Type.String(), Type.Union([header, reference(header)])))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/example.js
var ExampleObjectSchema = Type.Object({
  /** Short description for the example. */
  summary: Type.Optional(Type.String()),
  /** Long description for the example. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** Embedded literal example. The value field and externalValue field are mutually exclusive. To represent examples of media types that cannot naturally represented in JSON or YAML, use a string value to contain the example, escaping where necessary. */
  value: Type.Optional(Type.Any()),
  /** A URI that identifies the literal example. This provides the capability to reference examples that cannot easily be included in JSON or YAML documents. The value field and externalValue field are mutually exclusive. See the rules for resolving Relative References. */
  externalValue: Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/discriminator.js
var DiscriminatorObjectSchema = Type.Object({
  /** REQUIRED. The name of the property in the payload that will hold the discriminating value. This property SHOULD be required in the payload schema, as the behavior when the property is absent is undefined. */
  propertyName: Type.String(),
  /** An object to hold mappings between payload values and schema names or URI references. */
  mapping: Type.Optional(Type.Record(Type.String(), Type.String()))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/xml.js
var XMLObjectSchema = Type.Object({
  /** Replaces the name of the element/attribute used for the described schema property. When defined within items, it will affect the name of the individual XML elements within the list. When defined alongside type being "array" (outside the items), it will affect the wrapping element if and only if wrapped is true. If wrapped is false, it will be ignored. */
  name: Type.Optional(Type.String()),
  /** The URI of the namespace definition. Value MUST be in the form of a non-relative URI. */
  namespace: Type.Optional(Type.String()),
  /** The prefix to be used for the name. */
  prefix: Type.Optional(Type.String()),
  /** Declares whether the property definition translates to an attribute instead of an element. Default value is false. */
  attribute: Type.Optional(Type.Boolean()),
  /** MAY be used only for an array definition. Signifies whether the array is wrapped (for example, <books><book/><book/></books>) or unwrapped (<book/><book/>). Default value is false. The definition takes effect only when defined alongside type being "array" (outside the items). */
  wrapped: Type.Optional(Type.Boolean())
});

// node_modules/@scalar/workspace-store/dist/schemas/extensions/document/x-internal.js
var XInternalSchema = Type.Object({
  "x-internal": Type.Optional(Type.Boolean())
});

// node_modules/@scalar/workspace-store/dist/schemas/extensions/document/x-scalar-ignore.js
var XScalarIgnoreSchema = Type.Object({
  "x-scalar-ignore": Type.Optional(Type.Boolean())
});

// node_modules/@scalar/workspace-store/dist/schemas/extensions/schema/x-variable.js
var XVariableSchema = Type.Object({
  "x-variable": Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/extensions/schema/x-additional-properties-name.js
var XAdditionalPropertiesNameSchema = Type.Object({
  "x-additionalPropertiesName": Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/schema.js
var schemaObjectSchemaBuilder = (schema) => {
  const baseSchema = compose(
    Type.Object({
      // Base JSON Schema
      type: Type.Optional(
        Type.Union([
          Type.Literal("null"),
          Type.Literal("boolean"),
          Type.Literal("string"),
          Type.Literal("number"),
          Type.Literal("integer"),
          Type.Literal("object"),
          Type.Literal("array"),
          Type.Array(
            Type.Union([
              Type.Literal("null"),
              Type.Literal("boolean"),
              Type.Literal("string"),
              Type.Literal("number"),
              Type.Literal("integer"),
              Type.Literal("object"),
              Type.Literal("array")
            ])
          )
        ])
      ),
      /** Different subtypes */
      format: Type.Optional(
        Type.String()
        // This is a big performance hit, so we're not using it
        // Type.Union([
        //   // Date and time formats
        //   Type.Literal('date'),
        //   Type.Literal('date-time'),
        //   Type.Literal('date-time-local'),
        //   Type.Literal('time'),
        //   Type.Literal('time-local'),
        //   Type.Literal('duration'),
        //   Type.Literal('http-date'),
        //   // Network formats
        //   Type.Literal('email'),
        //   Type.Literal('idn-email'),
        //   Type.Literal('hostname'),
        //   Type.Literal('idn-hostname'),
        //   Type.Literal('ipv4'),
        //   Type.Literal('ipv6'),
        //   Type.Literal('uri'),
        //   Type.Literal('uri-reference'),
        //   Type.Literal('uri-template'),
        //   Type.Literal('iri'),
        //   Type.Literal('iri-reference'),
        //   Type.Literal('uuid'),
        //   // Content formats
        //   Type.Literal('binary'),
        //   Type.Literal('byte'),
        //   Type.Literal('base64url'),
        //   Type.Literal('html'),
        //   Type.Literal('commonmark'),
        //   Type.Literal('password'),
        //   Type.Literal('regex'),
        //   Type.Literal('json-pointer'),
        //   Type.Literal('relative-json-pointer'),
        //   Type.Literal('media-range'),
        //   // Character formats
        //   Type.Literal('char'),
        //   // Integer formats
        //   Type.Literal('int8'),
        //   Type.Literal('int16'),
        //   Type.Literal('int32'),
        //   Type.Literal('int64'),
        //   Type.Literal('uint8'),
        //   Type.Literal('uint16'),
        //   Type.Literal('uint32'),
        //   Type.Literal('uint64'),
        //   Type.Literal('double-int'),
        //   // Number formats
        //   Type.Literal('float'),
        //   Type.Literal('double'),
        //   Type.Literal('decimal'),
        //   Type.Literal('decimal128'),
        //   // Structured field string formats
        //   Type.Literal('sf-string'),
        //   Type.Literal('sf-token'),
        //   Type.Literal('sf-binary'),
        //   Type.Literal('sf-boolean'),
        //   Type.Literal('sf-integer'),
        //   Type.Literal('sf-decimal'),
        // ]),
      ),
      /** A title for the schema. */
      title: Type.Optional(Type.String()),
      /** A description of the schema. */
      description: Type.Optional(Type.String()),
      /** Default value for the schema. */
      default: Type.Optional(Type.Unknown()),
      /** Array of allowed values. */
      enum: Type.Optional(Type.Array(Type.Unknown())),
      /** Constant value that must match exactly. */
      const: Type.Optional(Type.Unknown()),
      // Composition
      /** All schemas must be valid. */
      allOf: Type.Optional(Type.Array(Type.Union([schema, reference(schema)]))),
      /** Exactly one schema must be valid. */
      oneOf: Type.Optional(Type.Array(Type.Union([schema, reference(schema)]))),
      /** At least one schema must be valid. */
      anyOf: Type.Optional(Type.Array(Type.Union([schema, reference(schema)]))),
      /** Schema must not be valid. */
      not: Type.Optional(Type.Union([schema, reference(schema)])),
      // OpenAPI 3.0
      /**
       * Whether the schema is nullable.
       *
       * @deprecated this was deprecated in OpenAPI 3.1 and replaced with type: [null]
       * @see https://www.openapis.org/blog/2021/02/16/migrating-from-openapi-3-0-to-3-1-0
       */
      nullable: Type.Optional(Type.Boolean()),
      // OpenAPI 3.1
      /** Media type for content validation. */
      contentMediaType: Type.Optional(Type.String()),
      /** Content encoding. */
      contentEncoding: Type.Optional(Type.String()),
      /** Schema for content validation. */
      contentSchema: Type.Optional(Type.Union([schema, reference(schema)])),
      /** Whether the schema is deprecated. */
      deprecated: Type.Optional(Type.Boolean()),
      /** Adds support for polymorphism. The discriminator is used to determine which of a set of schemas a payload is expected to satisfy. See Composition and Inheritance for more details. */
      discriminator: Type.Optional(DiscriminatorObjectSchema),
      /** Whether the schema is read-only. */
      readOnly: Type.Optional(Type.Boolean()),
      /** Whether the schema is write-only. */
      writeOnly: Type.Optional(Type.Boolean()),
      /** This MAY be used only on property schemas. It has no effect on root schemas. Adds additional metadata to describe the XML representation of this property. */
      xml: Type.Optional(XMLObjectSchema),
      /** Additional external documentation for this schema. */
      externalDocs: Type.Optional(ExternalDocumentationObjectSchema),
      /**
       * A free-form field to include an example of an instance for this schema. To represent examples that cannot be naturally represented in JSON or YAML, a string value can be used to contain the example with escaping where necessary.
       *
       * @deprecated The example field has been deprecated in favor of the JSON Schema examples keyword. Use of example is discouraged, and later versions of this specification may remove it.
       */
      example: Type.Optional(Type.Unknown()),
      /**
       * An array of examples of valid instances for this schema. This keyword follows the JSON Schema Draft 2020-12 specification.
       * Each example should be a valid instance of the schema.
       */
      examples: Type.Optional(Type.Array(Type.Unknown())),
      // OpenAPI Extensions
      "x-tags": Type.Optional(Type.Array(Type.String())),
      // Array
      /** Maximum number of items in array. */
      maxItems: Type.Optional(Type.Integer({ minimum: 0 })),
      /** Minimum number of items in array. */
      minItems: Type.Optional(Type.Integer({ minimum: 0 })),
      /** Whether array items must be unique. */
      uniqueItems: Type.Optional(Type.Boolean()),
      /** Schema for array items. */
      items: Type.Optional(Type.Union([schema, reference(schema)])),
      /** Schema for tuple validation. */
      prefixItems: Type.Optional(Type.Array(Type.Union([schema, reference(schema)]))),
      // Object
      /** Maximum number of properties. */
      maxProperties: Type.Optional(Type.Integer({ minimum: 0 })),
      /** Minimum number of properties. */
      minProperties: Type.Optional(Type.Integer({ minimum: 0 })),
      /** Array of required property names. */
      required: Type.Optional(Type.Array(Type.String())),
      /** Object property definitions. */
      properties: Type.Optional(Type.Record(Type.String(), Type.Union([schema, reference(schema)]))),
      /** Schema for additional properties. */
      additionalProperties: Type.Optional(Type.Union([Type.Boolean(), Type.Union([schema, reference(schema)])])),
      /** Properties matching regex patterns. */
      patternProperties: Type.Optional(Type.Record(Type.String(), Type.Union([schema, reference(schema)]))),
      // String
      /** Maximum string length. */
      maxLength: Type.Optional(Type.Integer({ minimum: 0 })),
      /** Minimum string length. */
      minLength: Type.Optional(Type.Integer({ minimum: 0 })),
      /** Regular expression pattern. */
      pattern: Type.Optional(Type.String()),
      // Number
      /** Number must be a multiple of this value. */
      multipleOf: Type.Optional(Type.Number()),
      /** Maximum value (inclusive). */
      maximum: Type.Optional(Type.Number()),
      /** Maximum value (exclusive). */
      exclusiveMaximum: Type.Optional(Type.Union([Type.Boolean(), Type.Number()])),
      /** Minimum value (inclusive). */
      minimum: Type.Optional(Type.Number()),
      /** Minimum value (exclusive). */
      exclusiveMinimum: Type.Optional(Type.Union([Type.Boolean(), Type.Number()]))
    }),
    XScalarIgnoreSchema,
    XInternalSchema,
    XVariableSchema,
    XAdditionalPropertiesNameSchema
  );
  return baseSchema;
};
var SchemaObjectSchema = Type.Recursive(schemaObjectSchemaBuilder);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/header.js
var HeaderObjectSchemaBase = Type.Object({
  /** A brief description of the header. This could contain examples of use. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** Determines whether this header is mandatory. The default value is false. */
  required: Type.Optional(Type.Boolean()),
  /** Specifies that the header is deprecated and SHOULD be transitioned out of usage. Default value is false. */
  deprecated: Type.Optional(Type.Boolean())
});
var HeaderObjectWithSchemaSchema = compose(
  HeaderObjectSchemaBase,
  Type.Object({
    /** Describes how the header value will be serialized. The default (and only legal value for headers) is "simple". */
    style: Type.Optional(Type.String()),
    /** When this is true, header values of type array or object generate a single header whose value is a comma-separated list of the array items or key-value pairs of the map, see Style Examples. For other data types this field has no effect. The default value is false. */
    explode: Type.Optional(Type.Boolean()),
    /** The schema defining the type used for the header. */
    schema: Type.Optional(Type.Union([SchemaObjectSchema, reference(SchemaObjectSchema)])),
    /** Example of the header's potential value; see Working With Examples. https://swagger.io/specification/#working-with-examples */
    example: Type.Optional(Type.Any()),
    /** Examples of the header's potential value; see Working With Examples. https://swagger.io/specification/#working-with-examples */
    examples: Type.Optional(
      Type.Record(Type.String(), Type.Union([ExampleObjectSchema, reference(ExampleObjectSchema)]))
    )
  })
);
var headerObjectSchemaBuilder = (mediaType) => Type.Union([
  HeaderObjectWithSchemaSchema,
  compose(
    HeaderObjectSchemaBase,
    Type.Object({
      content: Type.Optional(Type.Record(Type.String(), mediaType))
    })
  )
]);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/media-type.js
var mediaTypeObjectSchemaBuilder = (encoding) => Type.Object({
  /** The schema defining the content of the request, response, parameter, or header. */
  schema: Type.Optional(Type.Union([SchemaObjectSchema, reference(SchemaObjectSchema)])),
  /** Example of the media type */
  example: Type.Optional(Type.Any()),
  /** Examples of the media type */
  examples: Type.Optional(
    Type.Record(Type.String(), Type.Union([ExampleObjectSchema, reference(ExampleObjectSchema)]))
  ),
  /** A map between a property name and its encoding information. The key, being the property name, MUST exist in the schema as a property. The encoding field SHALL only apply to Request Body Objects, and only when the media type is multipart or application/x-www-form-urlencoded. If no Encoding Object is provided for a property, the behavior is determined by the default values documented for the Encoding Object. */
  encoding: Type.Optional(Type.Record(Type.String(), encoding))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/media-header-encoding.js
var EncodingObjectSchema = Type.Recursive(
  (This) => encodingObjectSchemaBuilder(headerObjectSchemaBuilder(mediaTypeObjectSchemaBuilder(This)))
);
var MediaTypeObjectSchema = Type.Recursive(
  (This) => mediaTypeObjectSchemaBuilder(encodingObjectSchemaBuilder(headerObjectSchemaBuilder(This)))
);
var HeaderObjectSchema = Type.Recursive(
  (This) => headerObjectSchemaBuilder(mediaTypeObjectSchemaBuilder(encodingObjectSchemaBuilder(This)))
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/parameter.js
var ParameterObjectBaseSchema = Type.Object({
  /** REQUIRED. The name of the parameter. Parameter names are case sensitive.
   *    - If in is "path", the name field MUST correspond to a template expression occurring within the path field in the Paths Object. See Path Templating for further information.
   *    - If in is "header" and the name field is "Accept", "Content-Type" or "Authorization", the parameter definition SHALL be ignored.
   *    - For all other cases, the name corresponds to the parameter name used by the in field. */
  name: Type.String(),
  /** REQUIRED. The location of the parameter. Possible values are "query", "header", "path" or "cookie". */
  in: Type.Union([Type.Literal("query"), Type.Literal("header"), Type.Literal("path"), Type.Literal("cookie")]),
  /** A brief description of the parameter. This could contain examples of use. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** Determines whether this parameter is mandatory. If the parameter location is "path", this field is REQUIRED and its value MUST be true. Otherwise, the field MAY be included and its default value is false. */
  required: Type.Optional(Type.Boolean()),
  /** Specifies that a parameter is deprecated and SHOULD be transitioned out of usage. Default value is false. */
  deprecated: Type.Optional(Type.Boolean()),
  /** If true, clients MAY pass a zero-length string value in place of parameters that would otherwise be omitted entirely, which the server SHOULD interpret as the parameter being unused. Default value is false. If style is used, and if behavior is n/a (cannot be serialized), the value of allowEmptyValue SHALL be ignored. Interactions between this field and the parameter's Schema Object are implementation-defined. This field is valid only for query parameters. Use of this field is NOT RECOMMENDED, and it is likely to be removed in a later revision. */
  allowEmptyValue: Type.Optional(Type.Boolean())
});
var ParameterObjectWithSchemaSchema = compose(
  ParameterObjectBaseSchema,
  Type.Object({
    /** Describes how the header value will be serialized. The default (and only legal value for headers) is "simple". */
    style: Type.Optional(Type.String()),
    /** When this is true, header values of type array or object generate a single header whose value is a comma-separated list of the array items or key-value pairs of the map, see Style Examples. For other data types this field has no effect. The default value is false. */
    explode: Type.Optional(Type.Boolean()),
    /** The schema defining the type used for the header. */
    schema: Type.Optional(Type.Union([SchemaObjectSchema, reference(SchemaObjectSchema)])),
    /** Example of the header's potential value; see Working With Examples. https://swagger.io/specification/#working-with-examples */
    example: Type.Optional(Type.Any()),
    /** Examples of the header's potential value; see Working With Examples. https://swagger.io/specification/#working-with-examples */
    examples: Type.Optional(
      Type.Record(Type.String(), Type.Union([ExampleObjectSchema, reference(ExampleObjectSchema)]))
    )
  })
);
var ParameterObjectWithContentSchema = compose(
  ParameterObjectBaseSchema,
  Type.Object({
    content: Type.Optional(Type.Record(Type.String(), MediaTypeObjectSchema))
  })
);
var ParameterObjectSchema = Type.Union([ParameterObjectWithSchemaSchema, ParameterObjectWithContentSchema]);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/request-body.js
var RequestBodyObjectSchema = Type.Object({
  /** A brief description of the request body. This could contain examples of use. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** REQUIRED. The content of the request body. The key is a media type or media type range and the value describes it. For requests that match multiple keys, only the most specific key is applicable. e.g. "text/plain" overrides "text/* */
  content: Type.Record(Type.String(), MediaTypeObjectSchema),
  /** Determines if the request body is required in the request. Defaults to false. */
  required: Type.Optional(Type.Boolean())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/link.js
var LinkObjectSchema = Type.Object({
  /** A URI reference to an OAS operation. This field is mutually exclusive of the operationId field, and MUST point to an Operation Object. Relative operationRef values MAY be used to locate an existing Operation Object in the OpenAPI Description. */
  operationRef: Type.Optional(Type.String()),
  /** The name of an existing, resolvable OAS operation, as defined with a unique operationId. This field is mutually exclusive of the operationRef field. */
  operationId: Type.Optional(Type.String()),
  /** A map representing parameters to pass to an operation as specified with operationId or identified via operationRef. The key is the parameter name to be used (optionally qualified with the parameter location, e.g. path.id for an id parameter in the path), whereas the value can be a constant or an expression to be evaluated and passed to the linked operation. */
  parameters: Type.Optional(Type.Record(Type.String(), Type.Any())),
  /** A literal value or {expression} to use as a request body when calling the target operation. */
  requestBody: Type.Optional(Type.Any()),
  /** A description of the link. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** A server object to be used by the target operation. */
  server: Type.Optional(ServerObjectSchema)
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/response.js
var ResponseObjectSchema = Type.Object({
  /** REQUIRED. A description of the response. CommonMark syntax MAY be used for rich text representation. */
  description: Type.String(),
  /** Maps a header name to its definition. RFC7230 states header names are case insensitive. If a response header is defined with the name "Content-Type", it SHALL be ignored. */
  headers: Type.Optional(Type.Record(Type.String(), Type.Union([HeaderObjectSchema, reference(HeaderObjectSchema)]))),
  /** A map containing descriptions of potential response payloads. The key is a media type or media type range and the value describes it. For responses that match multiple keys, only the most specific key is applicable. e.g. "text/plain" overrides "text/*"  */
  content: Type.Optional(Type.Record(Type.String(), MediaTypeObjectSchema)),
  /** A map of operations links that can be followed from the response. The key of the map is a short name for the link, following the naming constraints of the names for Component Objects. */
  links: Type.Optional(Type.Record(Type.String(), Type.Union([LinkObjectSchema, reference(LinkObjectSchema)])))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/responses.js
var ResponsesObjectSchema = Type.Record(
  Type.String(),
  Type.Union([ResponseObjectSchema, reference(ResponseObjectSchema)])
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/security-requirement.js
var SecurityRequirementObjectSchema = Type.Record(
  Type.String(),
  /** Each name MUST correspond to a security scheme which is declared in the Security Schemes under the Components Object. If the security scheme is of type "oauth2" or "openIdConnect", then the value is a list of scope names required for the execution, and the list MAY be empty if authorization does not require a specified scope. For other security scheme types, the array MAY contain a list of role names which are required for the execution, but are not otherwise defined or exchanged in-band. */
  Type.Array(Type.String())
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/client-config-extensions/x-scalar-client-config-request-example.js
var exampleBodyMime = [
  "application/json",
  "text/plain",
  "text/html",
  "application/javascript",
  "application/xml",
  "application/yaml",
  "application/edn",
  "application/octet-stream",
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  /** Used for direct files */
  "binary"
];
var xScalarFileValueSchema = Type.Union([
  Type.Object({
    url: Type.String(),
    base64: Type.Optional(Type.String())
  }),
  Type.Null()
]);
var xScalarExampleBodySchema = Type.Object({
  encoding: Type.Union(exampleBodyMime.map((it2) => Type.Literal(it2))),
  content: Type.Union([Type.Record(Type.String(), Type.Any()), Type.String()]),
  file: Type.Optional(xScalarFileValueSchema)
});
var xScalarExampleParameterSchema = Type.Optional(Type.Record(Type.String(), Type.String()));
var xScalarClientConfigRequestExampleSchema = Type.Partial(
  Type.Object({
    name: Type.String(),
    body: xScalarExampleBodySchema,
    parameters: Type.Object({
      path: xScalarExampleParameterSchema,
      query: xScalarExampleParameterSchema,
      header: xScalarExampleParameterSchema,
      cookie: xScalarExampleParameterSchema
    })
  })
);

// node_modules/@scalar/workspace-store/dist/schemas/extensions/operation/x-badge.js
var BadgeSchema = Type.Object(
  {
    /** The text that displays in the badge. This is required for all badges. */
    name: Type.String({
      description: "The text that displays in the badge",
      minLength: 1
    }),
    /**
     * The position of the badge in relation to the header.
     * Defaults to 'after' if not specified.
     */
    position: Type.Optional(
      Type.Union([Type.Literal("before"), Type.Literal("after")], {
        description: "The position of the badge in relation to the header",
        default: "after"
      })
    ),
    /**
     * The color of the badge. Can be defined in various formats such as color keywords,
     * RGB, RGBA, HSL, HSLA, and Hexadecimal.
     */
    color: Type.Optional(
      Type.String({
        description: "The color of the badge in various formats (keywords, RGB, RGBA, HSL, HSLA, Hexadecimal)",
        pattern: "^(#([0-9A-Fa-f]{3}){1,2}|rgb\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*\\)|rgba\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*[0-9.]*\\s*\\)|hsl\\(\\s*\\d+\\s*,\\s*\\d+%\\s*,\\s*\\d+%\\s*\\)|hsla\\(\\s*\\d+\\s*,\\s*\\d+%\\s*,\\s*\\d+%\\s*,\\s*[0-9.]*\\s*\\)|[a-zA-Z]+)$"
      })
    )
  },
  {
    description: "Configuration for a single badge in the x-badges extension"
  }
);
var XBadgesSchema = Type.Object({
  "x-badges": Type.Optional(Type.Array(BadgeSchema))
});

// node_modules/@scalar/workspace-store/dist/schemas/extensions/operation/x-code-samples.js
var XCodeSampleSchema = Type.Object({
  lang: Type.Optional(Type.String()),
  label: Type.Optional(Type.String()),
  source: Type.String()
});
var XCodeSamplesSchema = Type.Object({
  "x-codeSamples": Type.Optional(Type.Array(XCodeSampleSchema)),
  "x-code-samples": Type.Optional(Type.Array(XCodeSampleSchema)),
  "x-custom-examples": Type.Optional(Type.Array(XCodeSampleSchema))
});

// node_modules/@scalar/workspace-store/dist/schemas/extensions/operation/x-scalar-stability.js
var XScalarStabilitySchema = Type.Object({
  "x-scalar-stability": Type.Optional(
    Type.Union([Type.Literal("deprecated"), Type.Literal("experimental"), Type.Literal("stable")])
  )
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/operation.js
var OperationExtensionsSchema = Type.Partial(
  Type.Object({
    "x-scalar-client-config-request-example": Type.Record(Type.String(), xScalarClientConfigRequestExampleSchema)
  })
);
var operationObjectSchemaBuilder = (callback) => compose(
  Type.Object({
    /** A list of tags for API documentation control. Tags can be used for logical grouping of operations by resources or any other qualifier. */
    tags: Type.Optional(Type.Array(Type.String())),
    /** A short summary of what the operation does. */
    summary: Type.Optional(Type.String()),
    /** A verbose explanation of the operation behavior. CommonMark syntax MAY be used for rich text representation. */
    description: Type.Optional(Type.String()),
    /** Additional external documentation for this operation. */
    externalDocs: Type.Optional(ExternalDocumentationObjectSchema),
    /** Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is case-sensitive. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions. */
    operationId: Type.Optional(Type.String()),
    /** A list of parameters that are applicable for this operation. If a parameter is already defined at the Path Item, the new definition will override it but can never remove it. The list MUST NOT include duplicated parameters. A unique parameter is defined by a combination of a name and location. The list can use the Reference Object to link to parameters that are defined in the OpenAPI Object's components.parameters. */
    parameters: Type.Optional(Type.Array(Type.Union([ParameterObjectSchema, reference(ParameterObjectSchema)]))),
    /** The request body applicable for this operation. The requestBody is fully supported in HTTP methods where the HTTP 1.1 specification RFC7231 has explicitly defined semantics for request bodies. In other cases where the HTTP spec is vague (such as GET, HEAD and DELETE), requestBody is permitted but does not have well-defined semantics and SHOULD be avoided if possible. */
    requestBody: Type.Optional(Type.Union([RequestBodyObjectSchema, reference(RequestBodyObjectSchema)])),
    /** The list of possible responses as they are returned from executing this operation. */
    responses: Type.Optional(ResponsesObjectSchema),
    /** Declares this operation to be deprecated. Consumers SHOULD refrain from usage of the declared operation. Default value is false. */
    deprecated: Type.Optional(Type.Boolean()),
    /** A declaration of which security mechanisms can be used for this operation. The list of values includes alternative Security Requirement Objects that can be used. Only one of the Security Requirement Objects need to be satisfied to authorize a request. To make security optional, an empty security requirement ({}) can be included in the array. This definition overrides any declared top-level security. To remove a top-level security declaration, an empty array can be used. */
    security: Type.Optional(Type.Array(SecurityRequirementObjectSchema)),
    /** An alternative servers array to service this operation. If a servers array is specified at the Path Item Object or OpenAPI Object level, it will be overridden by this value. */
    servers: Type.Optional(Type.Array(ServerObjectSchema)),
    /** A map of possible out-of band callbacks related to the parent operation. The key is a unique identifier for the Callback Object. Each value in the map is a Callback Object that describes a request that may be initiated by the API provider and the expected responses. */
    callbacks: Type.Optional(Type.Record(Type.String(), Type.Union([callback, reference(callback)])))
  }),
  OperationExtensionsSchema,
  XBadgesSchema,
  XInternalSchema,
  XScalarIgnoreSchema,
  XCodeSamplesSchema,
  XScalarStabilitySchema
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/path-item.js
var pathItemObjectSchemaBuilder = (operation) => Type.Object({
  /**
   * Allows for a referenced definition of this path item. The value MUST be in the form of a URI, and the referenced structure MUST be in the form of a Path Item Object. In case a Path Item Object field appears both in the defined object and the referenced object, the behavior is undefined. See the rules for resolving Relative References.
   *
   * Note: The behavior of $ref with adjacent properties is likely to change in future versions of this specification to bring it into closer alignment with the behavior of the Reference Object.
   */
  "$ref": Type.Optional(Type.String()),
  /** An optional string summary, intended to apply to all operations in this path. */
  summary: Type.Optional(Type.String()),
  /** An optional string description, intended to apply to all operations in this path. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** A definition of a GET operation on this path. */
  get: Type.Optional(Type.Union([operation, reference(operation)])),
  /** A definition of a PUT operation on this path. */
  put: Type.Optional(Type.Union([operation, reference(operation)])),
  /** A definition of a POST operation on this path. */
  post: Type.Optional(Type.Union([operation, reference(operation)])),
  /** A definition of a DELETE operation on this path. */
  delete: Type.Optional(Type.Union([operation, reference(operation)])),
  /** A definition of a PATCH operation on this path. */
  patch: Type.Optional(Type.Union([operation, reference(operation)])),
  /** A definition of a CONNECT operation on this path. */
  connect: Type.Optional(Type.Union([operation, reference(operation)])),
  /** A definition of a OPTIONS operation on this path. */
  options: Type.Optional(Type.Union([operation, reference(operation)])),
  /** A definition of a HEAD operation on this path. */
  head: Type.Optional(Type.Union([operation, reference(operation)])),
  /** A definition of a TRACE operation on this path. */
  trace: Type.Optional(Type.Union([operation, reference(operation)])),
  /** An alternative servers array to service all operations in this path. If a servers array is specified at the OpenAPI Object level, it will be overridden by this value. */
  servers: Type.Optional(Type.Array(ServerObjectSchema)),
  /** A list of parameters that are applicable for all the operations described under this path. These parameters can be overridden at the operation level, but cannot be removed there. The list MUST NOT include duplicated parameters. A unique parameter is defined by a combination of a name and location. The list can use the Reference Object to link to parameters that are defined in the OpenAPI Object's components.parameters. */
  parameters: Type.Optional(Type.Array(Type.Union([ParameterObjectSchema, reference(ParameterObjectSchema)])))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/path-operations.js
var OperationObjectSchema = Type.Recursive(
  (This) => operationObjectSchemaBuilder(callbackObjectSchemaBuilder(pathItemObjectSchemaBuilder(This)))
);
var CallbackObjectSchema = Type.Recursive(
  (This) => callbackObjectSchemaBuilder(pathItemObjectSchemaBuilder(operationObjectSchemaBuilder(This)))
);
var PathItemObjectSchema = Type.Recursive(
  (This) => pathItemObjectSchemaBuilder(operationObjectSchemaBuilder(callbackObjectSchemaBuilder(This)))
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/paths.js
var PathsObjectSchema = Type.Record(
  Type.String(),
  /** A relative path to an individual endpoint. The field name MUST begin with a forward slash (/). The path is appended (no relative URL resolution) to the expanded URL from the Server Object's url field in order to construct the full URL. Path templating is allowed. When matching URLs, concrete (non-templated) paths would be matched before their templated counterparts. Templated paths with the same hierarchy but different templated names MUST NOT exist as they are identical. In case of ambiguous matching, it's up to the tooling to decide which one to use. */
  PathItemObjectSchema
);

// node_modules/@scalar/workspace-store/dist/schemas/extensions/security/x-scalar-security-secrets.js
var XScalarSecretTokenSchema = Type.Object({
  "x-scalar-secret-token": Type.Optional(Type.String())
});
var XScalarSecretHTTPSchema = Type.Object({
  "x-scalar-secret-username": Type.Optional(Type.String()),
  "x-scalar-secret-password": Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/oauth-flow.js
var OAuthFlowCommonSchema = Type.Object({
  /** The URL to be used for obtaining refresh tokens. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
  refreshUrl: Type.Optional(Type.String()),
  /** REQUIRED. The available scopes for the OAuth2 security scheme. A map between the scope name and a short description for it. The map MAY be empty. */
  scopes: Type.Record(Type.String(), Type.String())
});
var OAuthFlowImplicitSchema = compose(
  OAuthFlowCommonSchema,
  XScalarSecretTokenSchema,
  Type.Object({
    /** REQUIRED. The authorization URL to be used for this flow. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
    authorizationUrl: Type.String()
  })
);
var OAuthFlowPasswordSchema = compose(
  OAuthFlowCommonSchema,
  XScalarSecretTokenSchema,
  Type.Object({
    /** REQUIRED. The token URL to be used for this flow. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
    tokenUrl: Type.String()
  })
);
var OAuthFlowClientCredentialsSchema = compose(
  OAuthFlowCommonSchema,
  XScalarSecretTokenSchema,
  Type.Object({
    /** REQUIRED. The token URL to be used for this flow. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
    tokenUrl: Type.String()
  })
);
var OAuthFlowAuthorizationCodeSchema = compose(
  OAuthFlowCommonSchema,
  XScalarSecretTokenSchema,
  Type.Object({
    /** REQUIRED. The authorization URL to be used for this flow. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
    authorizationUrl: Type.String(),
    /** REQUIRED. The token URL to be used for this flow. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
    tokenUrl: Type.String()
  })
);
var OAuthFlowObjectSchema = Type.Union([
  OAuthFlowImplicitSchema,
  OAuthFlowPasswordSchema,
  OAuthFlowClientCredentialsSchema,
  OAuthFlowAuthorizationCodeSchema
]);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/oauthflows.js
var OAuthFlowsObjectSchema = Type.Object({
  /** Configuration for the OAuth Implicit flow */
  implicit: Type.Optional(OAuthFlowImplicitSchema),
  /** Configuration for the OAuth Resource Owner Password flow */
  password: Type.Optional(OAuthFlowPasswordSchema),
  /** Configuration for the OAuth Client Credentials flow. Previously called application in OpenAPI 2.0. */
  clientCredentials: Type.Optional(OAuthFlowClientCredentialsSchema),
  /** Configuration for the OAuth Authorization Code flow. Previously called accessCode in OpenAPI 2.0. */
  authorizationCode: Type.Optional(OAuthFlowAuthorizationCodeSchema)
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/security-scheme.js
var DescriptionSchema = Type.Object({
  /** A description for security scheme. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String())
});
var ApiKeySchema = compose(
  DescriptionSchema,
  XScalarSecretTokenSchema,
  Type.Object({
    /** REQUIRED. The type of the security scheme. Valid values are "apiKey", "http", "mutualTLS", "oauth2", "openIdConnect". */
    type: Type.Literal("apiKey"),
    /** REQUIRED. The name of the header, query or cookie parameter to be used. */
    name: Type.String(),
    /** REQUIRED. The location of the API key. Valid values are "query", "header", or "cookie". */
    in: Type.String()
  })
);
var HttpSchema = compose(
  DescriptionSchema,
  XScalarSecretTokenSchema,
  XScalarSecretHTTPSchema,
  Type.Object({
    /** REQUIRED. The type of the security scheme. Valid values are "apiKey", "http", "mutualTLS", "oauth2", "openIdConnect". */
    type: Type.Literal("http"),
    /** REQUIRED. The name of the HTTP Authentication scheme to be used in the Authorization header as defined in RFC7235. The values used SHOULD be registered in the IANA Authentication Scheme registry. The value is case-insensitive, as defined in RFC7235. */
    scheme: Type.String(),
    /** A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes. */
    bearerFormat: Type.Optional(Type.String())
  })
);
var OAuth2 = compose(
  DescriptionSchema,
  Type.Object({
    /** REQUIRED. The type of the security scheme. Valid values are "apiKey", "http", "mutualTLS", "oauth2", "openIdConnect". */
    type: Type.Literal("oauth2"),
    /** REQUIRED. An object containing configuration information for the flow types supported. */
    flows: OAuthFlowsObjectSchema
  })
);
var OpenIdConnect = compose(
  DescriptionSchema,
  Type.Object({
    /** REQUIRED. The type of the security scheme. Valid values are "apiKey", "http", "mutualTLS", "oauth2", "openIdConnect". */
    type: Type.Literal("openIdConnect"),
    /** REQUIRED. Well-known URL to discover the [[OpenID-Connect-Discovery]] provider metadata. */
    openIdConnectUrl: Type.String()
  })
);
var SecuritySchemeObjectSchema = Type.Union([ApiKeySchema, HttpSchema, OAuth2, OpenIdConnect]);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/components.js
var ComponentsObjectSchema = Type.Object({
  /** An object to hold reusable Schema Objects. */
  schemas: Type.Optional(Type.Record(Type.String(), Type.Union([SchemaObjectSchema, reference(SchemaObjectSchema)]))),
  /** An object to hold reusable Response Objects. */
  responses: Type.Optional(
    Type.Record(Type.String(), Type.Union([ResponseObjectSchema, reference(ResponseObjectSchema)]))
  ),
  /** An object to hold reusable Parameter Objects. */
  parameters: Type.Optional(
    Type.Record(Type.String(), Type.Union([ParameterObjectSchema, reference(ParameterObjectSchema)]))
  ),
  /** An object to hold reusable Example Objects. */
  examples: Type.Optional(
    Type.Record(Type.String(), Type.Union([ExampleObjectSchema, reference(ExampleObjectSchema)]))
  ),
  /** An object to hold reusable Request Body Objects. */
  requestBodies: Type.Optional(
    Type.Record(Type.String(), Type.Union([RequestBodyObjectSchema, reference(RequestBodyObjectSchema)]))
  ),
  /** An object to hold reusable Header Objects. */
  headers: Type.Optional(Type.Record(Type.String(), Type.Union([HeaderObjectSchema, reference(HeaderObjectSchema)]))),
  /** An object to hold reusable Security Scheme Objects. */
  securitySchemes: Type.Optional(
    Type.Record(Type.String(), Type.Union([SecuritySchemeObjectSchema, reference(SecuritySchemeObjectSchema)]))
  ),
  /** An object to hold reusable Link Objects. */
  links: Type.Optional(Type.Record(Type.String(), Type.Union([LinkObjectSchema, reference(LinkObjectSchema)]))),
  /** An object to hold reusable Callback Objects. */
  callbacks: Type.Optional(
    Type.Record(Type.String(), Type.Union([CallbackObjectSchema, reference(CallbackObjectSchema)]))
  ),
  /** An object to hold reusable Path Item Objects. */
  pathItems: Type.Optional(Type.Record(Type.String(), PathItemObjectSchema))
});

// node_modules/@scalar/workspace-store/dist/schemas/extensions/tag/x-display-name.js
var XDisplayNameSchema = Type.Object({
  "x-displayName": Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/tag.js
var TagObjectSchema = compose(
  Type.Object({
    /** REQUIRED. The name of the tag. */
    name: Type.String(),
    /** A description for the tag. CommonMark syntax MAY be used for rich text representation. */
    description: Type.Optional(Type.String()),
    /** Additional external documentation for this tag. */
    externalDocs: Type.Optional(ExternalDocumentationObjectSchema)
  }),
  XDisplayNameSchema,
  XInternalSchema,
  XScalarIgnoreSchema
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/client-config-extensions/x-scalar-client-config-environments.js
var xScalarClientConfigEnvVarSchema = Type.Union([
  Type.Partial(
    Type.Object({
      description: Type.String(),
      default: Type.String()
    })
  ),
  Type.String()
]);
var xScalarClientConfigEnvironmentSchema = Type.Object({
  description: Type.Optional(Type.String()),
  color: Type.Optional(Type.String()),
  /** A map of variables by name */
  variables: Type.Record(Type.String(), xScalarClientConfigEnvVarSchema)
});
var xScalarClientConfigEnvironmentsSchema = Type.Record(Type.String(), xScalarClientConfigEnvironmentSchema);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/client-config-extensions/x-scalar-client-config-cookies.js
var xScalarClientConfigCookieSchema = Type.Object({
  name: Type.String(),
  value: Type.String(),
  domain: Type.Optional(Type.String()),
  path: Type.Optional(Type.String())
});
var xScalarClientConfigCookiesSchema = Type.Record(Type.String(), xScalarClientConfigCookieSchema);

// node_modules/@scalar/workspace-store/dist/schemas/navigation.js
var NavigationBaseSchema = Type.Object({
  type: Type.Union([
    Type.Literal("text"),
    Type.Literal("operation"),
    Type.Literal("model"),
    Type.Literal("tag"),
    Type.Literal("webhook")
  ]),
  id: Type.String(),
  title: Type.String()
});
var TraversedDescriptionSchema = compose(
  NavigationBaseSchema,
  Type.Object({
    type: Type.Literal("text"),
    children: Type.Optional(Type.Array(NavigationBaseSchema))
  })
);
var TraversedOperationSchema = compose(
  NavigationBaseSchema,
  Type.Object({
    type: Type.Literal("operation"),
    ref: Type.String(),
    method: Type.String(),
    path: Type.String()
  })
);
var TraversedSchemaSchema = compose(
  NavigationBaseSchema,
  Type.Object({
    type: Type.Literal("model"),
    ref: Type.String(),
    name: Type.String()
  })
);
var TraversedWebhookSchema = compose(
  NavigationBaseSchema,
  Type.Object({
    type: Type.Literal("webhook"),
    ref: Type.String(),
    method: Type.String(),
    name: Type.String()
  })
);
var traversedTagSchemaBuilder = (traversedEntrySchema) => compose(
  NavigationBaseSchema,
  Type.Object({
    type: Type.Literal("tag"),
    name: Type.String(),
    children: Type.Optional(Type.Array(traversedEntrySchema)),
    isGroup: Type.Boolean()
  })
);
var traversedEntrySchemaBuilder = (traversedTagSchema) => Type.Union([
  TraversedDescriptionSchema,
  TraversedOperationSchema,
  TraversedSchemaSchema,
  traversedTagSchema,
  TraversedWebhookSchema
]);
var TraversedTagSchema = Type.Recursive((This) => traversedTagSchemaBuilder(traversedEntrySchemaBuilder(This)));
var TraversedEntrySchema = Type.Recursive(
  (This) => traversedEntrySchemaBuilder(traversedTagSchemaBuilder(This))
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/strict/openapi-document.js
var OpenApiExtensionsSchema = Type.Partial(
  Type.Object({
    "x-tagGroups": Type.Array(
      compose(
        Type.Object({
          tags: Type.Array(Type.String())
        }),
        TagObjectSchema
      )
    ),
    "x-scalar-client-config-active-environment": Type.String(),
    /** A custom icon representing the collection */
    "x-scalar-client-config-icon": Type.String(),
    "x-scalar-client-config-environments": xScalarClientConfigEnvironmentsSchema,
    "x-scalar-client-config-cookies": xScalarClientConfigCookiesSchema,
    [extensions.document.navigation]: Type.Array(TraversedEntrySchema)
  })
);
var OpenAPIDocumentSchema = compose(
  Type.Object({
    /** REQUIRED. This string MUST be the version number of the OpenAPI Specification that the OpenAPI Document uses. The openapi field SHOULD be used by tooling to interpret the OpenAPI Document. This is not related to the API info.version string. */
    openapi: Type.String(),
    /** REQUIRED. Provides metadata about the API. The metadata MAY be used by tooling as required. */
    info: InfoObjectSchema,
    /** The default value for the $schema keyword within Schema Objects contained within this OAS document. This MUST be in the form of a URI. */
    jsonSchemaDialect: Type.Optional(Type.String()),
    /** An array of Server Objects, which provide connectivity information to a target server. If the servers field is not provided, or is an empty array, the default value would be a Server Object with a url value of /. */
    servers: Type.Optional(Type.Array(ServerObjectSchema)),
    /** The available paths and operations for the API. */
    paths: Type.Optional(PathsObjectSchema),
    /** The incoming webhooks that MAY be received as part of this API and that the API consumer MAY choose to implement. Closely related to the callbacks feature, this section describes requests initiated other than by an API call, for example by an out of band registration. The key name is a unique string to refer to each webhook, while the (optionally referenced) Path Item Object describes a request that may be initiated by the API provider and the expected responses. An example is available. */
    webhooks: Type.Optional(Type.Record(Type.String(), PathItemObjectSchema)),
    /** An element to hold various Objects for the OpenAPI Description. */
    components: Type.Optional(ComponentsObjectSchema),
    /** A declaration of which security mechanisms can be used across the API. The list of values includes alternative Security Requirement Objects that can be used. Only one of the Security Requirement Objects need to be satisfied to authorize a request. Individual operations can override this definition. The list can be incomplete, up to being empty or absent. To make security explicitly optional, an empty security requirement ({}) can be included in the array. */
    security: Type.Optional(Type.Array(SecurityRequirementObjectSchema)),
    /** A list of tags used by the OpenAPI Description with additional metadata. The order of the tags can be used to reflect on their order by the parsing tools. Not all tags that are used by the Operation Object must be declared. The tags that are not declared MAY be organized randomly or based on the tools' logic. Each tag name in the list MUST be unique. */
    tags: Type.Optional(Type.Array(TagObjectSchema)),
    /** Additional external documentation. */
    externalDocs: Type.Optional(ExternalDocumentationObjectSchema)
  }),
  OpenApiExtensionsSchema
);

// node_modules/@scalar/workspace-store/dist/schemas/workspace.js
var WorkspaceDocumentMetaSchema = Type.Partial(
  Type.Object({
    [extensions.document.activeAuth]: Type.String(),
    [extensions.document.activeServer]: Type.String()
  })
);
var WorkspaceDocumentSchema = compose(WorkspaceDocumentMetaSchema, OpenAPIDocumentSchema);
var WorkspaceMetaSchema = Type.Partial(
  Type.Object({
    [extensions.workspace.darkMode]: Type.Boolean(),
    [extensions.workspace.defaultClient]: Type.Union(AVAILABLE_CLIENTS.map((client) => Type.Literal(client))),
    [extensions.workspace.activeDocument]: Type.String(),
    [extensions.workspace.theme]: Type.String()
  })
);
var WorkspaceExtensionsSchema = Type.Partial(
  Type.Object({
    "x-scalar-client-config-environments": xScalarClientConfigEnvironmentsSchema,
    "x-scalar-client-config-cookies": xScalarClientConfigCookiesSchema,
    "x-scalar-client-config-servers": Type.Array(ServerObjectSchema),
    "x-scalar-client-config-security-schemes": Type.Record(Type.String(), SecuritySchemeObjectSchema)
  })
);
var WorkspaceSchema = compose(
  WorkspaceMetaSchema,
  Type.Object({
    documents: Type.Record(Type.String(), WorkspaceDocumentSchema),
    /** Active document is possibly undefined if we attempt to lookup with an invalid key */
    activeDocument: Type.Union([Type.Undefined(), WorkspaceDocumentSchema])
  }),
  WorkspaceExtensionsSchema
);

// node_modules/@scalar/workspace-store/dist/schemas/reference-config/meta.js
var MetaSchema = Type.Partial(
  Type.Object({
    title: Type.String(),
    description: Type.String(),
    ogTitle: Type.String(),
    ogDescription: Type.String(),
    ogImage: Type.String(),
    twitterCard: Type.String()
  })
);
var defaultMeta = {
  title: "Scalar API Reference",
  description: "Scalar API Reference",
  ogTitle: "Scalar API Reference",
  ogDescription: "Scalar API Reference",
  ogImage: "https://scalar.com/images/scalar-logo.png",
  twitterCard: "summary_large_image"
};

// node_modules/@scalar/workspace-store/dist/schemas/reference-config/features.js
var FeaturesSchema = Type.Partial(
  Type.Object({
    showSidebar: Type.Boolean(),
    showModels: Type.Boolean(),
    showDownload: Type.Boolean(),
    showTestRequestButton: Type.Boolean(),
    showSearch: Type.Boolean(),
    showApiClientImport: Type.Boolean(),
    showDarkModeToggle: Type.Boolean(),
    expandAllTagSections: Type.Boolean(),
    persistAuthenticationState: Type.Boolean()
  })
);
var defaultFeatures = {
  showSidebar: true,
  showModels: true,
  showDownload: true,
  showTestRequestButton: true,
  showSearch: true,
  showApiClientImport: true,
  showDarkModeToggle: true,
  expandAllTagSections: false,
  persistAuthenticationState: false
};

// node_modules/@scalar/workspace-store/dist/schemas/reference-config/appearance.js
var AppearanceSchema = Type.Partial(
  Type.Object({
    layout: Type.Union([Type.Literal("modern"), Type.Literal("classic")]),
    theme: Type.String(),
    favicon: Type.String(),
    initialColorMode: Type.Union([Type.Literal("auto"), Type.Literal("dark"), Type.Literal("light")]),
    forceColorMode: Type.Union([Type.Literal("dark"), Type.Literal("light")]),
    css: Type.String(),
    loadDefaultFonts: Type.Boolean()
  })
);
var defaultAppearance = {
  layout: "modern",
  theme: "default",
  favicon: "",
  initialColorMode: "auto",
  forceColorMode: "dark",
  css: "",
  loadDefaultFonts: true
};

// node_modules/@scalar/workspace-store/dist/schemas/reference-config/routing.js
var RoutingSchema = Type.Partial(
  Type.Object({
    basePath: Type.String(),
    pathNotFound: Type.String()
  })
);
var defaultRouting = {
  basePath: "/",
  pathNotFound: "/"
};

// node_modules/@scalar/workspace-store/dist/schemas/reference-config/settings.js
var SettingsSchema = Type.Partial(
  Type.Object({
    proxyUrl: Type.String(),
    searchKey: Type.String(),
    /** Array of server configurations */
    servers: Type.Array(ServerObjectSchema),
    /** Base server URL for API requests */
    baseServerUrl: Type.String()
  })
);
var defaultSettings = {
  proxyUrl: "https://proxy.scalar.com",
  searchKey: "k",
  servers: [],
  baseServerUrl: ""
};

// node_modules/@scalar/workspace-store/dist/schemas/reference-config/index.js
var ReferenceConfigSchema = Type.Partial(
  Type.Object({
    /** Document level title */
    title: Type.String(),
    /** Unique slug to identify the document */
    slug: Type.String(),
    /** Settings for the API reference (controls behavior and options) */
    settings: SettingsSchema,
    /** Routing configuration (controls navigation) */
    routing: RoutingSchema,
    /** Appearance configuration (controls theming and UI options) */
    appearance: AppearanceSchema,
    /** Features configuration (toggles for enabling/disabling features) */
    features: FeaturesSchema,
    /** Meta information */
    meta: MetaSchema,
    /** List of enabled HTTP clients for code samples */
    httpClients: Type.Array(Type.Union(AVAILABLE_CLIENTS.map((client) => Type.Literal(client))))
  })
);
var defaultReferenceConfig = {
  title: "Scalar API Reference",
  slug: "scalar-api-reference",
  /**
   * Default settings for the API reference.
   */
  settings: defaultSettings,
  /**
   * Default routing configuration for the API reference.
   */
  routing: defaultRouting,
  /**
   * Default appearance configuration for the API reference.
   */
  appearance: defaultAppearance,
  /**
   * Default features configuration for the API reference.
   */
  features: defaultFeatures,
  /**
   * Default meta configuration for the API reference.
   */
  meta: defaultMeta,
  /**
   * Default HTTP clients for the API reference.
   */
  httpClients: AVAILABLE_CLIENTS
};

// node_modules/@scalar/workspace-store/dist/schemas/workspace-specification/config.js
var ConfigSchema = Type.Partial(
  Type.Object({
    "x-scalar-reference-config": ReferenceConfigSchema
  })
);

// node_modules/@scalar/workspace-store/dist/schemas/inmemory-workspace.js
var UnknownObjectSchema = Type.Record(Type.String(), Type.Unknown());
var InMemoryWorkspaceSchema = Type.Object({
  meta: WorkspaceMetaSchema,
  documentConfigs: Type.Record(Type.String(), ConfigSchema),
  documents: Type.Record(Type.String(), WorkspaceDocumentSchema),
  originalDocuments: Type.Record(Type.String(), UnknownObjectSchema),
  intermediateDocuments: Type.Record(Type.String(), UnknownObjectSchema),
  overrides: Type.Record(Type.String(), PartialDeep(WorkspaceDocumentSchema)),
  documentMeta: Type.Record(
    Type.String(),
    Type.Partial(
      Type.Object({
        documentSource: Type.Optional(Type.String())
      })
    )
  )
});

// node_modules/@sinclair/typebox/build/esm/system/system.mjs
var TypeSystemDuplicateTypeKind = class extends TypeBoxError {
  constructor(kind) {
    super(`Duplicate type kind '${kind}' detected`);
  }
};
var TypeSystemDuplicateFormat = class extends TypeBoxError {
  constructor(kind) {
    super(`Duplicate string format '${kind}' detected`);
  }
};
var TypeSystem;
(function(TypeSystem2) {
  function Type2(kind, check) {
    if (type_exports2.Has(kind))
      throw new TypeSystemDuplicateTypeKind(kind);
    type_exports2.Set(kind, check);
    return (options = {}) => Unsafe({ ...options, [Kind]: kind });
  }
  TypeSystem2.Type = Type2;
  function Format2(format, check) {
    if (format_exports.Has(format))
      throw new TypeSystemDuplicateFormat(format);
    format_exports.Set(format, check);
    return format;
  }
  TypeSystem2.Format = Format2;
})(TypeSystem || (TypeSystem = {}));

// node_modules/@sinclair/typebox/build/esm/errors/function.mjs
function DefaultErrorFunction(error) {
  switch (error.errorType) {
    case ValueErrorType.ArrayContains:
      return "Expected array to contain at least one matching value";
    case ValueErrorType.ArrayMaxContains:
      return `Expected array to contain no more than ${error.schema.maxContains} matching values`;
    case ValueErrorType.ArrayMinContains:
      return `Expected array to contain at least ${error.schema.minContains} matching values`;
    case ValueErrorType.ArrayMaxItems:
      return `Expected array length to be less or equal to ${error.schema.maxItems}`;
    case ValueErrorType.ArrayMinItems:
      return `Expected array length to be greater or equal to ${error.schema.minItems}`;
    case ValueErrorType.ArrayUniqueItems:
      return "Expected array elements to be unique";
    case ValueErrorType.Array:
      return "Expected array";
    case ValueErrorType.AsyncIterator:
      return "Expected AsyncIterator";
    case ValueErrorType.BigIntExclusiveMaximum:
      return `Expected bigint to be less than ${error.schema.exclusiveMaximum}`;
    case ValueErrorType.BigIntExclusiveMinimum:
      return `Expected bigint to be greater than ${error.schema.exclusiveMinimum}`;
    case ValueErrorType.BigIntMaximum:
      return `Expected bigint to be less or equal to ${error.schema.maximum}`;
    case ValueErrorType.BigIntMinimum:
      return `Expected bigint to be greater or equal to ${error.schema.minimum}`;
    case ValueErrorType.BigIntMultipleOf:
      return `Expected bigint to be a multiple of ${error.schema.multipleOf}`;
    case ValueErrorType.BigInt:
      return "Expected bigint";
    case ValueErrorType.Boolean:
      return "Expected boolean";
    case ValueErrorType.DateExclusiveMinimumTimestamp:
      return `Expected Date timestamp to be greater than ${error.schema.exclusiveMinimumTimestamp}`;
    case ValueErrorType.DateExclusiveMaximumTimestamp:
      return `Expected Date timestamp to be less than ${error.schema.exclusiveMaximumTimestamp}`;
    case ValueErrorType.DateMinimumTimestamp:
      return `Expected Date timestamp to be greater or equal to ${error.schema.minimumTimestamp}`;
    case ValueErrorType.DateMaximumTimestamp:
      return `Expected Date timestamp to be less or equal to ${error.schema.maximumTimestamp}`;
    case ValueErrorType.DateMultipleOfTimestamp:
      return `Expected Date timestamp to be a multiple of ${error.schema.multipleOfTimestamp}`;
    case ValueErrorType.Date:
      return "Expected Date";
    case ValueErrorType.Function:
      return "Expected function";
    case ValueErrorType.IntegerExclusiveMaximum:
      return `Expected integer to be less than ${error.schema.exclusiveMaximum}`;
    case ValueErrorType.IntegerExclusiveMinimum:
      return `Expected integer to be greater than ${error.schema.exclusiveMinimum}`;
    case ValueErrorType.IntegerMaximum:
      return `Expected integer to be less or equal to ${error.schema.maximum}`;
    case ValueErrorType.IntegerMinimum:
      return `Expected integer to be greater or equal to ${error.schema.minimum}`;
    case ValueErrorType.IntegerMultipleOf:
      return `Expected integer to be a multiple of ${error.schema.multipleOf}`;
    case ValueErrorType.Integer:
      return "Expected integer";
    case ValueErrorType.IntersectUnevaluatedProperties:
      return "Unexpected property";
    case ValueErrorType.Intersect:
      return "Expected all values to match";
    case ValueErrorType.Iterator:
      return "Expected Iterator";
    case ValueErrorType.Literal:
      return `Expected ${typeof error.schema.const === "string" ? `'${error.schema.const}'` : error.schema.const}`;
    case ValueErrorType.Never:
      return "Never";
    case ValueErrorType.Not:
      return "Value should not match";
    case ValueErrorType.Null:
      return "Expected null";
    case ValueErrorType.NumberExclusiveMaximum:
      return `Expected number to be less than ${error.schema.exclusiveMaximum}`;
    case ValueErrorType.NumberExclusiveMinimum:
      return `Expected number to be greater than ${error.schema.exclusiveMinimum}`;
    case ValueErrorType.NumberMaximum:
      return `Expected number to be less or equal to ${error.schema.maximum}`;
    case ValueErrorType.NumberMinimum:
      return `Expected number to be greater or equal to ${error.schema.minimum}`;
    case ValueErrorType.NumberMultipleOf:
      return `Expected number to be a multiple of ${error.schema.multipleOf}`;
    case ValueErrorType.Number:
      return "Expected number";
    case ValueErrorType.Object:
      return "Expected object";
    case ValueErrorType.ObjectAdditionalProperties:
      return "Unexpected property";
    case ValueErrorType.ObjectMaxProperties:
      return `Expected object to have no more than ${error.schema.maxProperties} properties`;
    case ValueErrorType.ObjectMinProperties:
      return `Expected object to have at least ${error.schema.minProperties} properties`;
    case ValueErrorType.ObjectRequiredProperty:
      return "Expected required property";
    case ValueErrorType.Promise:
      return "Expected Promise";
    case ValueErrorType.RegExp:
      return "Expected string to match regular expression";
    case ValueErrorType.StringFormatUnknown:
      return `Unknown format '${error.schema.format}'`;
    case ValueErrorType.StringFormat:
      return `Expected string to match '${error.schema.format}' format`;
    case ValueErrorType.StringMaxLength:
      return `Expected string length less or equal to ${error.schema.maxLength}`;
    case ValueErrorType.StringMinLength:
      return `Expected string length greater or equal to ${error.schema.minLength}`;
    case ValueErrorType.StringPattern:
      return `Expected string to match '${error.schema.pattern}'`;
    case ValueErrorType.String:
      return "Expected string";
    case ValueErrorType.Symbol:
      return "Expected symbol";
    case ValueErrorType.TupleLength:
      return `Expected tuple to have ${error.schema.maxItems || 0} elements`;
    case ValueErrorType.Tuple:
      return "Expected tuple";
    case ValueErrorType.Uint8ArrayMaxByteLength:
      return `Expected byte length less or equal to ${error.schema.maxByteLength}`;
    case ValueErrorType.Uint8ArrayMinByteLength:
      return `Expected byte length greater or equal to ${error.schema.minByteLength}`;
    case ValueErrorType.Uint8Array:
      return "Expected Uint8Array";
    case ValueErrorType.Undefined:
      return "Expected undefined";
    case ValueErrorType.Union:
      return "Expected union value";
    case ValueErrorType.Void:
      return "Expected void";
    case ValueErrorType.Kind:
      return `Expected kind '${error.schema[Kind]}'`;
    default:
      return "Unknown error type";
  }
}
var errorFunction = DefaultErrorFunction;
function GetErrorFunction() {
  return errorFunction;
}

// node_modules/@sinclair/typebox/build/esm/value/deref/deref.mjs
var TypeDereferenceError = class extends TypeBoxError {
  constructor(schema) {
    super(`Unable to dereference schema with $id '${schema.$ref}'`);
    this.schema = schema;
  }
};
function Resolve(schema, references) {
  const target = references.find((target2) => target2.$id === schema.$ref);
  if (target === void 0)
    throw new TypeDereferenceError(schema);
  return Deref(target, references);
}
function Pushref(schema, references) {
  if (!IsString2(schema.$id) || references.some((target) => target.$id === schema.$id))
    return references;
  references.push(schema);
  return references;
}
function Deref(schema, references) {
  return schema[Kind] === "This" || schema[Kind] === "Ref" ? Resolve(schema, references) : schema;
}

// node_modules/@sinclair/typebox/build/esm/value/hash/hash.mjs
var ValueHashError = class extends TypeBoxError {
  constructor(value) {
    super(`Unable to hash value`);
    this.value = value;
  }
};
var ByteMarker;
(function(ByteMarker2) {
  ByteMarker2[ByteMarker2["Undefined"] = 0] = "Undefined";
  ByteMarker2[ByteMarker2["Null"] = 1] = "Null";
  ByteMarker2[ByteMarker2["Boolean"] = 2] = "Boolean";
  ByteMarker2[ByteMarker2["Number"] = 3] = "Number";
  ByteMarker2[ByteMarker2["String"] = 4] = "String";
  ByteMarker2[ByteMarker2["Object"] = 5] = "Object";
  ByteMarker2[ByteMarker2["Array"] = 6] = "Array";
  ByteMarker2[ByteMarker2["Date"] = 7] = "Date";
  ByteMarker2[ByteMarker2["Uint8Array"] = 8] = "Uint8Array";
  ByteMarker2[ByteMarker2["Symbol"] = 9] = "Symbol";
  ByteMarker2[ByteMarker2["BigInt"] = 10] = "BigInt";
})(ByteMarker || (ByteMarker = {}));
var Accumulator = BigInt("14695981039346656037");
var [Prime, Size] = [BigInt("1099511628211"), BigInt(
  "18446744073709551616"
  /* 2 ^ 64 */
)];
var Bytes = Array.from({ length: 256 }).map((_22, i17) => BigInt(i17));
var F64 = new Float64Array(1);
var F64In = new DataView(F64.buffer);
var F64Out = new Uint8Array(F64.buffer);
function* NumberToBytes(value) {
  const byteCount = value === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value) + 1) / 8);
  for (let i17 = 0; i17 < byteCount; i17++) {
    yield value >> 8 * (byteCount - 1 - i17) & 255;
  }
}
function ArrayType2(value) {
  FNV1A64(ByteMarker.Array);
  for (const item of value) {
    Visit4(item);
  }
}
function BooleanType(value) {
  FNV1A64(ByteMarker.Boolean);
  FNV1A64(value ? 1 : 0);
}
function BigIntType(value) {
  FNV1A64(ByteMarker.BigInt);
  F64In.setBigInt64(0, value);
  for (const byte of F64Out) {
    FNV1A64(byte);
  }
}
function DateType2(value) {
  FNV1A64(ByteMarker.Date);
  Visit4(value.getTime());
}
function NullType(value) {
  FNV1A64(ByteMarker.Null);
}
function NumberType(value) {
  FNV1A64(ByteMarker.Number);
  F64In.setFloat64(0, value);
  for (const byte of F64Out) {
    FNV1A64(byte);
  }
}
function ObjectType2(value) {
  FNV1A64(ByteMarker.Object);
  for (const key of globalThis.Object.getOwnPropertyNames(value).sort()) {
    Visit4(key);
    Visit4(value[key]);
  }
}
function StringType(value) {
  FNV1A64(ByteMarker.String);
  for (let i17 = 0; i17 < value.length; i17++) {
    for (const byte of NumberToBytes(value.charCodeAt(i17))) {
      FNV1A64(byte);
    }
  }
}
function SymbolType(value) {
  FNV1A64(ByteMarker.Symbol);
  Visit4(value.description);
}
function Uint8ArrayType2(value) {
  FNV1A64(ByteMarker.Uint8Array);
  for (let i17 = 0; i17 < value.length; i17++) {
    FNV1A64(value[i17]);
  }
}
function UndefinedType(value) {
  return FNV1A64(ByteMarker.Undefined);
}
function Visit4(value) {
  if (IsArray2(value))
    return ArrayType2(value);
  if (IsBoolean2(value))
    return BooleanType(value);
  if (IsBigInt2(value))
    return BigIntType(value);
  if (IsDate2(value))
    return DateType2(value);
  if (IsNull2(value))
    return NullType(value);
  if (IsNumber2(value))
    return NumberType(value);
  if (IsObject2(value))
    return ObjectType2(value);
  if (IsString2(value))
    return StringType(value);
  if (IsSymbol2(value))
    return SymbolType(value);
  if (IsUint8Array2(value))
    return Uint8ArrayType2(value);
  if (IsUndefined2(value))
    return UndefinedType(value);
  throw new ValueHashError(value);
}
function FNV1A64(byte) {
  Accumulator = Accumulator ^ Bytes[byte];
  Accumulator = Accumulator * Prime % Size;
}
function Hash(value) {
  Accumulator = BigInt("14695981039346656037");
  Visit4(value);
  return Accumulator;
}

// node_modules/@sinclair/typebox/build/esm/value/check/check.mjs
var ValueCheckUnknownTypeError = class extends TypeBoxError {
  constructor(schema) {
    super(`Unknown type`);
    this.schema = schema;
  }
};
function IsAnyOrUnknown(schema) {
  return schema[Kind] === "Any" || schema[Kind] === "Unknown";
}
function IsDefined(value) {
  return value !== void 0;
}
function FromAny2(schema, references, value) {
  return true;
}
function FromArgument2(schema, references, value) {
  return true;
}
function FromArray7(schema, references, value) {
  if (!IsArray2(value))
    return false;
  if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {
    return false;
  }
  if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {
    return false;
  }
  if (!value.every((value2) => Visit5(schema.items, references, value2))) {
    return false;
  }
  if (schema.uniqueItems === true && !(function() {
    const set = /* @__PURE__ */ new Set();
    for (const element of value) {
      const hashed = Hash(element);
      if (set.has(hashed)) {
        return false;
      } else {
        set.add(hashed);
      }
    }
    return true;
  })()) {
    return false;
  }
  if (!(IsDefined(schema.contains) || IsNumber2(schema.minContains) || IsNumber2(schema.maxContains))) {
    return true;
  }
  const containsSchema = IsDefined(schema.contains) ? schema.contains : Never();
  const containsCount = value.reduce((acc, value2) => Visit5(containsSchema, references, value2) ? acc + 1 : acc, 0);
  if (containsCount === 0) {
    return false;
  }
  if (IsNumber2(schema.minContains) && containsCount < schema.minContains) {
    return false;
  }
  if (IsNumber2(schema.maxContains) && containsCount > schema.maxContains) {
    return false;
  }
  return true;
}
function FromAsyncIterator4(schema, references, value) {
  return IsAsyncIterator2(value);
}
function FromBigInt2(schema, references, value) {
  if (!IsBigInt2(value))
    return false;
  if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
    return false;
  }
  if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
    return false;
  }
  if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {
    return false;
  }
  return true;
}
function FromBoolean2(schema, references, value) {
  return IsBoolean2(value);
}
function FromConstructor4(schema, references, value) {
  return Visit5(schema.returns, references, value.prototype);
}
function FromDate2(schema, references, value) {
  if (!IsDate2(value))
    return false;
  if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {
    return false;
  }
  if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {
    return false;
  }
  if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {
    return false;
  }
  if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {
    return false;
  }
  if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {
    return false;
  }
  return true;
}
function FromFunction4(schema, references, value) {
  return IsFunction2(value);
}
function FromImport(schema, references, value) {
  const definitions = globalThis.Object.values(schema.$defs);
  const target = schema.$defs[schema.$ref];
  return Visit5(target, [...references, ...definitions], value);
}
function FromInteger2(schema, references, value) {
  if (!IsInteger(value)) {
    return false;
  }
  if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
    return false;
  }
  if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
    return false;
  }
  if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
    return false;
  }
  return true;
}
function FromIntersect9(schema, references, value) {
  const check1 = schema.allOf.every((schema2) => Visit5(schema2, references, value));
  if (schema.unevaluatedProperties === false) {
    const keyPattern = new RegExp(KeyOfPattern(schema));
    const check2 = Object.getOwnPropertyNames(value).every((key) => keyPattern.test(key));
    return check1 && check2;
  } else if (IsSchema(schema.unevaluatedProperties)) {
    const keyCheck = new RegExp(KeyOfPattern(schema));
    const check2 = Object.getOwnPropertyNames(value).every((key) => keyCheck.test(key) || Visit5(schema.unevaluatedProperties, references, value[key]));
    return check1 && check2;
  } else {
    return check1;
  }
}
function FromIterator4(schema, references, value) {
  return IsIterator2(value);
}
function FromLiteral3(schema, references, value) {
  return value === schema.const;
}
function FromNever2(schema, references, value) {
  return false;
}
function FromNot2(schema, references, value) {
  return !Visit5(schema.not, references, value);
}
function FromNull2(schema, references, value) {
  return IsNull2(value);
}
function FromNumber2(schema, references, value) {
  if (!TypeSystemPolicy.IsNumberLike(value))
    return false;
  if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
    return false;
  }
  if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
    return false;
  }
  if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
    return false;
  }
  return true;
}
function FromObject8(schema, references, value) {
  if (!TypeSystemPolicy.IsObjectLike(value))
    return false;
  if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
    return false;
  }
  if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
    return false;
  }
  const knownKeys = Object.getOwnPropertyNames(schema.properties);
  for (const knownKey of knownKeys) {
    const property = schema.properties[knownKey];
    if (schema.required && schema.required.includes(knownKey)) {
      if (!Visit5(property, references, value[knownKey])) {
        return false;
      }
      if ((ExtendsUndefinedCheck(property) || IsAnyOrUnknown(property)) && !(knownKey in value)) {
        return false;
      }
    } else {
      if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey) && !Visit5(property, references, value[knownKey])) {
        return false;
      }
    }
  }
  if (schema.additionalProperties === false) {
    const valueKeys = Object.getOwnPropertyNames(value);
    if (schema.required && schema.required.length === knownKeys.length && valueKeys.length === knownKeys.length) {
      return true;
    } else {
      return valueKeys.every((valueKey) => knownKeys.includes(valueKey));
    }
  } else if (typeof schema.additionalProperties === "object") {
    const valueKeys = Object.getOwnPropertyNames(value);
    return valueKeys.every((key) => knownKeys.includes(key) || Visit5(schema.additionalProperties, references, value[key]));
  } else {
    return true;
  }
}
function FromPromise4(schema, references, value) {
  return IsPromise(value);
}
function FromRecord4(schema, references, value) {
  if (!TypeSystemPolicy.IsRecordLike(value)) {
    return false;
  }
  if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
    return false;
  }
  if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
    return false;
  }
  const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];
  const regex2 = new RegExp(patternKey);
  const check1 = Object.entries(value).every(([key, value2]) => {
    return regex2.test(key) ? Visit5(patternSchema, references, value2) : true;
  });
  const check2 = typeof schema.additionalProperties === "object" ? Object.entries(value).every(([key, value2]) => {
    return !regex2.test(key) ? Visit5(schema.additionalProperties, references, value2) : true;
  }) : true;
  const check3 = schema.additionalProperties === false ? Object.getOwnPropertyNames(value).every((key) => {
    return regex2.test(key);
  }) : true;
  return check1 && check2 && check3;
}
function FromRef5(schema, references, value) {
  return Visit5(Deref(schema, references), references, value);
}
function FromRegExp2(schema, references, value) {
  const regex2 = new RegExp(schema.source, schema.flags);
  if (IsDefined(schema.minLength)) {
    if (!(value.length >= schema.minLength))
      return false;
  }
  if (IsDefined(schema.maxLength)) {
    if (!(value.length <= schema.maxLength))
      return false;
  }
  return regex2.test(value);
}
function FromString2(schema, references, value) {
  if (!IsString2(value)) {
    return false;
  }
  if (IsDefined(schema.minLength)) {
    if (!(value.length >= schema.minLength))
      return false;
  }
  if (IsDefined(schema.maxLength)) {
    if (!(value.length <= schema.maxLength))
      return false;
  }
  if (IsDefined(schema.pattern)) {
    const regex2 = new RegExp(schema.pattern);
    if (!regex2.test(value))
      return false;
  }
  if (IsDefined(schema.format)) {
    if (!format_exports.Has(schema.format))
      return false;
    const func = format_exports.Get(schema.format);
    return func(value);
  }
  return true;
}
function FromSymbol2(schema, references, value) {
  return IsSymbol2(value);
}
function FromTemplateLiteral4(schema, references, value) {
  return IsString2(value) && new RegExp(schema.pattern).test(value);
}
function FromThis(schema, references, value) {
  return Visit5(Deref(schema, references), references, value);
}
function FromTuple6(schema, references, value) {
  if (!IsArray2(value)) {
    return false;
  }
  if (schema.items === void 0 && !(value.length === 0)) {
    return false;
  }
  if (!(value.length === schema.maxItems)) {
    return false;
  }
  if (!schema.items) {
    return true;
  }
  for (let i17 = 0; i17 < schema.items.length; i17++) {
    if (!Visit5(schema.items[i17], references, value[i17]))
      return false;
  }
  return true;
}
function FromUndefined2(schema, references, value) {
  return IsUndefined2(value);
}
function FromUnion11(schema, references, value) {
  return schema.anyOf.some((inner) => Visit5(inner, references, value));
}
function FromUint8Array2(schema, references, value) {
  if (!IsUint8Array2(value)) {
    return false;
  }
  if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {
    return false;
  }
  if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {
    return false;
  }
  return true;
}
function FromUnknown2(schema, references, value) {
  return true;
}
function FromVoid2(schema, references, value) {
  return TypeSystemPolicy.IsVoidLike(value);
}
function FromKind(schema, references, value) {
  if (!type_exports2.Has(schema[Kind]))
    return false;
  const func = type_exports2.Get(schema[Kind]);
  return func(schema, value);
}
function Visit5(schema, references, value) {
  const references_ = IsDefined(schema.$id) ? Pushref(schema, references) : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Any":
      return FromAny2(schema_, references_, value);
    case "Argument":
      return FromArgument2(schema_, references_, value);
    case "Array":
      return FromArray7(schema_, references_, value);
    case "AsyncIterator":
      return FromAsyncIterator4(schema_, references_, value);
    case "BigInt":
      return FromBigInt2(schema_, references_, value);
    case "Boolean":
      return FromBoolean2(schema_, references_, value);
    case "Constructor":
      return FromConstructor4(schema_, references_, value);
    case "Date":
      return FromDate2(schema_, references_, value);
    case "Function":
      return FromFunction4(schema_, references_, value);
    case "Import":
      return FromImport(schema_, references_, value);
    case "Integer":
      return FromInteger2(schema_, references_, value);
    case "Intersect":
      return FromIntersect9(schema_, references_, value);
    case "Iterator":
      return FromIterator4(schema_, references_, value);
    case "Literal":
      return FromLiteral3(schema_, references_, value);
    case "Never":
      return FromNever2(schema_, references_, value);
    case "Not":
      return FromNot2(schema_, references_, value);
    case "Null":
      return FromNull2(schema_, references_, value);
    case "Number":
      return FromNumber2(schema_, references_, value);
    case "Object":
      return FromObject8(schema_, references_, value);
    case "Promise":
      return FromPromise4(schema_, references_, value);
    case "Record":
      return FromRecord4(schema_, references_, value);
    case "Ref":
      return FromRef5(schema_, references_, value);
    case "RegExp":
      return FromRegExp2(schema_, references_, value);
    case "String":
      return FromString2(schema_, references_, value);
    case "Symbol":
      return FromSymbol2(schema_, references_, value);
    case "TemplateLiteral":
      return FromTemplateLiteral4(schema_, references_, value);
    case "This":
      return FromThis(schema_, references_, value);
    case "Tuple":
      return FromTuple6(schema_, references_, value);
    case "Undefined":
      return FromUndefined2(schema_, references_, value);
    case "Union":
      return FromUnion11(schema_, references_, value);
    case "Uint8Array":
      return FromUint8Array2(schema_, references_, value);
    case "Unknown":
      return FromUnknown2(schema_, references_, value);
    case "Void":
      return FromVoid2(schema_, references_, value);
    default:
      if (!type_exports2.Has(schema_[Kind]))
        throw new ValueCheckUnknownTypeError(schema_);
      return FromKind(schema_, references_, value);
  }
}
function Check(...args) {
  return args.length === 3 ? Visit5(args[0], args[1], args[2]) : Visit5(args[0], [], args[1]);
}

// node_modules/@sinclair/typebox/build/esm/errors/errors.mjs
var ValueErrorType;
(function(ValueErrorType2) {
  ValueErrorType2[ValueErrorType2["ArrayContains"] = 0] = "ArrayContains";
  ValueErrorType2[ValueErrorType2["ArrayMaxContains"] = 1] = "ArrayMaxContains";
  ValueErrorType2[ValueErrorType2["ArrayMaxItems"] = 2] = "ArrayMaxItems";
  ValueErrorType2[ValueErrorType2["ArrayMinContains"] = 3] = "ArrayMinContains";
  ValueErrorType2[ValueErrorType2["ArrayMinItems"] = 4] = "ArrayMinItems";
  ValueErrorType2[ValueErrorType2["ArrayUniqueItems"] = 5] = "ArrayUniqueItems";
  ValueErrorType2[ValueErrorType2["Array"] = 6] = "Array";
  ValueErrorType2[ValueErrorType2["AsyncIterator"] = 7] = "AsyncIterator";
  ValueErrorType2[ValueErrorType2["BigIntExclusiveMaximum"] = 8] = "BigIntExclusiveMaximum";
  ValueErrorType2[ValueErrorType2["BigIntExclusiveMinimum"] = 9] = "BigIntExclusiveMinimum";
  ValueErrorType2[ValueErrorType2["BigIntMaximum"] = 10] = "BigIntMaximum";
  ValueErrorType2[ValueErrorType2["BigIntMinimum"] = 11] = "BigIntMinimum";
  ValueErrorType2[ValueErrorType2["BigIntMultipleOf"] = 12] = "BigIntMultipleOf";
  ValueErrorType2[ValueErrorType2["BigInt"] = 13] = "BigInt";
  ValueErrorType2[ValueErrorType2["Boolean"] = 14] = "Boolean";
  ValueErrorType2[ValueErrorType2["DateExclusiveMaximumTimestamp"] = 15] = "DateExclusiveMaximumTimestamp";
  ValueErrorType2[ValueErrorType2["DateExclusiveMinimumTimestamp"] = 16] = "DateExclusiveMinimumTimestamp";
  ValueErrorType2[ValueErrorType2["DateMaximumTimestamp"] = 17] = "DateMaximumTimestamp";
  ValueErrorType2[ValueErrorType2["DateMinimumTimestamp"] = 18] = "DateMinimumTimestamp";
  ValueErrorType2[ValueErrorType2["DateMultipleOfTimestamp"] = 19] = "DateMultipleOfTimestamp";
  ValueErrorType2[ValueErrorType2["Date"] = 20] = "Date";
  ValueErrorType2[ValueErrorType2["Function"] = 21] = "Function";
  ValueErrorType2[ValueErrorType2["IntegerExclusiveMaximum"] = 22] = "IntegerExclusiveMaximum";
  ValueErrorType2[ValueErrorType2["IntegerExclusiveMinimum"] = 23] = "IntegerExclusiveMinimum";
  ValueErrorType2[ValueErrorType2["IntegerMaximum"] = 24] = "IntegerMaximum";
  ValueErrorType2[ValueErrorType2["IntegerMinimum"] = 25] = "IntegerMinimum";
  ValueErrorType2[ValueErrorType2["IntegerMultipleOf"] = 26] = "IntegerMultipleOf";
  ValueErrorType2[ValueErrorType2["Integer"] = 27] = "Integer";
  ValueErrorType2[ValueErrorType2["IntersectUnevaluatedProperties"] = 28] = "IntersectUnevaluatedProperties";
  ValueErrorType2[ValueErrorType2["Intersect"] = 29] = "Intersect";
  ValueErrorType2[ValueErrorType2["Iterator"] = 30] = "Iterator";
  ValueErrorType2[ValueErrorType2["Kind"] = 31] = "Kind";
  ValueErrorType2[ValueErrorType2["Literal"] = 32] = "Literal";
  ValueErrorType2[ValueErrorType2["Never"] = 33] = "Never";
  ValueErrorType2[ValueErrorType2["Not"] = 34] = "Not";
  ValueErrorType2[ValueErrorType2["Null"] = 35] = "Null";
  ValueErrorType2[ValueErrorType2["NumberExclusiveMaximum"] = 36] = "NumberExclusiveMaximum";
  ValueErrorType2[ValueErrorType2["NumberExclusiveMinimum"] = 37] = "NumberExclusiveMinimum";
  ValueErrorType2[ValueErrorType2["NumberMaximum"] = 38] = "NumberMaximum";
  ValueErrorType2[ValueErrorType2["NumberMinimum"] = 39] = "NumberMinimum";
  ValueErrorType2[ValueErrorType2["NumberMultipleOf"] = 40] = "NumberMultipleOf";
  ValueErrorType2[ValueErrorType2["Number"] = 41] = "Number";
  ValueErrorType2[ValueErrorType2["ObjectAdditionalProperties"] = 42] = "ObjectAdditionalProperties";
  ValueErrorType2[ValueErrorType2["ObjectMaxProperties"] = 43] = "ObjectMaxProperties";
  ValueErrorType2[ValueErrorType2["ObjectMinProperties"] = 44] = "ObjectMinProperties";
  ValueErrorType2[ValueErrorType2["ObjectRequiredProperty"] = 45] = "ObjectRequiredProperty";
  ValueErrorType2[ValueErrorType2["Object"] = 46] = "Object";
  ValueErrorType2[ValueErrorType2["Promise"] = 47] = "Promise";
  ValueErrorType2[ValueErrorType2["RegExp"] = 48] = "RegExp";
  ValueErrorType2[ValueErrorType2["StringFormatUnknown"] = 49] = "StringFormatUnknown";
  ValueErrorType2[ValueErrorType2["StringFormat"] = 50] = "StringFormat";
  ValueErrorType2[ValueErrorType2["StringMaxLength"] = 51] = "StringMaxLength";
  ValueErrorType2[ValueErrorType2["StringMinLength"] = 52] = "StringMinLength";
  ValueErrorType2[ValueErrorType2["StringPattern"] = 53] = "StringPattern";
  ValueErrorType2[ValueErrorType2["String"] = 54] = "String";
  ValueErrorType2[ValueErrorType2["Symbol"] = 55] = "Symbol";
  ValueErrorType2[ValueErrorType2["TupleLength"] = 56] = "TupleLength";
  ValueErrorType2[ValueErrorType2["Tuple"] = 57] = "Tuple";
  ValueErrorType2[ValueErrorType2["Uint8ArrayMaxByteLength"] = 58] = "Uint8ArrayMaxByteLength";
  ValueErrorType2[ValueErrorType2["Uint8ArrayMinByteLength"] = 59] = "Uint8ArrayMinByteLength";
  ValueErrorType2[ValueErrorType2["Uint8Array"] = 60] = "Uint8Array";
  ValueErrorType2[ValueErrorType2["Undefined"] = 61] = "Undefined";
  ValueErrorType2[ValueErrorType2["Union"] = 62] = "Union";
  ValueErrorType2[ValueErrorType2["Void"] = 63] = "Void";
})(ValueErrorType || (ValueErrorType = {}));
var ValueErrorsUnknownTypeError = class extends TypeBoxError {
  constructor(schema) {
    super("Unknown type");
    this.schema = schema;
  }
};
function EscapeKey(key) {
  return key.replace(/~/g, "~0").replace(/\//g, "~1");
}
function IsDefined2(value) {
  return value !== void 0;
}
var ValueErrorIterator = class {
  constructor(iterator) {
    this.iterator = iterator;
  }
  [Symbol.iterator]() {
    return this.iterator;
  }
  /** Returns the first value error or undefined if no errors */
  First() {
    const next = this.iterator.next();
    return next.done ? void 0 : next.value;
  }
};
function Create(errorType, schema, path, value, errors = []) {
  return {
    type: errorType,
    schema,
    path,
    value,
    message: GetErrorFunction()({ errorType, path, schema, value, errors }),
    errors
  };
}
function* FromAny3(schema, references, path, value) {
}
function* FromArgument3(schema, references, path, value) {
}
function* FromArray8(schema, references, path, value) {
  if (!IsArray2(value)) {
    return yield Create(ValueErrorType.Array, schema, path, value);
  }
  if (IsDefined2(schema.minItems) && !(value.length >= schema.minItems)) {
    yield Create(ValueErrorType.ArrayMinItems, schema, path, value);
  }
  if (IsDefined2(schema.maxItems) && !(value.length <= schema.maxItems)) {
    yield Create(ValueErrorType.ArrayMaxItems, schema, path, value);
  }
  for (let i17 = 0; i17 < value.length; i17++) {
    yield* Visit6(schema.items, references, `${path}/${i17}`, value[i17]);
  }
  if (schema.uniqueItems === true && !(function() {
    const set = /* @__PURE__ */ new Set();
    for (const element of value) {
      const hashed = Hash(element);
      if (set.has(hashed)) {
        return false;
      } else {
        set.add(hashed);
      }
    }
    return true;
  })()) {
    yield Create(ValueErrorType.ArrayUniqueItems, schema, path, value);
  }
  if (!(IsDefined2(schema.contains) || IsDefined2(schema.minContains) || IsDefined2(schema.maxContains))) {
    return;
  }
  const containsSchema = IsDefined2(schema.contains) ? schema.contains : Never();
  const containsCount = value.reduce((acc, value2, index) => Visit6(containsSchema, references, `${path}${index}`, value2).next().done === true ? acc + 1 : acc, 0);
  if (containsCount === 0) {
    yield Create(ValueErrorType.ArrayContains, schema, path, value);
  }
  if (IsNumber2(schema.minContains) && containsCount < schema.minContains) {
    yield Create(ValueErrorType.ArrayMinContains, schema, path, value);
  }
  if (IsNumber2(schema.maxContains) && containsCount > schema.maxContains) {
    yield Create(ValueErrorType.ArrayMaxContains, schema, path, value);
  }
}
function* FromAsyncIterator5(schema, references, path, value) {
  if (!IsAsyncIterator2(value))
    yield Create(ValueErrorType.AsyncIterator, schema, path, value);
}
function* FromBigInt3(schema, references, path, value) {
  if (!IsBigInt2(value))
    return yield Create(ValueErrorType.BigInt, schema, path, value);
  if (IsDefined2(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    yield Create(ValueErrorType.BigIntExclusiveMaximum, schema, path, value);
  }
  if (IsDefined2(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    yield Create(ValueErrorType.BigIntExclusiveMinimum, schema, path, value);
  }
  if (IsDefined2(schema.maximum) && !(value <= schema.maximum)) {
    yield Create(ValueErrorType.BigIntMaximum, schema, path, value);
  }
  if (IsDefined2(schema.minimum) && !(value >= schema.minimum)) {
    yield Create(ValueErrorType.BigIntMinimum, schema, path, value);
  }
  if (IsDefined2(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {
    yield Create(ValueErrorType.BigIntMultipleOf, schema, path, value);
  }
}
function* FromBoolean3(schema, references, path, value) {
  if (!IsBoolean2(value))
    yield Create(ValueErrorType.Boolean, schema, path, value);
}
function* FromConstructor5(schema, references, path, value) {
  yield* Visit6(schema.returns, references, path, value.prototype);
}
function* FromDate3(schema, references, path, value) {
  if (!IsDate2(value))
    return yield Create(ValueErrorType.Date, schema, path, value);
  if (IsDefined2(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {
    yield Create(ValueErrorType.DateExclusiveMaximumTimestamp, schema, path, value);
  }
  if (IsDefined2(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {
    yield Create(ValueErrorType.DateExclusiveMinimumTimestamp, schema, path, value);
  }
  if (IsDefined2(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {
    yield Create(ValueErrorType.DateMaximumTimestamp, schema, path, value);
  }
  if (IsDefined2(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {
    yield Create(ValueErrorType.DateMinimumTimestamp, schema, path, value);
  }
  if (IsDefined2(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {
    yield Create(ValueErrorType.DateMultipleOfTimestamp, schema, path, value);
  }
}
function* FromFunction5(schema, references, path, value) {
  if (!IsFunction2(value))
    yield Create(ValueErrorType.Function, schema, path, value);
}
function* FromImport2(schema, references, path, value) {
  const definitions = globalThis.Object.values(schema.$defs);
  const target = schema.$defs[schema.$ref];
  yield* Visit6(target, [...references, ...definitions], path, value);
}
function* FromInteger3(schema, references, path, value) {
  if (!IsInteger(value))
    return yield Create(ValueErrorType.Integer, schema, path, value);
  if (IsDefined2(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    yield Create(ValueErrorType.IntegerExclusiveMaximum, schema, path, value);
  }
  if (IsDefined2(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    yield Create(ValueErrorType.IntegerExclusiveMinimum, schema, path, value);
  }
  if (IsDefined2(schema.maximum) && !(value <= schema.maximum)) {
    yield Create(ValueErrorType.IntegerMaximum, schema, path, value);
  }
  if (IsDefined2(schema.minimum) && !(value >= schema.minimum)) {
    yield Create(ValueErrorType.IntegerMinimum, schema, path, value);
  }
  if (IsDefined2(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
    yield Create(ValueErrorType.IntegerMultipleOf, schema, path, value);
  }
}
function* FromIntersect10(schema, references, path, value) {
  let hasError = false;
  for (const inner of schema.allOf) {
    for (const error of Visit6(inner, references, path, value)) {
      hasError = true;
      yield error;
    }
  }
  if (hasError) {
    return yield Create(ValueErrorType.Intersect, schema, path, value);
  }
  if (schema.unevaluatedProperties === false) {
    const keyCheck = new RegExp(KeyOfPattern(schema));
    for (const valueKey of Object.getOwnPropertyNames(value)) {
      if (!keyCheck.test(valueKey)) {
        yield Create(ValueErrorType.IntersectUnevaluatedProperties, schema, `${path}/${valueKey}`, value);
      }
    }
  }
  if (typeof schema.unevaluatedProperties === "object") {
    const keyCheck = new RegExp(KeyOfPattern(schema));
    for (const valueKey of Object.getOwnPropertyNames(value)) {
      if (!keyCheck.test(valueKey)) {
        const next = Visit6(schema.unevaluatedProperties, references, `${path}/${valueKey}`, value[valueKey]).next();
        if (!next.done)
          yield next.value;
      }
    }
  }
}
function* FromIterator5(schema, references, path, value) {
  if (!IsIterator2(value))
    yield Create(ValueErrorType.Iterator, schema, path, value);
}
function* FromLiteral4(schema, references, path, value) {
  if (!(value === schema.const))
    yield Create(ValueErrorType.Literal, schema, path, value);
}
function* FromNever3(schema, references, path, value) {
  yield Create(ValueErrorType.Never, schema, path, value);
}
function* FromNot3(schema, references, path, value) {
  if (Visit6(schema.not, references, path, value).next().done === true)
    yield Create(ValueErrorType.Not, schema, path, value);
}
function* FromNull3(schema, references, path, value) {
  if (!IsNull2(value))
    yield Create(ValueErrorType.Null, schema, path, value);
}
function* FromNumber3(schema, references, path, value) {
  if (!TypeSystemPolicy.IsNumberLike(value))
    return yield Create(ValueErrorType.Number, schema, path, value);
  if (IsDefined2(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    yield Create(ValueErrorType.NumberExclusiveMaximum, schema, path, value);
  }
  if (IsDefined2(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    yield Create(ValueErrorType.NumberExclusiveMinimum, schema, path, value);
  }
  if (IsDefined2(schema.maximum) && !(value <= schema.maximum)) {
    yield Create(ValueErrorType.NumberMaximum, schema, path, value);
  }
  if (IsDefined2(schema.minimum) && !(value >= schema.minimum)) {
    yield Create(ValueErrorType.NumberMinimum, schema, path, value);
  }
  if (IsDefined2(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
    yield Create(ValueErrorType.NumberMultipleOf, schema, path, value);
  }
}
function* FromObject9(schema, references, path, value) {
  if (!TypeSystemPolicy.IsObjectLike(value))
    return yield Create(ValueErrorType.Object, schema, path, value);
  if (IsDefined2(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
    yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);
  }
  if (IsDefined2(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
    yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);
  }
  const requiredKeys = Array.isArray(schema.required) ? schema.required : [];
  const knownKeys = Object.getOwnPropertyNames(schema.properties);
  const unknownKeys = Object.getOwnPropertyNames(value);
  for (const requiredKey of requiredKeys) {
    if (unknownKeys.includes(requiredKey))
      continue;
    yield Create(ValueErrorType.ObjectRequiredProperty, schema.properties[requiredKey], `${path}/${EscapeKey(requiredKey)}`, void 0);
  }
  if (schema.additionalProperties === false) {
    for (const valueKey of unknownKeys) {
      if (!knownKeys.includes(valueKey)) {
        yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);
      }
    }
  }
  if (typeof schema.additionalProperties === "object") {
    for (const valueKey of unknownKeys) {
      if (knownKeys.includes(valueKey))
        continue;
      yield* Visit6(schema.additionalProperties, references, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);
    }
  }
  for (const knownKey of knownKeys) {
    const property = schema.properties[knownKey];
    if (schema.required && schema.required.includes(knownKey)) {
      yield* Visit6(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);
      if (ExtendsUndefinedCheck(schema) && !(knownKey in value)) {
        yield Create(ValueErrorType.ObjectRequiredProperty, property, `${path}/${EscapeKey(knownKey)}`, void 0);
      }
    } else {
      if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey)) {
        yield* Visit6(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);
      }
    }
  }
}
function* FromPromise5(schema, references, path, value) {
  if (!IsPromise(value))
    yield Create(ValueErrorType.Promise, schema, path, value);
}
function* FromRecord5(schema, references, path, value) {
  if (!TypeSystemPolicy.IsRecordLike(value))
    return yield Create(ValueErrorType.Object, schema, path, value);
  if (IsDefined2(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
    yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);
  }
  if (IsDefined2(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
    yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);
  }
  const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];
  const regex2 = new RegExp(patternKey);
  for (const [propertyKey, propertyValue] of Object.entries(value)) {
    if (regex2.test(propertyKey))
      yield* Visit6(patternSchema, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
  }
  if (typeof schema.additionalProperties === "object") {
    for (const [propertyKey, propertyValue] of Object.entries(value)) {
      if (!regex2.test(propertyKey))
        yield* Visit6(schema.additionalProperties, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
    }
  }
  if (schema.additionalProperties === false) {
    for (const [propertyKey, propertyValue] of Object.entries(value)) {
      if (regex2.test(propertyKey))
        continue;
      return yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
    }
  }
}
function* FromRef6(schema, references, path, value) {
  yield* Visit6(Deref(schema, references), references, path, value);
}
function* FromRegExp3(schema, references, path, value) {
  if (!IsString2(value))
    return yield Create(ValueErrorType.String, schema, path, value);
  if (IsDefined2(schema.minLength) && !(value.length >= schema.minLength)) {
    yield Create(ValueErrorType.StringMinLength, schema, path, value);
  }
  if (IsDefined2(schema.maxLength) && !(value.length <= schema.maxLength)) {
    yield Create(ValueErrorType.StringMaxLength, schema, path, value);
  }
  const regex2 = new RegExp(schema.source, schema.flags);
  if (!regex2.test(value)) {
    return yield Create(ValueErrorType.RegExp, schema, path, value);
  }
}
function* FromString3(schema, references, path, value) {
  if (!IsString2(value))
    return yield Create(ValueErrorType.String, schema, path, value);
  if (IsDefined2(schema.minLength) && !(value.length >= schema.minLength)) {
    yield Create(ValueErrorType.StringMinLength, schema, path, value);
  }
  if (IsDefined2(schema.maxLength) && !(value.length <= schema.maxLength)) {
    yield Create(ValueErrorType.StringMaxLength, schema, path, value);
  }
  if (IsString2(schema.pattern)) {
    const regex2 = new RegExp(schema.pattern);
    if (!regex2.test(value)) {
      yield Create(ValueErrorType.StringPattern, schema, path, value);
    }
  }
  if (IsString2(schema.format)) {
    if (!format_exports.Has(schema.format)) {
      yield Create(ValueErrorType.StringFormatUnknown, schema, path, value);
    } else {
      const format = format_exports.Get(schema.format);
      if (!format(value)) {
        yield Create(ValueErrorType.StringFormat, schema, path, value);
      }
    }
  }
}
function* FromSymbol3(schema, references, path, value) {
  if (!IsSymbol2(value))
    yield Create(ValueErrorType.Symbol, schema, path, value);
}
function* FromTemplateLiteral5(schema, references, path, value) {
  if (!IsString2(value))
    return yield Create(ValueErrorType.String, schema, path, value);
  const regex2 = new RegExp(schema.pattern);
  if (!regex2.test(value)) {
    yield Create(ValueErrorType.StringPattern, schema, path, value);
  }
}
function* FromThis2(schema, references, path, value) {
  yield* Visit6(Deref(schema, references), references, path, value);
}
function* FromTuple7(schema, references, path, value) {
  if (!IsArray2(value))
    return yield Create(ValueErrorType.Tuple, schema, path, value);
  if (schema.items === void 0 && !(value.length === 0)) {
    return yield Create(ValueErrorType.TupleLength, schema, path, value);
  }
  if (!(value.length === schema.maxItems)) {
    return yield Create(ValueErrorType.TupleLength, schema, path, value);
  }
  if (!schema.items) {
    return;
  }
  for (let i17 = 0; i17 < schema.items.length; i17++) {
    yield* Visit6(schema.items[i17], references, `${path}/${i17}`, value[i17]);
  }
}
function* FromUndefined3(schema, references, path, value) {
  if (!IsUndefined2(value))
    yield Create(ValueErrorType.Undefined, schema, path, value);
}
function* FromUnion12(schema, references, path, value) {
  if (Check(schema, references, value))
    return;
  const errors = schema.anyOf.map((variant) => new ValueErrorIterator(Visit6(variant, references, path, value)));
  yield Create(ValueErrorType.Union, schema, path, value, errors);
}
function* FromUint8Array3(schema, references, path, value) {
  if (!IsUint8Array2(value))
    return yield Create(ValueErrorType.Uint8Array, schema, path, value);
  if (IsDefined2(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {
    yield Create(ValueErrorType.Uint8ArrayMaxByteLength, schema, path, value);
  }
  if (IsDefined2(schema.minByteLength) && !(value.length >= schema.minByteLength)) {
    yield Create(ValueErrorType.Uint8ArrayMinByteLength, schema, path, value);
  }
}
function* FromUnknown3(schema, references, path, value) {
}
function* FromVoid3(schema, references, path, value) {
  if (!TypeSystemPolicy.IsVoidLike(value))
    yield Create(ValueErrorType.Void, schema, path, value);
}
function* FromKind2(schema, references, path, value) {
  const check = type_exports2.Get(schema[Kind]);
  if (!check(schema, value))
    yield Create(ValueErrorType.Kind, schema, path, value);
}
function* Visit6(schema, references, path, value) {
  const references_ = IsDefined2(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Any":
      return yield* FromAny3(schema_, references_, path, value);
    case "Argument":
      return yield* FromArgument3(schema_, references_, path, value);
    case "Array":
      return yield* FromArray8(schema_, references_, path, value);
    case "AsyncIterator":
      return yield* FromAsyncIterator5(schema_, references_, path, value);
    case "BigInt":
      return yield* FromBigInt3(schema_, references_, path, value);
    case "Boolean":
      return yield* FromBoolean3(schema_, references_, path, value);
    case "Constructor":
      return yield* FromConstructor5(schema_, references_, path, value);
    case "Date":
      return yield* FromDate3(schema_, references_, path, value);
    case "Function":
      return yield* FromFunction5(schema_, references_, path, value);
    case "Import":
      return yield* FromImport2(schema_, references_, path, value);
    case "Integer":
      return yield* FromInteger3(schema_, references_, path, value);
    case "Intersect":
      return yield* FromIntersect10(schema_, references_, path, value);
    case "Iterator":
      return yield* FromIterator5(schema_, references_, path, value);
    case "Literal":
      return yield* FromLiteral4(schema_, references_, path, value);
    case "Never":
      return yield* FromNever3(schema_, references_, path, value);
    case "Not":
      return yield* FromNot3(schema_, references_, path, value);
    case "Null":
      return yield* FromNull3(schema_, references_, path, value);
    case "Number":
      return yield* FromNumber3(schema_, references_, path, value);
    case "Object":
      return yield* FromObject9(schema_, references_, path, value);
    case "Promise":
      return yield* FromPromise5(schema_, references_, path, value);
    case "Record":
      return yield* FromRecord5(schema_, references_, path, value);
    case "Ref":
      return yield* FromRef6(schema_, references_, path, value);
    case "RegExp":
      return yield* FromRegExp3(schema_, references_, path, value);
    case "String":
      return yield* FromString3(schema_, references_, path, value);
    case "Symbol":
      return yield* FromSymbol3(schema_, references_, path, value);
    case "TemplateLiteral":
      return yield* FromTemplateLiteral5(schema_, references_, path, value);
    case "This":
      return yield* FromThis2(schema_, references_, path, value);
    case "Tuple":
      return yield* FromTuple7(schema_, references_, path, value);
    case "Undefined":
      return yield* FromUndefined3(schema_, references_, path, value);
    case "Union":
      return yield* FromUnion12(schema_, references_, path, value);
    case "Uint8Array":
      return yield* FromUint8Array3(schema_, references_, path, value);
    case "Unknown":
      return yield* FromUnknown3(schema_, references_, path, value);
    case "Void":
      return yield* FromVoid3(schema_, references_, path, value);
    default:
      if (!type_exports2.Has(schema_[Kind]))
        throw new ValueErrorsUnknownTypeError(schema);
      return yield* FromKind2(schema_, references_, path, value);
  }
}
function Errors(...args) {
  const iterator = args.length === 3 ? Visit6(args[0], args[1], "", args[2]) : Visit6(args[0], [], "", args[1]);
  return new ValueErrorIterator(iterator);
}

// node_modules/@sinclair/typebox/build/esm/value/assert/assert.mjs
var __classPrivateFieldSet = function(receiver, state, value, kind, f19) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f19) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f19 : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f19.call(receiver, value) : f19 ? f19.value = value : state.set(receiver, value), value;
};
var __classPrivateFieldGet = function(receiver, state, kind, f19) {
  if (kind === "a" && !f19) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f19 : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f19 : kind === "a" ? f19.call(receiver) : f19 ? f19.value : state.get(receiver);
};
var _AssertError_instances;
var _AssertError_iterator;
var _AssertError_Iterator;
var AssertError = class extends TypeBoxError {
  constructor(iterator) {
    const error = iterator.First();
    super(error === void 0 ? "Invalid Value" : error.message);
    _AssertError_instances.add(this);
    _AssertError_iterator.set(this, void 0);
    __classPrivateFieldSet(this, _AssertError_iterator, iterator, "f");
    this.error = error;
  }
  /** Returns an iterator for each error in this value. */
  Errors() {
    return new ValueErrorIterator(__classPrivateFieldGet(this, _AssertError_instances, "m", _AssertError_Iterator).call(this));
  }
};
_AssertError_iterator = /* @__PURE__ */ new WeakMap(), _AssertError_instances = /* @__PURE__ */ new WeakSet(), _AssertError_Iterator = function* _AssertError_Iterator2() {
  if (this.error)
    yield this.error;
  yield* __classPrivateFieldGet(this, _AssertError_iterator, "f");
};
function AssertValue(schema, references, value) {
  if (Check(schema, references, value))
    return;
  throw new AssertError(Errors(schema, references, value));
}
function Assert(...args) {
  return args.length === 3 ? AssertValue(args[0], args[1], args[2]) : AssertValue(args[0], [], args[1]);
}

// node_modules/@sinclair/typebox/build/esm/value/clone/clone.mjs
function FromObject10(value, cache) {
  if (cache.has(value))
    return cache.get(value);
  const Acc = {};
  cache.set(value, Acc);
  for (const key of Object.getOwnPropertyNames(value)) {
    Acc[key] = Clone2(value[key], cache);
  }
  for (const key of Object.getOwnPropertySymbols(value)) {
    Acc[key] = Clone2(value[key], cache);
  }
  return Acc;
}
function FromArray9(value, cache) {
  if (cache.has(value))
    return cache.get(value);
  const Acc = [];
  cache.set(value, Acc);
  for (let i17 = 0; i17 < value.length; i17++) {
    Acc.push(Clone2(value[i17], cache));
  }
  return Acc;
}
function FromTypedArray(value) {
  return value.slice();
}
function FromMap(value) {
  return new Map(Clone2([...value.entries()]));
}
function FromSet(value) {
  return new Set(Clone2([...value.entries()]));
}
function FromDate4(value) {
  return new Date(value.toISOString());
}
function FromValue2(value) {
  return value;
}
function Clone2(value, cache = /* @__PURE__ */ new WeakMap()) {
  if (IsArray2(value))
    return FromArray9(value, cache);
  if (IsDate2(value))
    return FromDate4(value);
  if (IsTypedArray(value))
    return FromTypedArray(value);
  if (IsMap(value))
    return FromMap(value);
  if (IsSet(value))
    return FromSet(value);
  if (IsObject2(value))
    return FromObject10(value, cache);
  if (IsValueType(value))
    return FromValue2(value);
  throw new Error("ValueClone: Unable to clone value");
}

// node_modules/@sinclair/typebox/build/esm/value/create/create.mjs
var ValueCreateError = class extends TypeBoxError {
  constructor(schema, message) {
    super(message);
    this.schema = schema;
  }
};
function FromDefault(value) {
  return IsFunction2(value) ? value() : Clone2(value);
}
function FromAny4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return {};
  }
}
function FromArgument4(schema, references) {
  return {};
}
function FromArray10(schema, references) {
  if (schema.uniqueItems === true && !HasPropertyKey2(schema, "default")) {
    throw new ValueCreateError(schema, "Array with the uniqueItems constraint requires a default value");
  } else if ("contains" in schema && !HasPropertyKey2(schema, "default")) {
    throw new ValueCreateError(schema, "Array with the contains constraint requires a default value");
  } else if ("default" in schema) {
    return FromDefault(schema.default);
  } else if (schema.minItems !== void 0) {
    return Array.from({ length: schema.minItems }).map((item) => {
      return Visit7(schema.items, references);
    });
  } else {
    return [];
  }
}
function FromAsyncIterator6(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return (async function* () {
    })();
  }
}
function FromBigInt4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return BigInt(0);
  }
}
function FromBoolean4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return false;
  }
}
function FromConstructor6(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    const value = Visit7(schema.returns, references);
    if (typeof value === "object" && !Array.isArray(value)) {
      return class {
        constructor() {
          for (const [key, val] of Object.entries(value)) {
            const self2 = this;
            self2[key] = val;
          }
        }
      };
    } else {
      return class {
      };
    }
  }
}
function FromDate5(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minimumTimestamp !== void 0) {
    return new Date(schema.minimumTimestamp);
  } else {
    return /* @__PURE__ */ new Date();
  }
}
function FromFunction6(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return () => Visit7(schema.returns, references);
  }
}
function FromImport3(schema, references) {
  const definitions = globalThis.Object.values(schema.$defs);
  const target = schema.$defs[schema.$ref];
  return Visit7(target, [...references, ...definitions]);
}
function FromInteger4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minimum !== void 0) {
    return schema.minimum;
  } else {
    return 0;
  }
}
function FromIntersect11(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    const value = schema.allOf.reduce((acc, schema2) => {
      const next = Visit7(schema2, references);
      return typeof next === "object" ? { ...acc, ...next } : next;
    }, {});
    if (!Check(schema, references, value))
      throw new ValueCreateError(schema, "Intersect produced invalid value. Consider using a default value.");
    return value;
  }
}
function FromIterator6(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return (function* () {
    })();
  }
}
function FromLiteral5(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return schema.const;
  }
}
function FromNever4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new ValueCreateError(schema, "Never types cannot be created. Consider using a default value.");
  }
}
function FromNot4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new ValueCreateError(schema, "Not types must have a default value");
  }
}
function FromNull4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return null;
  }
}
function FromNumber4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minimum !== void 0) {
    return schema.minimum;
  } else {
    return 0;
  }
}
function FromObject11(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    const required = new Set(schema.required);
    const Acc = {};
    for (const [key, subschema] of Object.entries(schema.properties)) {
      if (!required.has(key))
        continue;
      Acc[key] = Visit7(subschema, references);
    }
    return Acc;
  }
}
function FromPromise6(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return Promise.resolve(Visit7(schema.item, references));
  }
}
function FromRecord6(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return {};
  }
}
function FromRef7(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return Visit7(Deref(schema, references), references);
  }
}
function FromRegExp4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new ValueCreateError(schema, "RegExp types cannot be created. Consider using a default value.");
  }
}
function FromString4(schema, references) {
  if (schema.pattern !== void 0) {
    if (!HasPropertyKey2(schema, "default")) {
      throw new ValueCreateError(schema, "String types with patterns must specify a default value");
    } else {
      return FromDefault(schema.default);
    }
  } else if (schema.format !== void 0) {
    if (!HasPropertyKey2(schema, "default")) {
      throw new ValueCreateError(schema, "String types with formats must specify a default value");
    } else {
      return FromDefault(schema.default);
    }
  } else {
    if (HasPropertyKey2(schema, "default")) {
      return FromDefault(schema.default);
    } else if (schema.minLength !== void 0) {
      return Array.from({ length: schema.minLength }).map(() => " ").join("");
    } else {
      return "";
    }
  }
}
function FromSymbol4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else if ("value" in schema) {
    return Symbol.for(schema.value);
  } else {
    return Symbol();
  }
}
function FromTemplateLiteral6(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  }
  if (!IsTemplateLiteralFinite(schema))
    throw new ValueCreateError(schema, "Can only create template literals that produce a finite variants. Consider using a default value.");
  const generated = TemplateLiteralGenerate(schema);
  return generated[0];
}
function FromThis3(schema, references) {
  if (recursiveDepth++ > recursiveMaxDepth)
    throw new ValueCreateError(schema, "Cannot create recursive type as it appears possibly infinite. Consider using a default.");
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return Visit7(Deref(schema, references), references);
  }
}
function FromTuple8(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  }
  if (schema.items === void 0) {
    return [];
  } else {
    return Array.from({ length: schema.minItems }).map((_22, index) => Visit7(schema.items[index], references));
  }
}
function FromUndefined4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return void 0;
  }
}
function FromUnion13(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.anyOf.length === 0) {
    throw new Error("ValueCreate.Union: Cannot create Union with zero variants");
  } else {
    return Visit7(schema.anyOf[0], references);
  }
}
function FromUint8Array4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minByteLength !== void 0) {
    return new Uint8Array(schema.minByteLength);
  } else {
    return new Uint8Array(0);
  }
}
function FromUnknown4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return {};
  }
}
function FromVoid4(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return void 0;
  }
}
function FromKind3(schema, references) {
  if (HasPropertyKey2(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new Error("User defined types must specify a default value");
  }
}
function Visit7(schema, references) {
  const references_ = Pushref(schema, references);
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Any":
      return FromAny4(schema_, references_);
    case "Argument":
      return FromArgument4(schema_, references_);
    case "Array":
      return FromArray10(schema_, references_);
    case "AsyncIterator":
      return FromAsyncIterator6(schema_, references_);
    case "BigInt":
      return FromBigInt4(schema_, references_);
    case "Boolean":
      return FromBoolean4(schema_, references_);
    case "Constructor":
      return FromConstructor6(schema_, references_);
    case "Date":
      return FromDate5(schema_, references_);
    case "Function":
      return FromFunction6(schema_, references_);
    case "Import":
      return FromImport3(schema_, references_);
    case "Integer":
      return FromInteger4(schema_, references_);
    case "Intersect":
      return FromIntersect11(schema_, references_);
    case "Iterator":
      return FromIterator6(schema_, references_);
    case "Literal":
      return FromLiteral5(schema_, references_);
    case "Never":
      return FromNever4(schema_, references_);
    case "Not":
      return FromNot4(schema_, references_);
    case "Null":
      return FromNull4(schema_, references_);
    case "Number":
      return FromNumber4(schema_, references_);
    case "Object":
      return FromObject11(schema_, references_);
    case "Promise":
      return FromPromise6(schema_, references_);
    case "Record":
      return FromRecord6(schema_, references_);
    case "Ref":
      return FromRef7(schema_, references_);
    case "RegExp":
      return FromRegExp4(schema_, references_);
    case "String":
      return FromString4(schema_, references_);
    case "Symbol":
      return FromSymbol4(schema_, references_);
    case "TemplateLiteral":
      return FromTemplateLiteral6(schema_, references_);
    case "This":
      return FromThis3(schema_, references_);
    case "Tuple":
      return FromTuple8(schema_, references_);
    case "Undefined":
      return FromUndefined4(schema_, references_);
    case "Union":
      return FromUnion13(schema_, references_);
    case "Uint8Array":
      return FromUint8Array4(schema_, references_);
    case "Unknown":
      return FromUnknown4(schema_, references_);
    case "Void":
      return FromVoid4(schema_, references_);
    default:
      if (!type_exports2.Has(schema_[Kind]))
        throw new ValueCreateError(schema_, "Unknown type");
      return FromKind3(schema_, references_);
  }
}
var recursiveMaxDepth = 512;
var recursiveDepth = 0;
function Create2(...args) {
  recursiveDepth = 0;
  return args.length === 2 ? Visit7(args[0], args[1]) : Visit7(args[0], []);
}

// node_modules/@sinclair/typebox/build/esm/value/cast/cast.mjs
var ValueCastError = class extends TypeBoxError {
  constructor(schema, message) {
    super(message);
    this.schema = schema;
  }
};
function ScoreUnion(schema, references, value) {
  if (schema[Kind] === "Object" && typeof value === "object" && !IsNull2(value)) {
    const object = schema;
    const keys = Object.getOwnPropertyNames(value);
    const entries = Object.entries(object.properties);
    return entries.reduce((acc, [key, schema2]) => {
      const literal = schema2[Kind] === "Literal" && schema2.const === value[key] ? 100 : 0;
      const checks = Check(schema2, references, value[key]) ? 10 : 0;
      const exists = keys.includes(key) ? 1 : 0;
      return acc + (literal + checks + exists);
    }, 0);
  } else if (schema[Kind] === "Union") {
    const schemas = schema.anyOf.map((schema2) => Deref(schema2, references));
    const scores = schemas.map((schema2) => ScoreUnion(schema2, references, value));
    return Math.max(...scores);
  } else {
    return Check(schema, references, value) ? 1 : 0;
  }
}
function SelectUnion(union, references, value) {
  const schemas = union.anyOf.map((schema) => Deref(schema, references));
  let [select, best] = [schemas[0], 0];
  for (const schema of schemas) {
    const score = ScoreUnion(schema, references, value);
    if (score > best) {
      select = schema;
      best = score;
    }
  }
  return select;
}
function CastUnion(union, references, value) {
  if ("default" in union) {
    return typeof value === "function" ? union.default : Clone2(union.default);
  } else {
    const schema = SelectUnion(union, references, value);
    return Cast(schema, references, value);
  }
}
function DefaultClone(schema, references, value) {
  return Check(schema, references, value) ? Clone2(value) : Create2(schema, references);
}
function Default(schema, references, value) {
  return Check(schema, references, value) ? value : Create2(schema, references);
}
function FromArray11(schema, references, value) {
  if (Check(schema, references, value))
    return Clone2(value);
  const created = IsArray2(value) ? Clone2(value) : Create2(schema, references);
  const minimum = IsNumber2(schema.minItems) && created.length < schema.minItems ? [...created, ...Array.from({ length: schema.minItems - created.length }, () => null)] : created;
  const maximum = IsNumber2(schema.maxItems) && minimum.length > schema.maxItems ? minimum.slice(0, schema.maxItems) : minimum;
  const casted = maximum.map((value2) => Visit8(schema.items, references, value2));
  if (schema.uniqueItems !== true)
    return casted;
  const unique = [...new Set(casted)];
  if (!Check(schema, references, unique))
    throw new ValueCastError(schema, "Array cast produced invalid data due to uniqueItems constraint");
  return unique;
}
function FromConstructor7(schema, references, value) {
  if (Check(schema, references, value))
    return Create2(schema, references);
  const required = new Set(schema.returns.required || []);
  const result = function() {
  };
  for (const [key, property] of Object.entries(schema.returns.properties)) {
    if (!required.has(key) && value.prototype[key] === void 0)
      continue;
    result.prototype[key] = Visit8(property, references, value.prototype[key]);
  }
  return result;
}
function FromImport4(schema, references, value) {
  const definitions = globalThis.Object.values(schema.$defs);
  const target = schema.$defs[schema.$ref];
  return Visit8(target, [...references, ...definitions], value);
}
function IntersectAssign(correct, value) {
  if (IsObject2(correct) && !IsObject2(value) || !IsObject2(correct) && IsObject2(value))
    return correct;
  if (!IsObject2(correct) || !IsObject2(value))
    return value;
  return globalThis.Object.getOwnPropertyNames(correct).reduce((result, key) => {
    const property = key in value ? IntersectAssign(correct[key], value[key]) : correct[key];
    return { ...result, [key]: property };
  }, {});
}
function FromIntersect12(schema, references, value) {
  if (Check(schema, references, value))
    return value;
  const correct = Create2(schema, references);
  const assigned = IntersectAssign(correct, value);
  return Check(schema, references, assigned) ? assigned : correct;
}
function FromNever5(schema, references, value) {
  throw new ValueCastError(schema, "Never types cannot be cast");
}
function FromObject12(schema, references, value) {
  if (Check(schema, references, value))
    return value;
  if (value === null || typeof value !== "object")
    return Create2(schema, references);
  const required = new Set(schema.required || []);
  const result = {};
  for (const [key, property] of Object.entries(schema.properties)) {
    if (!required.has(key) && value[key] === void 0)
      continue;
    result[key] = Visit8(property, references, value[key]);
  }
  if (typeof schema.additionalProperties === "object") {
    const propertyNames = Object.getOwnPropertyNames(schema.properties);
    for (const propertyName of Object.getOwnPropertyNames(value)) {
      if (propertyNames.includes(propertyName))
        continue;
      result[propertyName] = Visit8(schema.additionalProperties, references, value[propertyName]);
    }
  }
  return result;
}
function FromRecord7(schema, references, value) {
  if (Check(schema, references, value))
    return Clone2(value);
  if (value === null || typeof value !== "object" || Array.isArray(value) || value instanceof Date)
    return Create2(schema, references);
  const subschemaPropertyName = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const subschema = schema.patternProperties[subschemaPropertyName];
  const result = {};
  for (const [propKey, propValue] of Object.entries(value)) {
    result[propKey] = Visit8(subschema, references, propValue);
  }
  return result;
}
function FromRef8(schema, references, value) {
  return Visit8(Deref(schema, references), references, value);
}
function FromThis4(schema, references, value) {
  return Visit8(Deref(schema, references), references, value);
}
function FromTuple9(schema, references, value) {
  if (Check(schema, references, value))
    return Clone2(value);
  if (!IsArray2(value))
    return Create2(schema, references);
  if (schema.items === void 0)
    return [];
  return schema.items.map((schema2, index) => Visit8(schema2, references, value[index]));
}
function FromUnion14(schema, references, value) {
  return Check(schema, references, value) ? Clone2(value) : CastUnion(schema, references, value);
}
function Visit8(schema, references, value) {
  const references_ = IsString2(schema.$id) ? Pushref(schema, references) : references;
  const schema_ = schema;
  switch (schema[Kind]) {
    // --------------------------------------------------------------
    // Structural
    // --------------------------------------------------------------
    case "Array":
      return FromArray11(schema_, references_, value);
    case "Constructor":
      return FromConstructor7(schema_, references_, value);
    case "Import":
      return FromImport4(schema_, references_, value);
    case "Intersect":
      return FromIntersect12(schema_, references_, value);
    case "Never":
      return FromNever5(schema_, references_, value);
    case "Object":
      return FromObject12(schema_, references_, value);
    case "Record":
      return FromRecord7(schema_, references_, value);
    case "Ref":
      return FromRef8(schema_, references_, value);
    case "This":
      return FromThis4(schema_, references_, value);
    case "Tuple":
      return FromTuple9(schema_, references_, value);
    case "Union":
      return FromUnion14(schema_, references_, value);
    // --------------------------------------------------------------
    // DefaultClone
    // --------------------------------------------------------------
    case "Date":
    case "Symbol":
    case "Uint8Array":
      return DefaultClone(schema, references, value);
    // --------------------------------------------------------------
    // Default
    // --------------------------------------------------------------
    default:
      return Default(schema_, references_, value);
  }
}
function Cast(...args) {
  return args.length === 3 ? Visit8(args[0], args[1], args[2]) : Visit8(args[0], [], args[1]);
}

// node_modules/@sinclair/typebox/build/esm/value/clean/clean.mjs
function IsCheckable(schema) {
  return IsKind(schema) && schema[Kind] !== "Unsafe";
}
function FromArray12(schema, references, value) {
  if (!IsArray2(value))
    return value;
  return value.map((value2) => Visit9(schema.items, references, value2));
}
function FromImport5(schema, references, value) {
  const definitions = globalThis.Object.values(schema.$defs);
  const target = schema.$defs[schema.$ref];
  return Visit9(target, [...references, ...definitions], value);
}
function FromIntersect13(schema, references, value) {
  const unevaluatedProperties = schema.unevaluatedProperties;
  const intersections = schema.allOf.map((schema2) => Visit9(schema2, references, Clone2(value)));
  const composite = intersections.reduce((acc, value2) => IsObject2(value2) ? { ...acc, ...value2 } : value2, {});
  if (!IsObject2(value) || !IsObject2(composite) || !IsKind(unevaluatedProperties))
    return composite;
  const knownkeys = KeyOfPropertyKeys(schema);
  for (const key of Object.getOwnPropertyNames(value)) {
    if (knownkeys.includes(key))
      continue;
    if (Check(unevaluatedProperties, references, value[key])) {
      composite[key] = Visit9(unevaluatedProperties, references, value[key]);
    }
  }
  return composite;
}
function FromObject13(schema, references, value) {
  if (!IsObject2(value) || IsArray2(value))
    return value;
  const additionalProperties = schema.additionalProperties;
  for (const key of Object.getOwnPropertyNames(value)) {
    if (HasPropertyKey2(schema.properties, key)) {
      value[key] = Visit9(schema.properties[key], references, value[key]);
      continue;
    }
    if (IsKind(additionalProperties) && Check(additionalProperties, references, value[key])) {
      value[key] = Visit9(additionalProperties, references, value[key]);
      continue;
    }
    delete value[key];
  }
  return value;
}
function FromRecord8(schema, references, value) {
  if (!IsObject2(value))
    return value;
  const additionalProperties = schema.additionalProperties;
  const propertyKeys = Object.getOwnPropertyNames(value);
  const [propertyKey, propertySchema] = Object.entries(schema.patternProperties)[0];
  const propertyKeyTest = new RegExp(propertyKey);
  for (const key of propertyKeys) {
    if (propertyKeyTest.test(key)) {
      value[key] = Visit9(propertySchema, references, value[key]);
      continue;
    }
    if (IsKind(additionalProperties) && Check(additionalProperties, references, value[key])) {
      value[key] = Visit9(additionalProperties, references, value[key]);
      continue;
    }
    delete value[key];
  }
  return value;
}
function FromRef9(schema, references, value) {
  return Visit9(Deref(schema, references), references, value);
}
function FromThis5(schema, references, value) {
  return Visit9(Deref(schema, references), references, value);
}
function FromTuple10(schema, references, value) {
  if (!IsArray2(value))
    return value;
  if (IsUndefined2(schema.items))
    return [];
  const length = Math.min(value.length, schema.items.length);
  for (let i17 = 0; i17 < length; i17++) {
    value[i17] = Visit9(schema.items[i17], references, value[i17]);
  }
  return value.length > length ? value.slice(0, length) : value;
}
function FromUnion15(schema, references, value) {
  for (const inner of schema.anyOf) {
    if (IsCheckable(inner) && Check(inner, references, value)) {
      return Visit9(inner, references, value);
    }
  }
  return value;
}
function Visit9(schema, references, value) {
  const references_ = IsString2(schema.$id) ? Pushref(schema, references) : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Array":
      return FromArray12(schema_, references_, value);
    case "Import":
      return FromImport5(schema_, references_, value);
    case "Intersect":
      return FromIntersect13(schema_, references_, value);
    case "Object":
      return FromObject13(schema_, references_, value);
    case "Record":
      return FromRecord8(schema_, references_, value);
    case "Ref":
      return FromRef9(schema_, references_, value);
    case "This":
      return FromThis5(schema_, references_, value);
    case "Tuple":
      return FromTuple10(schema_, references_, value);
    case "Union":
      return FromUnion15(schema_, references_, value);
    default:
      return value;
  }
}
function Clean(...args) {
  return args.length === 3 ? Visit9(args[0], args[1], args[2]) : Visit9(args[0], [], args[1]);
}

// node_modules/@sinclair/typebox/build/esm/value/convert/convert.mjs
function IsStringNumeric(value) {
  return IsString2(value) && !isNaN(value) && !isNaN(parseFloat(value));
}
function IsValueToString(value) {
  return IsBigInt2(value) || IsBoolean2(value) || IsNumber2(value);
}
function IsValueTrue(value) {
  return value === true || IsNumber2(value) && value === 1 || IsBigInt2(value) && value === BigInt("1") || IsString2(value) && (value.toLowerCase() === "true" || value === "1");
}
function IsValueFalse(value) {
  return value === false || IsNumber2(value) && (value === 0 || Object.is(value, -0)) || IsBigInt2(value) && value === BigInt("0") || IsString2(value) && (value.toLowerCase() === "false" || value === "0" || value === "-0");
}
function IsTimeStringWithTimeZone(value) {
  return IsString2(value) && /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i.test(value);
}
function IsTimeStringWithoutTimeZone(value) {
  return IsString2(value) && /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)?$/i.test(value);
}
function IsDateTimeStringWithTimeZone(value) {
  return IsString2(value) && /^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i.test(value);
}
function IsDateTimeStringWithoutTimeZone(value) {
  return IsString2(value) && /^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)?$/i.test(value);
}
function IsDateString(value) {
  return IsString2(value) && /^\d\d\d\d-[0-1]\d-[0-3]\d$/i.test(value);
}
function TryConvertLiteralString(value, target) {
  const conversion = TryConvertString(value);
  return conversion === target ? conversion : value;
}
function TryConvertLiteralNumber(value, target) {
  const conversion = TryConvertNumber(value);
  return conversion === target ? conversion : value;
}
function TryConvertLiteralBoolean(value, target) {
  const conversion = TryConvertBoolean(value);
  return conversion === target ? conversion : value;
}
function TryConvertLiteral(schema, value) {
  return IsString2(schema.const) ? TryConvertLiteralString(value, schema.const) : IsNumber2(schema.const) ? TryConvertLiteralNumber(value, schema.const) : IsBoolean2(schema.const) ? TryConvertLiteralBoolean(value, schema.const) : value;
}
function TryConvertBoolean(value) {
  return IsValueTrue(value) ? true : IsValueFalse(value) ? false : value;
}
function TryConvertBigInt(value) {
  const truncateInteger = (value2) => value2.split(".")[0];
  return IsStringNumeric(value) ? BigInt(truncateInteger(value)) : IsNumber2(value) ? BigInt(Math.trunc(value)) : IsValueFalse(value) ? BigInt(0) : IsValueTrue(value) ? BigInt(1) : value;
}
function TryConvertString(value) {
  return IsSymbol2(value) && value.description !== void 0 ? value.description.toString() : IsValueToString(value) ? value.toString() : value;
}
function TryConvertNumber(value) {
  return IsStringNumeric(value) ? parseFloat(value) : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;
}
function TryConvertInteger(value) {
  return IsStringNumeric(value) ? parseInt(value) : IsNumber2(value) ? Math.trunc(value) : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;
}
function TryConvertNull(value) {
  return IsString2(value) && value.toLowerCase() === "null" ? null : value;
}
function TryConvertUndefined(value) {
  return IsString2(value) && value === "undefined" ? void 0 : value;
}
function TryConvertDate(value) {
  return IsDate2(value) ? value : IsNumber2(value) ? new Date(value) : IsValueTrue(value) ? /* @__PURE__ */ new Date(1) : IsValueFalse(value) ? /* @__PURE__ */ new Date(0) : IsStringNumeric(value) ? new Date(parseInt(value)) : IsTimeStringWithoutTimeZone(value) ? /* @__PURE__ */ new Date(`1970-01-01T${value}.000Z`) : IsTimeStringWithTimeZone(value) ? /* @__PURE__ */ new Date(`1970-01-01T${value}`) : IsDateTimeStringWithoutTimeZone(value) ? /* @__PURE__ */ new Date(`${value}.000Z`) : IsDateTimeStringWithTimeZone(value) ? new Date(value) : IsDateString(value) ? /* @__PURE__ */ new Date(`${value}T00:00:00.000Z`) : value;
}
function Default2(value) {
  return value;
}
function FromArray13(schema, references, value) {
  const elements = IsArray2(value) ? value : [value];
  return elements.map((element) => Visit10(schema.items, references, element));
}
function FromBigInt5(schema, references, value) {
  return TryConvertBigInt(value);
}
function FromBoolean5(schema, references, value) {
  return TryConvertBoolean(value);
}
function FromDate6(schema, references, value) {
  return TryConvertDate(value);
}
function FromImport6(schema, references, value) {
  const definitions = globalThis.Object.values(schema.$defs);
  const target = schema.$defs[schema.$ref];
  return Visit10(target, [...references, ...definitions], value);
}
function FromInteger5(schema, references, value) {
  return TryConvertInteger(value);
}
function FromIntersect14(schema, references, value) {
  return schema.allOf.reduce((value2, schema2) => Visit10(schema2, references, value2), value);
}
function FromLiteral6(schema, references, value) {
  return TryConvertLiteral(schema, value);
}
function FromNull5(schema, references, value) {
  return TryConvertNull(value);
}
function FromNumber5(schema, references, value) {
  return TryConvertNumber(value);
}
function FromObject14(schema, references, value) {
  if (!IsObject2(value) || IsArray2(value))
    return value;
  for (const propertyKey of Object.getOwnPropertyNames(schema.properties)) {
    if (!HasPropertyKey2(value, propertyKey))
      continue;
    value[propertyKey] = Visit10(schema.properties[propertyKey], references, value[propertyKey]);
  }
  return value;
}
function FromRecord9(schema, references, value) {
  const isConvertable = IsObject2(value) && !IsArray2(value);
  if (!isConvertable)
    return value;
  const propertyKey = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const property = schema.patternProperties[propertyKey];
  for (const [propKey, propValue] of Object.entries(value)) {
    value[propKey] = Visit10(property, references, propValue);
  }
  return value;
}
function FromRef10(schema, references, value) {
  return Visit10(Deref(schema, references), references, value);
}
function FromString5(schema, references, value) {
  return TryConvertString(value);
}
function FromSymbol5(schema, references, value) {
  return IsString2(value) || IsNumber2(value) ? Symbol(value) : value;
}
function FromThis6(schema, references, value) {
  return Visit10(Deref(schema, references), references, value);
}
function FromTuple11(schema, references, value) {
  const isConvertable = IsArray2(value) && !IsUndefined2(schema.items);
  if (!isConvertable)
    return value;
  return value.map((value2, index) => {
    return index < schema.items.length ? Visit10(schema.items[index], references, value2) : value2;
  });
}
function FromUndefined5(schema, references, value) {
  return TryConvertUndefined(value);
}
function FromUnion16(schema, references, value) {
  for (const subschema of schema.anyOf) {
    if (Check(subschema, references, value)) {
      return value;
    }
  }
  for (const subschema of schema.anyOf) {
    const converted = Visit10(subschema, references, Clone2(value));
    if (!Check(subschema, references, converted))
      continue;
    return converted;
  }
  return value;
}
function Visit10(schema, references, value) {
  const references_ = Pushref(schema, references);
  const schema_ = schema;
  switch (schema[Kind]) {
    case "Array":
      return FromArray13(schema_, references_, value);
    case "BigInt":
      return FromBigInt5(schema_, references_, value);
    case "Boolean":
      return FromBoolean5(schema_, references_, value);
    case "Date":
      return FromDate6(schema_, references_, value);
    case "Import":
      return FromImport6(schema_, references_, value);
    case "Integer":
      return FromInteger5(schema_, references_, value);
    case "Intersect":
      return FromIntersect14(schema_, references_, value);
    case "Literal":
      return FromLiteral6(schema_, references_, value);
    case "Null":
      return FromNull5(schema_, references_, value);
    case "Number":
      return FromNumber5(schema_, references_, value);
    case "Object":
      return FromObject14(schema_, references_, value);
    case "Record":
      return FromRecord9(schema_, references_, value);
    case "Ref":
      return FromRef10(schema_, references_, value);
    case "String":
      return FromString5(schema_, references_, value);
    case "Symbol":
      return FromSymbol5(schema_, references_, value);
    case "This":
      return FromThis6(schema_, references_, value);
    case "Tuple":
      return FromTuple11(schema_, references_, value);
    case "Undefined":
      return FromUndefined5(schema_, references_, value);
    case "Union":
      return FromUnion16(schema_, references_, value);
    default:
      return Default2(value);
  }
}
function Convert(...args) {
  return args.length === 3 ? Visit10(args[0], args[1], args[2]) : Visit10(args[0], [], args[1]);
}

// node_modules/@sinclair/typebox/build/esm/value/transform/decode.mjs
var TransformDecodeCheckError = class extends TypeBoxError {
  constructor(schema, value, error) {
    super(`Unable to decode value as it does not match the expected schema`);
    this.schema = schema;
    this.value = value;
    this.error = error;
  }
};
var TransformDecodeError = class extends TypeBoxError {
  constructor(schema, path, value, error) {
    super(error instanceof Error ? error.message : "Unknown error");
    this.schema = schema;
    this.path = path;
    this.value = value;
    this.error = error;
  }
};
function Default3(schema, path, value) {
  try {
    return IsTransform(schema) ? schema[TransformKind].Decode(value) : value;
  } catch (error) {
    throw new TransformDecodeError(schema, path, value, error);
  }
}
function FromArray14(schema, references, path, value) {
  return IsArray2(value) ? Default3(schema, path, value.map((value2, index) => Visit11(schema.items, references, `${path}/${index}`, value2))) : Default3(schema, path, value);
}
function FromIntersect15(schema, references, path, value) {
  if (!IsObject2(value) || IsValueType(value))
    return Default3(schema, path, value);
  const knownEntries = KeyOfPropertyEntries(schema);
  const knownKeys = knownEntries.map((entry) => entry[0]);
  const knownProperties = { ...value };
  for (const [knownKey, knownSchema] of knownEntries)
    if (knownKey in knownProperties) {
      knownProperties[knownKey] = Visit11(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);
    }
  if (!IsTransform(schema.unevaluatedProperties)) {
    return Default3(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const unevaluatedProperties = schema.unevaluatedProperties;
  const unknownProperties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      unknownProperties[key] = Default3(unevaluatedProperties, `${path}/${key}`, unknownProperties[key]);
    }
  return Default3(schema, path, unknownProperties);
}
function FromImport7(schema, references, path, value) {
  const additional = globalThis.Object.values(schema.$defs);
  const target = schema.$defs[schema.$ref];
  const result = Visit11(target, [...references, ...additional], path, value);
  return Default3(schema, path, result);
}
function FromNot5(schema, references, path, value) {
  return Default3(schema, path, Visit11(schema.not, references, path, value));
}
function FromObject15(schema, references, path, value) {
  if (!IsObject2(value))
    return Default3(schema, path, value);
  const knownKeys = KeyOfPropertyKeys(schema);
  const knownProperties = { ...value };
  for (const key of knownKeys) {
    if (!HasPropertyKey2(knownProperties, key))
      continue;
    if (IsUndefined2(knownProperties[key]) && (!IsUndefined3(schema.properties[key]) || TypeSystemPolicy.IsExactOptionalProperty(knownProperties, key)))
      continue;
    knownProperties[key] = Visit11(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);
  }
  if (!IsSchema(schema.additionalProperties)) {
    return Default3(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const unknownProperties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      unknownProperties[key] = Default3(additionalProperties, `${path}/${key}`, unknownProperties[key]);
    }
  return Default3(schema, path, unknownProperties);
}
function FromRecord10(schema, references, path, value) {
  if (!IsObject2(value))
    return Default3(schema, path, value);
  const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const knownKeys = new RegExp(pattern);
  const knownProperties = { ...value };
  for (const key of Object.getOwnPropertyNames(value))
    if (knownKeys.test(key)) {
      knownProperties[key] = Visit11(schema.patternProperties[pattern], references, `${path}/${key}`, knownProperties[key]);
    }
  if (!IsSchema(schema.additionalProperties)) {
    return Default3(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const unknownProperties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.test(key)) {
      unknownProperties[key] = Default3(additionalProperties, `${path}/${key}`, unknownProperties[key]);
    }
  return Default3(schema, path, unknownProperties);
}
function FromRef11(schema, references, path, value) {
  const target = Deref(schema, references);
  return Default3(schema, path, Visit11(target, references, path, value));
}
function FromThis7(schema, references, path, value) {
  const target = Deref(schema, references);
  return Default3(schema, path, Visit11(target, references, path, value));
}
function FromTuple12(schema, references, path, value) {
  return IsArray2(value) && IsArray2(schema.items) ? Default3(schema, path, schema.items.map((schema2, index) => Visit11(schema2, references, `${path}/${index}`, value[index]))) : Default3(schema, path, value);
}
function FromUnion17(schema, references, path, value) {
  for (const subschema of schema.anyOf) {
    if (!Check(subschema, references, value))
      continue;
    const decoded = Visit11(subschema, references, path, value);
    return Default3(schema, path, decoded);
  }
  return Default3(schema, path, value);
}
function Visit11(schema, references, path, value) {
  const references_ = Pushref(schema, references);
  const schema_ = schema;
  switch (schema[Kind]) {
    case "Array":
      return FromArray14(schema_, references_, path, value);
    case "Import":
      return FromImport7(schema_, references_, path, value);
    case "Intersect":
      return FromIntersect15(schema_, references_, path, value);
    case "Not":
      return FromNot5(schema_, references_, path, value);
    case "Object":
      return FromObject15(schema_, references_, path, value);
    case "Record":
      return FromRecord10(schema_, references_, path, value);
    case "Ref":
      return FromRef11(schema_, references_, path, value);
    case "Symbol":
      return Default3(schema_, path, value);
    case "This":
      return FromThis7(schema_, references_, path, value);
    case "Tuple":
      return FromTuple12(schema_, references_, path, value);
    case "Union":
      return FromUnion17(schema_, references_, path, value);
    default:
      return Default3(schema_, path, value);
  }
}
function TransformDecode(schema, references, value) {
  return Visit11(schema, references, "", value);
}

// node_modules/@sinclair/typebox/build/esm/value/transform/encode.mjs
var TransformEncodeCheckError = class extends TypeBoxError {
  constructor(schema, value, error) {
    super(`The encoded value does not match the expected schema`);
    this.schema = schema;
    this.value = value;
    this.error = error;
  }
};
var TransformEncodeError = class extends TypeBoxError {
  constructor(schema, path, value, error) {
    super(`${error instanceof Error ? error.message : "Unknown error"}`);
    this.schema = schema;
    this.path = path;
    this.value = value;
    this.error = error;
  }
};
function Default4(schema, path, value) {
  try {
    return IsTransform(schema) ? schema[TransformKind].Encode(value) : value;
  } catch (error) {
    throw new TransformEncodeError(schema, path, value, error);
  }
}
function FromArray15(schema, references, path, value) {
  const defaulted = Default4(schema, path, value);
  return IsArray2(defaulted) ? defaulted.map((value2, index) => Visit12(schema.items, references, `${path}/${index}`, value2)) : defaulted;
}
function FromImport8(schema, references, path, value) {
  const additional = globalThis.Object.values(schema.$defs);
  const target = schema.$defs[schema.$ref];
  const result = Default4(schema, path, value);
  return Visit12(target, [...references, ...additional], path, result);
}
function FromIntersect16(schema, references, path, value) {
  const defaulted = Default4(schema, path, value);
  if (!IsObject2(value) || IsValueType(value))
    return defaulted;
  const knownEntries = KeyOfPropertyEntries(schema);
  const knownKeys = knownEntries.map((entry) => entry[0]);
  const knownProperties = { ...defaulted };
  for (const [knownKey, knownSchema] of knownEntries)
    if (knownKey in knownProperties) {
      knownProperties[knownKey] = Visit12(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);
    }
  if (!IsTransform(schema.unevaluatedProperties)) {
    return knownProperties;
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const unevaluatedProperties = schema.unevaluatedProperties;
  const properties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      properties[key] = Default4(unevaluatedProperties, `${path}/${key}`, properties[key]);
    }
  return properties;
}
function FromNot6(schema, references, path, value) {
  return Default4(schema.not, path, Default4(schema, path, value));
}
function FromObject16(schema, references, path, value) {
  const defaulted = Default4(schema, path, value);
  if (!IsObject2(defaulted))
    return defaulted;
  const knownKeys = KeyOfPropertyKeys(schema);
  const knownProperties = { ...defaulted };
  for (const key of knownKeys) {
    if (!HasPropertyKey2(knownProperties, key))
      continue;
    if (IsUndefined2(knownProperties[key]) && (!IsUndefined3(schema.properties[key]) || TypeSystemPolicy.IsExactOptionalProperty(knownProperties, key)))
      continue;
    knownProperties[key] = Visit12(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);
  }
  if (!IsSchema(schema.additionalProperties)) {
    return knownProperties;
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const properties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      properties[key] = Default4(additionalProperties, `${path}/${key}`, properties[key]);
    }
  return properties;
}
function FromRecord11(schema, references, path, value) {
  const defaulted = Default4(schema, path, value);
  if (!IsObject2(value))
    return defaulted;
  const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const knownKeys = new RegExp(pattern);
  const knownProperties = { ...defaulted };
  for (const key of Object.getOwnPropertyNames(value))
    if (knownKeys.test(key)) {
      knownProperties[key] = Visit12(schema.patternProperties[pattern], references, `${path}/${key}`, knownProperties[key]);
    }
  if (!IsSchema(schema.additionalProperties)) {
    return knownProperties;
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const properties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.test(key)) {
      properties[key] = Default4(additionalProperties, `${path}/${key}`, properties[key]);
    }
  return properties;
}
function FromRef12(schema, references, path, value) {
  const target = Deref(schema, references);
  const resolved = Visit12(target, references, path, value);
  return Default4(schema, path, resolved);
}
function FromThis8(schema, references, path, value) {
  const target = Deref(schema, references);
  const resolved = Visit12(target, references, path, value);
  return Default4(schema, path, resolved);
}
function FromTuple13(schema, references, path, value) {
  const value1 = Default4(schema, path, value);
  return IsArray2(schema.items) ? schema.items.map((schema2, index) => Visit12(schema2, references, `${path}/${index}`, value1[index])) : [];
}
function FromUnion18(schema, references, path, value) {
  for (const subschema of schema.anyOf) {
    if (!Check(subschema, references, value))
      continue;
    const value1 = Visit12(subschema, references, path, value);
    return Default4(schema, path, value1);
  }
  for (const subschema of schema.anyOf) {
    const value1 = Visit12(subschema, references, path, value);
    if (!Check(schema, references, value1))
      continue;
    return Default4(schema, path, value1);
  }
  return Default4(schema, path, value);
}
function Visit12(schema, references, path, value) {
  const references_ = Pushref(schema, references);
  const schema_ = schema;
  switch (schema[Kind]) {
    case "Array":
      return FromArray15(schema_, references_, path, value);
    case "Import":
      return FromImport8(schema_, references_, path, value);
    case "Intersect":
      return FromIntersect16(schema_, references_, path, value);
    case "Not":
      return FromNot6(schema_, references_, path, value);
    case "Object":
      return FromObject16(schema_, references_, path, value);
    case "Record":
      return FromRecord11(schema_, references_, path, value);
    case "Ref":
      return FromRef12(schema_, references_, path, value);
    case "This":
      return FromThis8(schema_, references_, path, value);
    case "Tuple":
      return FromTuple13(schema_, references_, path, value);
    case "Union":
      return FromUnion18(schema_, references_, path, value);
    default:
      return Default4(schema_, path, value);
  }
}
function TransformEncode(schema, references, value) {
  return Visit12(schema, references, "", value);
}

// node_modules/@sinclair/typebox/build/esm/value/transform/has.mjs
function FromArray16(schema, references) {
  return IsTransform(schema) || Visit13(schema.items, references);
}
function FromAsyncIterator7(schema, references) {
  return IsTransform(schema) || Visit13(schema.items, references);
}
function FromConstructor8(schema, references) {
  return IsTransform(schema) || Visit13(schema.returns, references) || schema.parameters.some((schema2) => Visit13(schema2, references));
}
function FromFunction7(schema, references) {
  return IsTransform(schema) || Visit13(schema.returns, references) || schema.parameters.some((schema2) => Visit13(schema2, references));
}
function FromIntersect17(schema, references) {
  return IsTransform(schema) || IsTransform(schema.unevaluatedProperties) || schema.allOf.some((schema2) => Visit13(schema2, references));
}
function FromImport9(schema, references) {
  const additional = globalThis.Object.getOwnPropertyNames(schema.$defs).reduce((result, key) => [...result, schema.$defs[key]], []);
  const target = schema.$defs[schema.$ref];
  return IsTransform(schema) || Visit13(target, [...additional, ...references]);
}
function FromIterator7(schema, references) {
  return IsTransform(schema) || Visit13(schema.items, references);
}
function FromNot7(schema, references) {
  return IsTransform(schema) || Visit13(schema.not, references);
}
function FromObject17(schema, references) {
  return IsTransform(schema) || Object.values(schema.properties).some((schema2) => Visit13(schema2, references)) || IsSchema(schema.additionalProperties) && Visit13(schema.additionalProperties, references);
}
function FromPromise7(schema, references) {
  return IsTransform(schema) || Visit13(schema.item, references);
}
function FromRecord12(schema, references) {
  const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const property = schema.patternProperties[pattern];
  return IsTransform(schema) || Visit13(property, references) || IsSchema(schema.additionalProperties) && IsTransform(schema.additionalProperties);
}
function FromRef13(schema, references) {
  if (IsTransform(schema))
    return true;
  return Visit13(Deref(schema, references), references);
}
function FromThis9(schema, references) {
  if (IsTransform(schema))
    return true;
  return Visit13(Deref(schema, references), references);
}
function FromTuple14(schema, references) {
  return IsTransform(schema) || !IsUndefined2(schema.items) && schema.items.some((schema2) => Visit13(schema2, references));
}
function FromUnion19(schema, references) {
  return IsTransform(schema) || schema.anyOf.some((schema2) => Visit13(schema2, references));
}
function Visit13(schema, references) {
  const references_ = Pushref(schema, references);
  const schema_ = schema;
  if (schema.$id && visited.has(schema.$id))
    return false;
  if (schema.$id)
    visited.add(schema.$id);
  switch (schema[Kind]) {
    case "Array":
      return FromArray16(schema_, references_);
    case "AsyncIterator":
      return FromAsyncIterator7(schema_, references_);
    case "Constructor":
      return FromConstructor8(schema_, references_);
    case "Function":
      return FromFunction7(schema_, references_);
    case "Import":
      return FromImport9(schema_, references_);
    case "Intersect":
      return FromIntersect17(schema_, references_);
    case "Iterator":
      return FromIterator7(schema_, references_);
    case "Not":
      return FromNot7(schema_, references_);
    case "Object":
      return FromObject17(schema_, references_);
    case "Promise":
      return FromPromise7(schema_, references_);
    case "Record":
      return FromRecord12(schema_, references_);
    case "Ref":
      return FromRef13(schema_, references_);
    case "This":
      return FromThis9(schema_, references_);
    case "Tuple":
      return FromTuple14(schema_, references_);
    case "Union":
      return FromUnion19(schema_, references_);
    default:
      return IsTransform(schema);
  }
}
var visited = /* @__PURE__ */ new Set();
function HasTransform(schema, references) {
  visited.clear();
  return Visit13(schema, references);
}

// node_modules/@sinclair/typebox/build/esm/value/decode/decode.mjs
function Decode(...args) {
  const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];
  if (!Check(schema, references, value))
    throw new TransformDecodeCheckError(schema, value, Errors(schema, references, value).First());
  return HasTransform(schema, references) ? TransformDecode(schema, references, value) : value;
}

// node_modules/@sinclair/typebox/build/esm/value/default/default.mjs
function ValueOrDefault(schema, value) {
  const defaultValue = HasPropertyKey2(schema, "default") ? schema.default : void 0;
  const clone = IsFunction2(defaultValue) ? defaultValue() : Clone2(defaultValue);
  return IsUndefined2(value) ? clone : IsObject2(value) && IsObject2(clone) ? Object.assign(clone, value) : value;
}
function HasDefaultProperty(schema) {
  return IsKind(schema) && "default" in schema;
}
function FromArray17(schema, references, value) {
  if (IsArray2(value)) {
    for (let i17 = 0; i17 < value.length; i17++) {
      value[i17] = Visit14(schema.items, references, value[i17]);
    }
    return value;
  }
  const defaulted = ValueOrDefault(schema, value);
  if (!IsArray2(defaulted))
    return defaulted;
  for (let i17 = 0; i17 < defaulted.length; i17++) {
    defaulted[i17] = Visit14(schema.items, references, defaulted[i17]);
  }
  return defaulted;
}
function FromDate7(schema, references, value) {
  return IsDate2(value) ? value : ValueOrDefault(schema, value);
}
function FromImport10(schema, references, value) {
  const definitions = globalThis.Object.values(schema.$defs);
  const target = schema.$defs[schema.$ref];
  return Visit14(target, [...references, ...definitions], value);
}
function FromIntersect18(schema, references, value) {
  const defaulted = ValueOrDefault(schema, value);
  return schema.allOf.reduce((acc, schema2) => {
    const next = Visit14(schema2, references, defaulted);
    return IsObject2(next) ? { ...acc, ...next } : next;
  }, {});
}
function FromObject18(schema, references, value) {
  const defaulted = ValueOrDefault(schema, value);
  if (!IsObject2(defaulted))
    return defaulted;
  const knownPropertyKeys = Object.getOwnPropertyNames(schema.properties);
  for (const key of knownPropertyKeys) {
    const propertyValue = Visit14(schema.properties[key], references, defaulted[key]);
    if (IsUndefined2(propertyValue))
      continue;
    defaulted[key] = Visit14(schema.properties[key], references, defaulted[key]);
  }
  if (!HasDefaultProperty(schema.additionalProperties))
    return defaulted;
  for (const key of Object.getOwnPropertyNames(defaulted)) {
    if (knownPropertyKeys.includes(key))
      continue;
    defaulted[key] = Visit14(schema.additionalProperties, references, defaulted[key]);
  }
  return defaulted;
}
function FromRecord13(schema, references, value) {
  const defaulted = ValueOrDefault(schema, value);
  if (!IsObject2(defaulted))
    return defaulted;
  const additionalPropertiesSchema = schema.additionalProperties;
  const [propertyKeyPattern, propertySchema] = Object.entries(schema.patternProperties)[0];
  const knownPropertyKey = new RegExp(propertyKeyPattern);
  for (const key of Object.getOwnPropertyNames(defaulted)) {
    if (!(knownPropertyKey.test(key) && HasDefaultProperty(propertySchema)))
      continue;
    defaulted[key] = Visit14(propertySchema, references, defaulted[key]);
  }
  if (!HasDefaultProperty(additionalPropertiesSchema))
    return defaulted;
  for (const key of Object.getOwnPropertyNames(defaulted)) {
    if (knownPropertyKey.test(key))
      continue;
    defaulted[key] = Visit14(additionalPropertiesSchema, references, defaulted[key]);
  }
  return defaulted;
}
function FromRef14(schema, references, value) {
  return Visit14(Deref(schema, references), references, ValueOrDefault(schema, value));
}
function FromThis10(schema, references, value) {
  return Visit14(Deref(schema, references), references, value);
}
function FromTuple15(schema, references, value) {
  const defaulted = ValueOrDefault(schema, value);
  if (!IsArray2(defaulted) || IsUndefined2(schema.items))
    return defaulted;
  const [items, max] = [schema.items, Math.max(schema.items.length, defaulted.length)];
  for (let i17 = 0; i17 < max; i17++) {
    if (i17 < items.length)
      defaulted[i17] = Visit14(items[i17], references, defaulted[i17]);
  }
  return defaulted;
}
function FromUnion20(schema, references, value) {
  const defaulted = ValueOrDefault(schema, value);
  for (const inner of schema.anyOf) {
    const result = Visit14(inner, references, Clone2(defaulted));
    if (Check(inner, references, result)) {
      return result;
    }
  }
  return defaulted;
}
function Visit14(schema, references, value) {
  const references_ = Pushref(schema, references);
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Array":
      return FromArray17(schema_, references_, value);
    case "Date":
      return FromDate7(schema_, references_, value);
    case "Import":
      return FromImport10(schema_, references_, value);
    case "Intersect":
      return FromIntersect18(schema_, references_, value);
    case "Object":
      return FromObject18(schema_, references_, value);
    case "Record":
      return FromRecord13(schema_, references_, value);
    case "Ref":
      return FromRef14(schema_, references_, value);
    case "This":
      return FromThis10(schema_, references_, value);
    case "Tuple":
      return FromTuple15(schema_, references_, value);
    case "Union":
      return FromUnion20(schema_, references_, value);
    default:
      return ValueOrDefault(schema_, value);
  }
}
function Default5(...args) {
  return args.length === 3 ? Visit14(args[0], args[1], args[2]) : Visit14(args[0], [], args[1]);
}

// node_modules/@sinclair/typebox/build/esm/value/pointer/pointer.mjs
var pointer_exports = {};
__export(pointer_exports, {
  Delete: () => Delete3,
  Format: () => Format,
  Get: () => Get3,
  Has: () => Has3,
  Set: () => Set4,
  ValuePointerRootDeleteError: () => ValuePointerRootDeleteError,
  ValuePointerRootSetError: () => ValuePointerRootSetError
});
var ValuePointerRootSetError = class extends TypeBoxError {
  constructor(value, path, update) {
    super("Cannot set root value");
    this.value = value;
    this.path = path;
    this.update = update;
  }
};
var ValuePointerRootDeleteError = class extends TypeBoxError {
  constructor(value, path) {
    super("Cannot delete root value");
    this.value = value;
    this.path = path;
  }
};
function Escape2(component) {
  return component.indexOf("~") === -1 ? component : component.replace(/~1/g, "/").replace(/~0/g, "~");
}
function* Format(pointer) {
  if (pointer === "")
    return;
  let [start, end] = [0, 0];
  for (let i17 = 0; i17 < pointer.length; i17++) {
    const char = pointer.charAt(i17);
    if (char === "/") {
      if (i17 === 0) {
        start = i17 + 1;
      } else {
        end = i17;
        yield Escape2(pointer.slice(start, end));
        start = i17 + 1;
      }
    } else {
      end = i17;
    }
  }
  yield Escape2(pointer.slice(start));
}
function Set4(value, pointer, update) {
  if (pointer === "")
    throw new ValuePointerRootSetError(value, pointer, update);
  let [owner, next, key] = [null, value, ""];
  for (const component of Format(pointer)) {
    if (next[component] === void 0)
      next[component] = {};
    owner = next;
    next = next[component];
    key = component;
  }
  owner[key] = update;
}
function Delete3(value, pointer) {
  if (pointer === "")
    throw new ValuePointerRootDeleteError(value, pointer);
  let [owner, next, key] = [null, value, ""];
  for (const component of Format(pointer)) {
    if (next[component] === void 0 || next[component] === null)
      return;
    owner = next;
    next = next[component];
    key = component;
  }
  if (Array.isArray(owner)) {
    const index = parseInt(key);
    owner.splice(index, 1);
  } else {
    delete owner[key];
  }
}
function Has3(value, pointer) {
  if (pointer === "")
    return true;
  let [owner, next, key] = [null, value, ""];
  for (const component of Format(pointer)) {
    if (next[component] === void 0)
      return false;
    owner = next;
    next = next[component];
    key = component;
  }
  return Object.getOwnPropertyNames(owner).includes(key);
}
function Get3(value, pointer) {
  if (pointer === "")
    return value;
  let current = value;
  for (const component of Format(pointer)) {
    if (current[component] === void 0)
      return void 0;
    current = current[component];
  }
  return current;
}

// node_modules/@sinclair/typebox/build/esm/value/equal/equal.mjs
function ObjectType3(left, right) {
  if (!IsObject2(right))
    return false;
  const leftKeys = [...Object.keys(left), ...Object.getOwnPropertySymbols(left)];
  const rightKeys = [...Object.keys(right), ...Object.getOwnPropertySymbols(right)];
  if (leftKeys.length !== rightKeys.length)
    return false;
  return leftKeys.every((key) => Equal(left[key], right[key]));
}
function DateType3(left, right) {
  return IsDate2(right) && left.getTime() === right.getTime();
}
function ArrayType3(left, right) {
  if (!IsArray2(right) || left.length !== right.length)
    return false;
  return left.every((value, index) => Equal(value, right[index]));
}
function TypedArrayType(left, right) {
  if (!IsTypedArray(right) || left.length !== right.length || Object.getPrototypeOf(left).constructor.name !== Object.getPrototypeOf(right).constructor.name)
    return false;
  return left.every((value, index) => Equal(value, right[index]));
}
function ValueType(left, right) {
  return left === right;
}
function Equal(left, right) {
  if (IsDate2(left))
    return DateType3(left, right);
  if (IsTypedArray(left))
    return TypedArrayType(left, right);
  if (IsArray2(left))
    return ArrayType3(left, right);
  if (IsObject2(left))
    return ObjectType3(left, right);
  if (IsValueType(left))
    return ValueType(left, right);
  throw new Error("ValueEquals: Unable to compare value");
}

// node_modules/@sinclair/typebox/build/esm/value/delta/delta.mjs
var Insert = Object2({
  type: Literal("insert"),
  path: String2(),
  value: Unknown()
});
var Update = Object2({
  type: Literal("update"),
  path: String2(),
  value: Unknown()
});
var Delete4 = Object2({
  type: Literal("delete"),
  path: String2()
});
var Edit = Union([Insert, Update, Delete4]);
var ValueDiffError = class extends TypeBoxError {
  constructor(value, message) {
    super(message);
    this.value = value;
  }
};
function CreateUpdate(path, value) {
  return { type: "update", path, value };
}
function CreateInsert(path, value) {
  return { type: "insert", path, value };
}
function CreateDelete(path) {
  return { type: "delete", path };
}
function AssertDiffable(value) {
  if (globalThis.Object.getOwnPropertySymbols(value).length > 0)
    throw new ValueDiffError(value, "Cannot diff objects with symbols");
}
function* ObjectType4(path, current, next) {
  AssertDiffable(current);
  AssertDiffable(next);
  if (!IsStandardObject(next))
    return yield CreateUpdate(path, next);
  const currentKeys = globalThis.Object.getOwnPropertyNames(current);
  const nextKeys = globalThis.Object.getOwnPropertyNames(next);
  for (const key of nextKeys) {
    if (HasPropertyKey2(current, key))
      continue;
    yield CreateInsert(`${path}/${key}`, next[key]);
  }
  for (const key of currentKeys) {
    if (!HasPropertyKey2(next, key))
      continue;
    if (Equal(current, next))
      continue;
    yield* Visit15(`${path}/${key}`, current[key], next[key]);
  }
  for (const key of currentKeys) {
    if (HasPropertyKey2(next, key))
      continue;
    yield CreateDelete(`${path}/${key}`);
  }
}
function* ArrayType4(path, current, next) {
  if (!IsArray2(next))
    return yield CreateUpdate(path, next);
  for (let i17 = 0; i17 < Math.min(current.length, next.length); i17++) {
    yield* Visit15(`${path}/${i17}`, current[i17], next[i17]);
  }
  for (let i17 = 0; i17 < next.length; i17++) {
    if (i17 < current.length)
      continue;
    yield CreateInsert(`${path}/${i17}`, next[i17]);
  }
  for (let i17 = current.length - 1; i17 >= 0; i17--) {
    if (i17 < next.length)
      continue;
    yield CreateDelete(`${path}/${i17}`);
  }
}
function* TypedArrayType2(path, current, next) {
  if (!IsTypedArray(next) || current.length !== next.length || globalThis.Object.getPrototypeOf(current).constructor.name !== globalThis.Object.getPrototypeOf(next).constructor.name)
    return yield CreateUpdate(path, next);
  for (let i17 = 0; i17 < Math.min(current.length, next.length); i17++) {
    yield* Visit15(`${path}/${i17}`, current[i17], next[i17]);
  }
}
function* ValueType2(path, current, next) {
  if (current === next)
    return;
  yield CreateUpdate(path, next);
}
function* Visit15(path, current, next) {
  if (IsStandardObject(current))
    return yield* ObjectType4(path, current, next);
  if (IsArray2(current))
    return yield* ArrayType4(path, current, next);
  if (IsTypedArray(current))
    return yield* TypedArrayType2(path, current, next);
  if (IsValueType(current))
    return yield* ValueType2(path, current, next);
  throw new ValueDiffError(current, "Unable to diff value");
}
function Diff(current, next) {
  return [...Visit15("", current, next)];
}
function IsRootUpdate(edits) {
  return edits.length > 0 && edits[0].path === "" && edits[0].type === "update";
}
function IsIdentity(edits) {
  return edits.length === 0;
}
function Patch(current, edits) {
  if (IsRootUpdate(edits)) {
    return Clone2(edits[0].value);
  }
  if (IsIdentity(edits)) {
    return Clone2(current);
  }
  const clone = Clone2(current);
  for (const edit of edits) {
    switch (edit.type) {
      case "insert": {
        pointer_exports.Set(clone, edit.path, edit.value);
        break;
      }
      case "update": {
        pointer_exports.Set(clone, edit.path, edit.value);
        break;
      }
      case "delete": {
        pointer_exports.Delete(clone, edit.path);
        break;
      }
    }
  }
  return clone;
}

// node_modules/@sinclair/typebox/build/esm/value/encode/encode.mjs
function Encode(...args) {
  const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];
  const encoded = HasTransform(schema, references) ? TransformEncode(schema, references, value) : value;
  if (!Check(schema, references, encoded))
    throw new TransformEncodeCheckError(schema, encoded, Errors(schema, references, encoded).First());
  return encoded;
}

// node_modules/@sinclair/typebox/build/esm/value/mutate/mutate.mjs
function IsStandardObject2(value) {
  return IsObject2(value) && !IsArray2(value);
}
var ValueMutateError = class extends TypeBoxError {
  constructor(message) {
    super(message);
  }
};
function ObjectType5(root, path, current, next) {
  if (!IsStandardObject2(current)) {
    pointer_exports.Set(root, path, Clone2(next));
  } else {
    const currentKeys = Object.getOwnPropertyNames(current);
    const nextKeys = Object.getOwnPropertyNames(next);
    for (const currentKey of currentKeys) {
      if (!nextKeys.includes(currentKey)) {
        delete current[currentKey];
      }
    }
    for (const nextKey of nextKeys) {
      if (!currentKeys.includes(nextKey)) {
        current[nextKey] = null;
      }
    }
    for (const nextKey of nextKeys) {
      Visit16(root, `${path}/${nextKey}`, current[nextKey], next[nextKey]);
    }
  }
}
function ArrayType5(root, path, current, next) {
  if (!IsArray2(current)) {
    pointer_exports.Set(root, path, Clone2(next));
  } else {
    for (let index = 0; index < next.length; index++) {
      Visit16(root, `${path}/${index}`, current[index], next[index]);
    }
    current.splice(next.length);
  }
}
function TypedArrayType3(root, path, current, next) {
  if (IsTypedArray(current) && current.length === next.length) {
    for (let i17 = 0; i17 < current.length; i17++) {
      current[i17] = next[i17];
    }
  } else {
    pointer_exports.Set(root, path, Clone2(next));
  }
}
function ValueType3(root, path, current, next) {
  if (current === next)
    return;
  pointer_exports.Set(root, path, next);
}
function Visit16(root, path, current, next) {
  if (IsArray2(next))
    return ArrayType5(root, path, current, next);
  if (IsTypedArray(next))
    return TypedArrayType3(root, path, current, next);
  if (IsStandardObject2(next))
    return ObjectType5(root, path, current, next);
  if (IsValueType(next))
    return ValueType3(root, path, current, next);
}
function IsNonMutableValue(value) {
  return IsTypedArray(value) || IsValueType(value);
}
function IsMismatchedValue(current, next) {
  return IsStandardObject2(current) && IsArray2(next) || IsArray2(current) && IsStandardObject2(next);
}
function Mutate(current, next) {
  if (IsNonMutableValue(current) || IsNonMutableValue(next))
    throw new ValueMutateError("Only object and array types can be mutated at the root level");
  if (IsMismatchedValue(current, next))
    throw new ValueMutateError("Cannot assign due type mismatch of assignable values");
  Visit16(current, "", current, next);
}

// node_modules/@sinclair/typebox/build/esm/value/parse/parse.mjs
var ParseError = class extends TypeBoxError {
  constructor(message) {
    super(message);
  }
};
var ParseRegistry;
(function(ParseRegistry2) {
  const registry = /* @__PURE__ */ new Map([
    ["Assert", (type, references, value) => {
      Assert(type, references, value);
      return value;
    }],
    ["Cast", (type, references, value) => Cast(type, references, value)],
    ["Clean", (type, references, value) => Clean(type, references, value)],
    ["Clone", (_type, _references, value) => Clone2(value)],
    ["Convert", (type, references, value) => Convert(type, references, value)],
    ["Decode", (type, references, value) => HasTransform(type, references) ? TransformDecode(type, references, value) : value],
    ["Default", (type, references, value) => Default5(type, references, value)],
    ["Encode", (type, references, value) => HasTransform(type, references) ? TransformEncode(type, references, value) : value]
  ]);
  function Delete5(key) {
    registry.delete(key);
  }
  ParseRegistry2.Delete = Delete5;
  function Set5(key, callback) {
    registry.set(key, callback);
  }
  ParseRegistry2.Set = Set5;
  function Get4(key) {
    return registry.get(key);
  }
  ParseRegistry2.Get = Get4;
})(ParseRegistry || (ParseRegistry = {}));
var ParseDefault = [
  "Clone",
  "Clean",
  "Default",
  "Convert",
  "Assert",
  "Decode"
];
function ParseValue(operations, type, references, value) {
  return operations.reduce((value2, operationKey) => {
    const operation = ParseRegistry.Get(operationKey);
    if (IsUndefined2(operation))
      throw new ParseError(`Unable to find Parse operation '${operationKey}'`);
    return operation(type, references, value2);
  }, value);
}
function Parse(...args) {
  const [operations, schema, references, value] = args.length === 4 ? [args[0], args[1], args[2], args[3]] : args.length === 3 ? IsArray2(args[0]) ? [args[0], args[1], [], args[2]] : [ParseDefault, args[0], args[1], args[2]] : args.length === 2 ? [ParseDefault, args[0], [], args[1]] : (() => {
    throw new ParseError("Invalid Arguments");
  })();
  return ParseValue(operations, schema, references, value);
}

// node_modules/@sinclair/typebox/build/esm/value/value/value.mjs
var value_exports2 = {};
__export(value_exports2, {
  Assert: () => Assert,
  Cast: () => Cast,
  Check: () => Check,
  Clean: () => Clean,
  Clone: () => Clone2,
  Convert: () => Convert,
  Create: () => Create2,
  Decode: () => Decode,
  Default: () => Default5,
  Diff: () => Diff,
  Edit: () => Edit,
  Encode: () => Encode,
  Equal: () => Equal,
  Errors: () => Errors,
  Hash: () => Hash,
  Mutate: () => Mutate,
  Parse: () => Parse,
  Patch: () => Patch,
  ValueErrorIterator: () => ValueErrorIterator
});

// node_modules/@scalar/workspace-store/dist/schemas/typebox-coerce.js
var coerceValue = (schema, value) => value_exports2.Cast(schema, value_exports2.Convert(schema, value));

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/contact.js
var ContactObjectSchema2 = Type.Object({
  /** The identifying name of the contact person/organization. */
  name: Type.Optional(Type.String()),
  /** The URI for the contact information. This MUST be in the form of a URI. */
  url: Type.Optional(Type.String()),
  /** The email address of the contact person/organization. This MUST be in the form of an email address. */
  email: Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/license.js
var LicenseObjectSchema2 = Type.Object({
  /** The license name used for the API. */
  name: Type.Optional(Type.String()),
  /** An SPDX license expression for the API. The identifier field is mutually exclusive of the url field. */
  identifier: Type.Optional(Type.String()),
  /** A URI for the license used for the API. This MUST be in the form of a URI. The url field is mutually exclusive of the identifier field. */
  url: Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/reference.js
var ReferenceObjectExtensionsSchema2 = Type.Object({
  /** Indicates the current status of the reference resolution. Can be either 'loading' while fetching the reference or 'error' if the resolution failed. */
  "$status": Type.Optional(Type.Union([Type.Literal("loading"), Type.Literal("error")])),
  /** Indicates whether this reference should be resolved globally across all documents, rather than just within the current document context. */
  "$global": Type.Optional(Type.Boolean())
});
var ReferenceObjectSchema2 = compose(
  Type.Object({
    /** REQUIRED. The reference identifier. This MUST be in the form of a URI. */
    "$ref": Type.String(),
    /** A short summary which by default SHOULD override that of the referenced component. If the referenced object-type does not allow a summary field, then this field has no effect. */
    summary: Type.Optional(Type.String()),
    /** A description which by default SHOULD override that of the referenced component. CommonMark syntax MAY be used for rich text representation. If the referenced object-type does not allow a description field, then this field has no effect. */
    description: Type.Optional(Type.String())
  }),
  ReferenceObjectExtensionsSchema2
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/info.js
var InfoObjectSchema2 = compose(
  Type.Object({
    /** The title of the API. */
    title: Type.Optional(Type.String()),
    /** The version of the OpenAPI Document (which is distinct from the OpenAPI Specification version or the version of the API being described or the version of the OpenAPI Description). */
    version: Type.Optional(Type.String()),
    /** A short summary of the API. */
    summary: Type.Optional(Type.String()),
    /** A description of the API. CommonMark syntax MAY be used for rich text representation. */
    description: Type.Optional(Type.String()),
    /** A URI for the Terms of Service for the API. This MUST be in the form of a URI. */
    termsOfService: Type.Optional(Type.String()),
    /** The contact information for the exposed API. */
    contact: Type.Optional(Type.Union([ContactObjectSchema2, ReferenceObjectSchema2])),
    /** The license information for the exposed API. */
    license: Type.Optional(Type.Union([LicenseObjectSchema2, ReferenceObjectSchema2]))
  }),
  XScalarSdkInstallationSchema
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/server-variable.js
var ServerVariableObjectSchema2 = Type.Object({
  /** An enumeration of string values to be used if the substitution options are from a limited set. The array MUST NOT be empty. */
  enum: Type.Optional(Type.Array(Type.String())),
  /** The default value to use for substitution, which SHALL be sent if an alternate value is not supplied. If the enum is defined, the value MUST exist in the enum's values. Note that this behavior is different from the Schema Object's default keyword, which documents the receiver's behavior rather than inserting the value into the data. */
  default: Type.Optional(Type.String()),
  /** An optional description for the server variable. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/server.js
var ServerObjectSchema2 = Type.Object({
  /** A URL to the target host. This URL supports Server Variables and MAY be relative, to indicate that the host location is relative to the location where the document containing the Server Object is being served. Variable substitutions will be made when a variable is named in {braces}. */
  url: Type.Optional(Type.String()),
  /** An optional string describing the host designated by the URL. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** A map between a variable name and its value. The value is used for substitution in the server's URL template. */
  variables: Type.Optional(Type.Record(Type.String(), ServerVariableObjectSchema2))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/callback.js
var callbackObjectSchemaBuilder2 = (pathItem) => Type.Record(
  Type.String(),
  /** A Path Item Object used to define a callback request and expected responses. A complete example is available. */
  Type.Union([pathItem, ReferenceObjectSchema2])
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/external-documentation.js
var ExternalDocumentationObjectSchema2 = Type.Object({
  /** A description of the target documentation. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** The URI for the target documentation. This MUST be in the form of a URI. */
  url: Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/encoding.js
var encodingObjectSchemaBuilder2 = (header) => Type.Object({
  /** The Content-Type for encoding a specific property. The value is a comma-separated list, each element of which is either a specific media type (e.g. image/png) or a wildcard media type (e.g. image/*). Default value depends on the property type as shown in the table below. */
  contentType: Type.Optional(Type.String()),
  /** A map allowing additional information to be provided as headers. Content-Type is described separately and SHALL be ignored in this section. This field SHALL be ignored if the request body media type is not a multipart. */
  headers: Type.Optional(Type.Record(Type.String(), Type.Union([header, ReferenceObjectSchema2])))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/example.js
var ExampleObjectSchema2 = Type.Object({
  /** Short description for the example. */
  summary: Type.Optional(Type.String()),
  /** Long description for the example. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** Embedded literal example. The value field and externalValue field are mutually exclusive. To represent examples of media types that cannot naturally represented in JSON or YAML, use a string value to contain the example, escaping where necessary. */
  value: Type.Optional(Type.Any()),
  /** A URI that identifies the literal example. This provides the capability to reference examples that cannot easily be included in JSON or YAML documents. The value field and externalValue field are mutually exclusive. See the rules for resolving Relative References. */
  externalValue: Type.Optional(Type.String())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/discriminator.js
var DiscriminatorObjectSchema2 = Type.Object({
  /** The name of the property in the payload that will hold the discriminating value. This property SHOULD be required in the payload schema, as the behavior when the property is absent is undefined. */
  propertyName: Type.Optional(Type.String()),
  /** An object to hold mappings between payload values and schema names or URI references. */
  mapping: Type.Optional(Type.Record(Type.String(), Type.String()))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/xml.js
var XMLObjectSchema2 = Type.Object({
  /** Replaces the name of the element/attribute used for the described schema property. When defined within items, it will affect the name of the individual XML elements within the list. When defined alongside type being "array" (outside the items), it will affect the wrapping element if and only if wrapped is true. If wrapped is false, it will be ignored. */
  name: Type.Optional(Type.String()),
  /** The URI of the namespace definition. Value MUST be in the form of a non-relative URI. */
  namespace: Type.Optional(Type.String()),
  /** The prefix to be used for the name. */
  prefix: Type.Optional(Type.String()),
  /** Declares whether the property definition translates to an attribute instead of an element. Default value is false. */
  attribute: Type.Optional(Type.Boolean()),
  /** MAY be used only for an array definition. Signifies whether the array is wrapped (for example, <books><book/><book/></books>) or unwrapped (<book/><book/>). Default value is false. The definition takes effect only when defined alongside type being "array" (outside the items). */
  wrapped: Type.Optional(Type.Boolean())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/schema.js
var schemaObjectSchemaBuilder2 = (schema) => compose(
  Type.Object({
    // Base JSON Schema
    type: Type.Optional(
      Type.Union([
        Type.Literal("null"),
        Type.Literal("boolean"),
        Type.Literal("string"),
        Type.Literal("number"),
        Type.Literal("integer"),
        Type.Literal("object"),
        Type.Literal("array"),
        Type.Array(
          Type.Union([
            Type.Literal("null"),
            Type.Literal("boolean"),
            Type.Literal("string"),
            Type.Literal("number"),
            Type.Literal("integer"),
            Type.Literal("object"),
            Type.Literal("array")
          ])
        )
      ])
    ),
    /** Different subtypes */
    format: Type.Optional(Type.String()),
    /** A title for the schema. */
    title: Type.Optional(Type.String()),
    /** A description of the schema. */
    description: Type.Optional(Type.String()),
    /** Default value for the schema. */
    default: Type.Optional(Type.Unknown()),
    /** Array of allowed values. */
    enum: Type.Optional(Type.Array(Type.Unknown())),
    /** Constant value that must match exactly. */
    const: Type.Optional(Type.Unknown()),
    // Composition
    /** All schemas must be valid. */
    allOf: Type.Optional(Type.Array(Type.Union([schema, ReferenceObjectSchema]))),
    /** Exactly one schema must be valid. */
    oneOf: Type.Optional(Type.Array(Type.Union([schema, ReferenceObjectSchema]))),
    /** At least one schema must be valid. */
    anyOf: Type.Optional(Type.Array(Type.Union([schema, ReferenceObjectSchema]))),
    /** Schema must not be valid. */
    not: Type.Optional(Type.Union([schema, ReferenceObjectSchema])),
    // OpenAPI 3.0
    /**
     * Whether the schema is nullable.
     *
     * @deprecated this was deprecated in OpenAPI 3.1 and replaced with type: [null]
     * @see https://www.openapis.org/blog/2021/02/16/migrating-from-openapi-3-0-to-3-1-0
     */
    nullable: Type.Optional(Type.Boolean()),
    // OpenAPI 3.1
    /** Media type for content validation. */
    contentMediaType: Type.Optional(Type.String()),
    /** Content encoding. */
    contentEncoding: Type.Optional(Type.String()),
    /** Schema for content validation. */
    contentSchema: Type.Optional(Type.Union([schema, ReferenceObjectSchema])),
    /** Whether the schema is deprecated. */
    deprecated: Type.Optional(Type.Boolean()),
    /** Adds support for polymorphism. The discriminator is used to determine which of a set of schemas a payload is expected to satisfy. See Composition and Inheritance for more details. */
    discriminator: Type.Optional(DiscriminatorObjectSchema2),
    /** Whether the schema is read-only. */
    readOnly: Type.Optional(Type.Boolean()),
    /** Whether the schema is write-only. */
    writeOnly: Type.Optional(Type.Boolean()),
    /** This MAY be used only on property schemas. It has no effect on root schemas. Adds additional metadata to describe the XML representation of this property. */
    xml: Type.Optional(XMLObjectSchema2),
    /** Additional external documentation for this schema. */
    externalDocs: Type.Optional(ExternalDocumentationObjectSchema2),
    /**
     * A free-form field to include an example of an instance for this schema. To represent examples that cannot be naturally represented in JSON or YAML, a string value can be used to contain the example with escaping where necessary.
     *
     * @deprecated The example field has been deprecated in favor of the JSON Schema examples keyword. Use of example is discouraged, and later versions of this specification may remove it.
     */
    example: Type.Optional(Type.Unknown()),
    /**
     * An array of examples of valid instances for this schema. This keyword follows the JSON Schema Draft 2020-12 specification.
     * Each example should be a valid instance of the schema.
     */
    examples: Type.Optional(Type.Array(Type.Unknown())),
    // OpenAPI Extensions
    "x-tags": Type.Optional(Type.Array(Type.String())),
    // Array
    /** Maximum number of items in array. */
    maxItems: Type.Optional(Type.Integer({ minimum: 0 })),
    /** Minimum number of items in array. */
    minItems: Type.Optional(Type.Integer({ minimum: 0 })),
    /** Whether array items must be unique. */
    uniqueItems: Type.Optional(Type.Boolean()),
    /** Schema for array items. */
    items: Type.Optional(Type.Union([schema, ReferenceObjectSchema])),
    /** Schema for tuple validation. */
    prefixItems: Type.Optional(Type.Array(Type.Union([schema, ReferenceObjectSchema]))),
    // Object
    /** Maximum number of properties. */
    maxProperties: Type.Optional(Type.Integer({ minimum: 0 })),
    /** Minimum number of properties. */
    minProperties: Type.Optional(Type.Integer({ minimum: 0 })),
    /** Array of required property names. */
    required: Type.Optional(Type.Array(Type.String())),
    /** Object property definitions. */
    properties: Type.Optional(Type.Record(Type.String(), Type.Union([schema, ReferenceObjectSchema]))),
    /** Schema for additional properties. */
    additionalProperties: Type.Optional(Type.Union([Type.Boolean(), Type.Union([schema, ReferenceObjectSchema])])),
    /** Properties matching regex patterns. */
    patternProperties: Type.Optional(Type.Record(Type.String(), Type.Union([schema, ReferenceObjectSchema]))),
    // String
    /** Maximum string length. */
    maxLength: Type.Optional(Type.Integer({ minimum: 0 })),
    /** Minimum string length. */
    minLength: Type.Optional(Type.Integer({ minimum: 0 })),
    /** Regular expression pattern. */
    pattern: Type.Optional(Type.String()),
    // Number
    /** Number must be a multiple of this value. */
    multipleOf: Type.Optional(Type.Number()),
    /** Maximum value (inclusive). */
    maximum: Type.Optional(Type.Number()),
    /** Maximum value (exclusive). */
    exclusiveMaximum: Type.Optional(Type.Union([Type.Boolean(), Type.Number()])),
    /** Minimum value (inclusive). */
    minimum: Type.Optional(Type.Number()),
    /** Minimum value (exclusive). */
    exclusiveMinimum: Type.Optional(Type.Union([Type.Boolean(), Type.Number()]))
  }),
  XScalarIgnoreSchema,
  XInternalSchema
);
var SchemaObjectSchema2 = Type.Recursive(schemaObjectSchemaBuilder2);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/header.js
var HeaderObjectSchemaBase2 = Type.Object({
  /** A brief description of the header. This could contain examples of use. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** Determines whether this header is mandatory. The default value is false. */
  required: Type.Optional(Type.Boolean()),
  /** Specifies that the header is deprecated and SHOULD be transitioned out of usage. Default value is false. */
  deprecated: Type.Optional(Type.Boolean())
});
var HeaderObjectWithSchemaSchema2 = compose(
  HeaderObjectSchemaBase2,
  Type.Object({
    /** Describes how the header value will be serialized. The default (and only legal value for headers) is "simple". */
    style: Type.Optional(Type.String()),
    /** When this is true, header values of type array or object generate a single header whose value is a comma-separated list of the array items or key-value pairs of the map, see Style Examples. For other data types this field has no effect. The default value is false. */
    explode: Type.Optional(Type.Boolean()),
    /** The schema defining the type used for the header. */
    schema: Type.Optional(Type.Union([SchemaObjectSchema2, ReferenceObjectSchema2])),
    /** Example of the header's potential value; see Working With Examples. https://swagger.io/specification/#working-with-examples */
    example: Type.Optional(Type.Any()),
    /** Examples of the header's potential value; see Working With Examples. https://swagger.io/specification/#working-with-examples */
    examples: Type.Optional(Type.Record(Type.String(), Type.Union([ExampleObjectSchema2, ReferenceObjectSchema2])))
  })
);
var headerObjectSchemaBuilder2 = (mediaType) => Type.Union([
  HeaderObjectWithSchemaSchema2,
  compose(
    HeaderObjectSchemaBase2,
    Type.Object({
      content: Type.Optional(Type.Record(Type.String(), mediaType))
    })
  )
]);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/media-type.js
var mediaTypeObjectSchemaBuilder2 = (encoding) => Type.Object({
  /** The schema defining the content of the request, response, parameter, or header. */
  schema: Type.Optional(Type.Union([SchemaObjectSchema2, ReferenceObjectSchema2])),
  /** Example of the media type */
  example: Type.Optional(Type.Any()),
  /** Examples of the media type */
  examples: Type.Optional(Type.Record(Type.String(), Type.Union([ExampleObjectSchema2, ReferenceObjectSchema2]))),
  /** A map between a property name and its encoding information. The key, being the property name, MUST exist in the schema as a property. The encoding field SHALL only apply to Request Body Objects, and only when the media type is multipart or application/x-www-form-urlencoded. If no Encoding Object is provided for a property, the behavior is determined by the default values documented for the Encoding Object. */
  encoding: Type.Optional(Type.Record(Type.String(), encoding))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/media-header-encoding.js
var EncodingObjectSchema2 = Type.Recursive(
  (This) => encodingObjectSchemaBuilder2(headerObjectSchemaBuilder2(mediaTypeObjectSchemaBuilder2(This)))
);
var MediaTypeObjectSchema2 = Type.Recursive(
  (This) => mediaTypeObjectSchemaBuilder2(encodingObjectSchemaBuilder2(headerObjectSchemaBuilder2(This)))
);
var HeaderObjectSchema2 = Type.Recursive(
  (This) => headerObjectSchemaBuilder2(mediaTypeObjectSchemaBuilder2(encodingObjectSchemaBuilder2(This)))
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/parameter.js
var ParameterObjectBaseSchema2 = Type.Object({
  /** The name of the parameter. Parameter names are case sensitive.
   *    - If in is "path", the name field MUST correspond to a template expression occurring within the path field in the Paths Object. See Path Templating for further information.
   *    - If in is "header" and the name field is "Accept", "Content-Type" or "Authorization", the parameter definition SHALL be ignored.
   *    - For all other cases, the name corresponds to the parameter name used by the in field. */
  name: Type.Optional(Type.String()),
  /** The location of the parameter. Possible values are "query", "header", "path" or "cookie". */
  in: Type.Optional(
    Type.Union([Type.Literal("query"), Type.Literal("header"), Type.Literal("path"), Type.Literal("cookie")])
  ),
  /** A brief description of the parameter. This could contain examples of use. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** Determines whether this parameter is mandatory. If the parameter location is "path", this field is REQUIRED and its value MUST be true. Otherwise, the field MAY be included and its default value is false. */
  required: Type.Optional(Type.Boolean()),
  /** Specifies that a parameter is deprecated and SHOULD be transitioned out of usage. Default value is false. */
  deprecated: Type.Optional(Type.Boolean()),
  /** If true, clients MAY pass a zero-length string value in place of parameters that would otherwise be omitted entirely, which the server SHOULD interpret as the parameter being unused. Default value is false. If style is used, and if behavior is n/a (cannot be serialized), the value of allowEmptyValue SHALL be ignored. Interactions between this field and the parameter's Schema Object are implementation-defined. This field is valid only for query parameters. Use of this field is NOT RECOMMENDED, and it is likely to be removed in a later revision. */
  allowEmptyValue: Type.Optional(Type.Boolean())
});
var ParameterObjectWithSchemaSchema2 = compose(
  ParameterObjectBaseSchema2,
  Type.Object({
    /** Describes how the header value will be serialized. The default (and only legal value for headers) is "simple". */
    style: Type.Optional(Type.String()),
    /** When this is true, header values of type array or object generate a single header whose value is a comma-separated list of the array items or key-value pairs of the map, see Style Examples. For other data types this field has no effect. The default value is false. */
    explode: Type.Optional(Type.Boolean()),
    /** The schema defining the type used for the header. */
    schema: Type.Optional(Type.Union([SchemaObjectSchema2, ReferenceObjectSchema2])),
    /** Example of the header's potential value; see Working With Examples. https://swagger.io/specification/#working-with-examples */
    example: Type.Optional(Type.Any()),
    /** Examples of the header's potential value; see Working With Examples. https://swagger.io/specification/#working-with-examples */
    examples: Type.Optional(Type.Record(Type.String(), Type.Union([ExampleObjectSchema2, ReferenceObjectSchema2])))
  })
);
var ParameterObjectWithContentSchema2 = compose(
  ParameterObjectBaseSchema2,
  Type.Object({
    content: Type.Optional(Type.Record(Type.String(), MediaTypeObjectSchema2))
  })
);
var ParameterObjectSchema2 = Type.Union([ParameterObjectWithSchemaSchema2, ParameterObjectWithContentSchema2]);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/request-body.js
var RequestBodyObjectSchema2 = Type.Object({
  /** A brief description of the request body. This could contain examples of use. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** The content of the request body. The key is a media type or media type range and the value describes it. For requests that match multiple keys, only the most specific key is applicable. e.g. "text/plain" overrides "text/* */
  content: Type.Optional(Type.Record(Type.String(), MediaTypeObjectSchema2)),
  /** Determines if the request body is required in the request. Defaults to false. */
  required: Type.Optional(Type.Boolean())
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/link.js
var LinkObjectSchema2 = Type.Object({
  /** A URI reference to an OAS operation. This field is mutually exclusive of the operationId field, and MUST point to an Operation Object. Relative operationRef values MAY be used to locate an existing Operation Object in the OpenAPI Description. */
  operationRef: Type.Optional(Type.String()),
  /** The name of an existing, resolvable OAS operation, as defined with a unique operationId. This field is mutually exclusive of the operationRef field. */
  operationId: Type.Optional(Type.String()),
  /** A map representing parameters to pass to an operation as specified with operationId or identified via operationRef. The key is the parameter name to be used (optionally qualified with the parameter location, e.g. path.id for an id parameter in the path), whereas the value can be a constant or an expression to be evaluated and passed to the linked operation. */
  parameters: Type.Optional(Type.Record(Type.String(), Type.Any())),
  /** A literal value or {expression} to use as a request body when calling the target operation. */
  requestBody: Type.Optional(Type.Any()),
  /** A description of the link. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** A server object to be used by the target operation. */
  server: Type.Optional(ServerObjectSchema2)
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/response.js
var ResponseObjectSchema2 = Type.Object({
  /** A description of the response. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** Maps a header name to its definition. RFC7230 states header names are case insensitive. If a response header is defined with the name "Content-Type", it SHALL be ignored. */
  headers: Type.Optional(Type.Record(Type.String(), Type.Union([HeaderObjectSchema2, ReferenceObjectSchema2]))),
  /** A map containing descriptions of potential response payloads. The key is a media type or media type range and the value describes it. For responses that match multiple keys, only the most specific key is applicable. e.g. "text/plain" overrides "text/*"  */
  content: Type.Optional(Type.Record(Type.String(), MediaTypeObjectSchema2)),
  /** A map of operations links that can be followed from the response. The key of the map is a short name for the link, following the naming constraints of the names for Component Objects. */
  links: Type.Optional(Type.Record(Type.String(), Type.Union([LinkObjectSchema2, ReferenceObjectSchema2])))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/responses.js
var ResponsesObjectSchema2 = Type.Record(
  Type.String(),
  Type.Union([ResponseObjectSchema2, ReferenceObjectSchema2])
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/security-requirement.js
var SecurityRequirementObjectSchema2 = Type.Record(
  Type.String(),
  /** Each name MUST correspond to a security scheme which is declared in the Security Schemes under the Components Object. If the security scheme is of type "oauth2" or "openIdConnect", then the value is a list of scope names required for the execution, and the list MAY be empty if authorization does not require a specified scope. For other security scheme types, the array MAY contain a list of role names which are required for the execution, but are not otherwise defined or exchanged in-band. */
  Type.Array(Type.String())
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/client-config-extensions/x-scalar-client-config-request-example.js
var exampleBodyMime2 = [
  "application/json",
  "text/plain",
  "text/html",
  "application/javascript",
  "application/xml",
  "application/yaml",
  "application/edn",
  "application/octet-stream",
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  /** Used for direct files */
  "binary"
];
var xScalarFileValueSchema2 = Type.Union([
  Type.Object({
    url: Type.String(),
    base64: Type.Optional(Type.String())
  }),
  Type.Null()
]);
var xScalarExampleBodySchema2 = Type.Object({
  encoding: Type.Union(exampleBodyMime2.map((it2) => Type.Literal(it2))),
  content: Type.Union([Type.Record(Type.String(), Type.Any()), Type.String()]),
  file: Type.Optional(xScalarFileValueSchema2)
});
var xScalarExampleParameterSchema2 = Type.Optional(Type.Record(Type.String(), Type.String()));
var xScalarClientConfigRequestExampleSchema2 = Type.Partial(
  Type.Object({
    name: Type.String(),
    body: xScalarExampleBodySchema2,
    parameters: Type.Object({
      path: xScalarExampleParameterSchema2,
      query: xScalarExampleParameterSchema2,
      header: xScalarExampleParameterSchema2,
      cookie: xScalarExampleParameterSchema2
    })
  })
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/operation.js
var OperationExtensionsSchema2 = Type.Partial(
  Type.Object({
    "x-scalar-client-config-request-example": Type.Record(Type.String(), xScalarClientConfigRequestExampleSchema2)
  })
);
var operationObjectSchemaBuilder2 = (callback) => Type.Union([
  compose(
    Type.Object({
      /** A list of tags for API documentation control. Tags can be used for logical grouping of operations by resources or any other qualifier. */
      tags: Type.Optional(Type.Array(Type.String())),
      /** A short summary of what the operation does. */
      summary: Type.Optional(Type.String()),
      /** A verbose explanation of the operation behavior. CommonMark syntax MAY be used for rich text representation. */
      description: Type.Optional(Type.String()),
      /** Additional external documentation for this operation. */
      externalDocs: Type.Optional(ExternalDocumentationObjectSchema2),
      /** Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is case-sensitive. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions. */
      operationId: Type.Optional(Type.String()),
      /** A list of parameters that are applicable for this operation. If a parameter is already defined at the Path Item, the new definition will override it but can never remove it. The list MUST NOT include duplicated parameters. A unique parameter is defined by a combination of a name and location. The list can use the Reference Object to link to parameters that are defined in the OpenAPI Object's components.parameters. */
      parameters: Type.Optional(Type.Array(Type.Union([ParameterObjectSchema2, ReferenceObjectSchema2]))),
      /** The request body applicable for this operation. The requestBody is fully supported in HTTP methods where the HTTP 1.1 specification RFC7231 has explicitly defined semantics for request bodies. In other cases where the HTTP spec is vague (such as GET, HEAD and DELETE), requestBody is permitted but does not have well-defined semantics and SHOULD be avoided if possible. */
      requestBody: Type.Optional(Type.Union([RequestBodyObjectSchema2, ReferenceObjectSchema2])),
      /** The list of possible responses as they are returned from executing this operation. */
      responses: Type.Optional(ResponsesObjectSchema2),
      /** Declares this operation to be deprecated. Consumers SHOULD refrain from usage of the declared operation. Default value is false. */
      deprecated: Type.Optional(Type.Boolean()),
      /** A declaration of which security mechanisms can be used for this operation. The list of values includes alternative Security Requirement Objects that can be used. Only one of the Security Requirement Objects need to be satisfied to authorize a request. To make security optional, an empty security requirement ({}) can be included in the array. This definition overrides any declared top-level security. To remove a top-level security declaration, an empty array can be used. */
      security: Type.Optional(Type.Array(SecurityRequirementObjectSchema2)),
      /** An alternative servers array to service this operation. If a servers array is specified at the Path Item Object or OpenAPI Object level, it will be overridden by this value. */
      servers: Type.Optional(Type.Array(ServerObjectSchema2)),
      /** A map of possible out-of band callbacks related to the parent operation. The key is a unique identifier for the Callback Object. Each value in the map is a Callback Object that describes a request that may be initiated by the API provider and the expected responses. */
      callbacks: Type.Optional(Type.Record(Type.String(), Type.Union([callback, ReferenceObjectSchema2])))
    }),
    OperationExtensionsSchema2,
    XBadgesSchema,
    XInternalSchema,
    XScalarIgnoreSchema,
    XCodeSamplesSchema,
    XScalarStabilitySchema
  ),
  ReferenceObjectSchema2
]);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/path-item.js
var pathItemObjectSchemaBuilder2 = (operation) => Type.Object({
  /**
   * Allows for a referenced definition of this path item. The value MUST be in the form of a URI, and the referenced structure MUST be in the form of a Path Item Object. In case a Path Item Object field appears both in the defined object and the referenced object, the behavior is undefined. See the rules for resolving Relative References.
   *
   * Note: The behavior of $ref with adjacent properties is likely to change in future versions of this specification to bring it into closer alignment with the behavior of the Reference Object.
   */
  "$ref": Type.Optional(Type.String()),
  /** An optional string summary, intended to apply to all operations in this path. */
  summary: Type.Optional(Type.String()),
  /** An optional string description, intended to apply to all operations in this path. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String()),
  /** A definition of a GET operation on this path. */
  get: Type.Optional(operation),
  /** A definition of a PUT operation on this path. */
  put: Type.Optional(operation),
  /** A definition of a POST operation on this path. */
  post: Type.Optional(operation),
  /** A definition of a DELETE operation on this path. */
  delete: Type.Optional(operation),
  /** A definition of a PATCH operation on this path. */
  patch: Type.Optional(operation),
  /** A definition of a CONNECT operation on this path. */
  connect: Type.Optional(operation),
  /** A definition of a OPTIONS operation on this path. */
  options: Type.Optional(operation),
  /** A definition of a HEAD operation on this path. */
  head: Type.Optional(operation),
  /** A definition of a TRACE operation on this path. */
  trace: Type.Optional(operation),
  /** An alternative servers array to service all operations in this path. If a servers array is specified at the OpenAPI Object level, it will be overridden by this value. */
  servers: Type.Optional(Type.Array(ServerObjectSchema2)),
  /** A list of parameters that are applicable for all the operations described under this path. These parameters can be overridden at the operation level, but cannot be removed there. The list MUST NOT include duplicated parameters. A unique parameter is defined by a combination of a name and location. The list can use the Reference Object to link to parameters that are defined in the OpenAPI Object's components.parameters. */
  parameters: Type.Optional(Type.Array(Type.Union([ParameterObjectSchema2, ReferenceObjectSchema2])))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/path-operations.js
var OperationObjectSchema2 = Type.Recursive(
  (This) => operationObjectSchemaBuilder2(callbackObjectSchemaBuilder2(pathItemObjectSchemaBuilder2(This)))
);
var CallbackObjectSchema2 = Type.Recursive(
  (This) => callbackObjectSchemaBuilder2(pathItemObjectSchemaBuilder2(operationObjectSchemaBuilder2(This)))
);
var PathItemObjectSchema2 = Type.Recursive(
  (This) => pathItemObjectSchemaBuilder2(operationObjectSchemaBuilder2(callbackObjectSchemaBuilder2(This)))
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/paths.js
var PathsObjectSchema2 = Type.Record(
  Type.String(),
  /** A relative path to an individual endpoint. The field name MUST begin with a forward slash (/). The path is appended (no relative URL resolution) to the expanded URL from the Server Object's url field in order to construct the full URL. Path templating is allowed. When matching URLs, concrete (non-templated) paths would be matched before their templated counterparts. Templated paths with the same hierarchy but different templated names MUST NOT exist as they are identical. In case of ambiguous matching, it's up to the tooling to decide which one to use. */
  PathItemObjectSchema2
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/oauth-flow.js
var OAuthFlowCommonSchema2 = Type.Object({
  /** The URL to be used for obtaining refresh tokens. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
  refreshUrl: Type.Optional(Type.String()),
  /** The available scopes for the OAuth2 security scheme. A map between the scope name and a short description for it. The map MAY be empty. */
  scopes: Type.Optional(Type.Record(Type.String(), Type.String()))
});
var OAuthFlowImplicitSchema2 = compose(
  OAuthFlowCommonSchema2,
  XScalarSecretTokenSchema,
  Type.Object({
    /** The authorization URL to be used for this flow. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
    authorizationUrl: Type.Optional(Type.String())
  })
);
var OAuthFlowPasswordSchema2 = compose(
  OAuthFlowCommonSchema2,
  XScalarSecretTokenSchema,
  Type.Object({
    /** The token URL to be used for this flow. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
    tokenUrl: Type.Optional(Type.String())
  })
);
var OAuthFlowClientCredentialsSchema2 = compose(
  OAuthFlowCommonSchema2,
  XScalarSecretTokenSchema,
  Type.Object({
    /** The token URL to be used for this flow. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
    tokenUrl: Type.Optional(Type.String())
  })
);
var OAuthFlowAuthorizationCodeSchema2 = compose(
  OAuthFlowCommonSchema2,
  XScalarSecretTokenSchema,
  Type.Object({
    /** The authorization URL to be used for this flow. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
    authorizationUrl: Type.Optional(Type.String()),
    /** The token URL to be used for this flow. This MUST be in the form of a URL. The OAuth2 standard requires the use of TLS. */
    tokenUrl: Type.Optional(Type.String())
  })
);
var OAuthFlowObjectSchema2 = Type.Union([
  OAuthFlowImplicitSchema2,
  OAuthFlowPasswordSchema2,
  OAuthFlowClientCredentialsSchema2,
  OAuthFlowAuthorizationCodeSchema2
]);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/oauthflows.js
var OAuthFlowsObjectSchema2 = Type.Object({
  /** Configuration for the OAuth Implicit flow */
  implicit: Type.Optional(OAuthFlowImplicitSchema2),
  /** Configuration for the OAuth Resource Owner Password flow */
  password: Type.Optional(OAuthFlowPasswordSchema2),
  /** Configuration for the OAuth Client Credentials flow. Previously called application in OpenAPI 2.0. */
  clientCredentials: Type.Optional(OAuthFlowClientCredentialsSchema2),
  /** Configuration for the OAuth Authorization Code flow. Previously called accessCode in OpenAPI 2.0. */
  authorizationCode: Type.Optional(OAuthFlowAuthorizationCodeSchema2)
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/security-scheme.js
var DescriptionSchema2 = Type.Object({
  /** A description for security scheme. CommonMark syntax MAY be used for rich text representation. */
  description: Type.Optional(Type.String())
});
var ApiKeySchema2 = compose(
  DescriptionSchema2,
  XScalarSecretTokenSchema,
  Type.Object({
    /** The type of the security scheme. Valid values are "apiKey", "http", "mutualTLS", "oauth2", "openIdConnect". */
    type: Type.Optional(Type.Literal("apiKey")),
    /** The name of the header, query or cookie parameter to be used. */
    name: Type.Optional(Type.String()),
    /** The location of the API key. Valid values are "query", "header", or "cookie". */
    in: Type.Optional(Type.String())
  })
);
var HttpSchema2 = compose(
  DescriptionSchema2,
  XScalarSecretTokenSchema,
  XScalarSecretHTTPSchema,
  Type.Object({
    /** The type of the security scheme. Valid values are "apiKey", "http", "mutualTLS", "oauth2", "openIdConnect". */
    type: Type.Optional(Type.Literal("http")),
    /** The name of the HTTP Authentication scheme to be used in the Authorization header as defined in RFC7235. The values used SHOULD be registered in the IANA Authentication Scheme registry. The value is case-insensitive, as defined in RFC7235. */
    scheme: Type.Optional(Type.String()),
    /** A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes. */
    bearerFormat: Type.Optional(Type.String())
  })
);
var OAuth22 = compose(
  DescriptionSchema2,
  Type.Object({
    /** The type of the security scheme. Valid values are "apiKey", "http", "mutualTLS", "oauth2", "openIdConnect". */
    type: Type.Optional(Type.Literal("oauth2")),
    /** An object containing configuration information for the flow types supported. */
    flows: Type.Optional(OAuthFlowsObjectSchema2)
  })
);
var OpenIdConnect2 = compose(
  DescriptionSchema2,
  Type.Object({
    /** The type of the security scheme. Valid values are "apiKey", "http", "mutualTLS", "oauth2", "openIdConnect". */
    type: Type.Optional(Type.Literal("openIdConnect")),
    /** Well-known URL to discover the [[OpenID-Connect-Discovery]] provider metadata. */
    openIdConnectUrl: Type.Optional(Type.String())
  })
);
var SecuritySchemeObjectSchema2 = Type.Union([ApiKeySchema2, HttpSchema2, OAuth22, OpenIdConnect2]);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/components.js
var ComponentsObjectSchema2 = Type.Object({
  /** An object to hold reusable Schema Objects. */
  schemas: Type.Optional(Type.Record(Type.String(), Type.Union([SchemaObjectSchema2, ReferenceObjectSchema2]))),
  /** An object to hold reusable Response Objects. */
  responses: Type.Optional(Type.Record(Type.String(), Type.Union([ResponseObjectSchema2, ReferenceObjectSchema2]))),
  /** An object to hold reusable Parameter Objects. */
  parameters: Type.Optional(Type.Record(Type.String(), Type.Union([ParameterObjectSchema2, ReferenceObjectSchema2]))),
  /** An object to hold reusable Example Objects. */
  examples: Type.Optional(Type.Record(Type.String(), Type.Union([ExampleObjectSchema2, ReferenceObjectSchema2]))),
  /** An object to hold reusable Request Body Objects. */
  requestBodies: Type.Optional(
    Type.Record(Type.String(), Type.Union([RequestBodyObjectSchema2, ReferenceObjectSchema2]))
  ),
  /** An object to hold reusable Header Objects. */
  headers: Type.Optional(Type.Record(Type.String(), Type.Union([HeaderObjectSchema2, ReferenceObjectSchema2]))),
  /** An object to hold reusable Security Scheme Objects. */
  securitySchemes: Type.Optional(
    Type.Record(Type.String(), Type.Union([SecuritySchemeObjectSchema2, ReferenceObjectSchema2]))
  ),
  /** An object to hold reusable Link Objects. */
  links: Type.Optional(Type.Record(Type.String(), Type.Union([LinkObjectSchema2, ReferenceObjectSchema2]))),
  /** An object to hold reusable Callback Objects. */
  callbacks: Type.Optional(Type.Record(Type.String(), Type.Union([CallbackObjectSchema2, ReferenceObjectSchema2]))),
  /** An object to hold reusable Path Item Objects. */
  pathItems: Type.Optional(Type.Record(Type.String(), PathItemObjectSchema2))
});

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/tag.js
var TagObjectSchema2 = compose(
  Type.Object({
    /** The name of the tag. */
    name: Type.Optional(Type.String()),
    /** A description for the tag. CommonMark syntax MAY be used for rich text representation. */
    description: Type.Optional(Type.String()),
    /** Additional external documentation for this tag. */
    externalDocs: Type.Optional(ExternalDocumentationObjectSchema2)
  }),
  XDisplayNameSchema,
  XInternalSchema,
  XScalarIgnoreSchema
);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/client-config-extensions/x-scalar-client-config-environments.js
var xScalarClientConfigEnvVarSchema2 = Type.Union([
  Type.Partial(
    Type.Object({
      description: Type.String(),
      default: Type.String()
    })
  ),
  Type.String()
]);
var xScalarClientConfigEnvironmentSchema2 = Type.Object({
  description: Type.Optional(Type.String()),
  color: Type.Optional(Type.String()),
  /** A map of variables by name */
  variables: Type.Record(Type.String(), xScalarClientConfigEnvVarSchema2)
});
var xScalarClientConfigEnvironmentsSchema2 = Type.Record(Type.String(), xScalarClientConfigEnvironmentSchema2);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/client-config-extensions/x-scalar-client-config-cookies.js
var xScalarClientConfigCookieSchema2 = Type.Object({
  name: Type.String(),
  value: Type.String(),
  domain: Type.Optional(Type.String()),
  path: Type.Optional(Type.String())
});
var xScalarClientConfigCookiesSchema2 = Type.Record(Type.String(), xScalarClientConfigCookieSchema2);

// node_modules/@scalar/workspace-store/dist/schemas/v3.1/loose/openapi-document.js
var OpenApiExtensionsSchema2 = Type.Partial(
  Type.Object({
    "x-tagGroups": Type.Array(
      compose(
        Type.Object({
          tags: Type.Array(Type.String())
        }),
        TagObjectSchema2
      )
    ),
    "x-scalar-client-config-active-environment": Type.String(),
    /** A custom icon representing the collection */
    "x-scalar-client-config-icon": Type.String(),
    "x-scalar-client-config-environments": xScalarClientConfigEnvironmentsSchema2,
    "x-scalar-client-config-cookies": xScalarClientConfigCookiesSchema2,
    [extensions.document.navigation]: Type.Array(TraversedEntrySchema)
  })
);
var OpenAPIDocumentSchema2 = compose(
  Type.Object({
    /** REQUIRED. This string MUST be the version number of the OpenAPI Specification that the OpenAPI Document uses. The openapi field SHOULD be used by tooling to interpret the OpenAPI Document. This is not related to the API info.version string. */
    openapi: Type.String(),
    /** Provides metadata about the API. The metadata MAY be used by tooling as required. */
    info: Type.Optional(Type.Union([InfoObjectSchema2, ReferenceObjectSchema2])),
    /** The default value for the $schema keyword within Schema Objects contained within this OAS document. This MUST be in the form of a URI. */
    jsonSchemaDialect: Type.Optional(Type.String()),
    /** An array of Server Objects, which provide connectivity information to a target server. If the servers field is not provided, or is an empty array, the default value would be a Server Object with a url value of /. */
    servers: Type.Optional(Type.Array(ServerObjectSchema2)),
    /** The available paths and operations for the API. */
    paths: Type.Optional(PathsObjectSchema2),
    /** The incoming webhooks that MAY be received as part of this API and that the API consumer MAY choose to implement. Closely related to the callbacks feature, this section describes requests initiated other than by an API call, for example by an out of band registration. The key name is a unique string to refer to each webhook, while the (optionally referenced) Path Item Object describes a request that may be initiated by the API provider and the expected responses. An example is available. */
    webhooks: Type.Optional(Type.Record(Type.String(), PathItemObjectSchema2)),
    /** An element to hold various Objects for the OpenAPI Description. */
    components: Type.Optional(ComponentsObjectSchema2),
    /** A declaration of which security mechanisms can be used across the API. The list of values includes alternative Security Requirement Objects that can be used. Only one of the Security Requirement Objects need to be satisfied to authorize a request. Individual operations can override this definition. The list can be incomplete, up to being empty or absent. To make security explicitly optional, an empty security requirement ({}) can be included in the array. */
    security: Type.Optional(Type.Array(SecurityRequirementObjectSchema2)),
    /** A list of tags used by the OpenAPI Description with additional metadata. The order of the tags can be used to reflect on their order by the parsing tools. Not all tags that are used by the Operation Object must be declared. The tags that are not declared MAY be organized randomly or based on the tools' logic. Each tag name in the list MUST be unique. */
    tags: Type.Optional(Type.Array(TagObjectSchema2)),
    /** Additional external documentation. */
    externalDocs: Type.Optional(ExternalDocumentationObjectSchema2)
  }),
  OpenApiExtensionsSchema2
);

// node_modules/@scalar/helpers/dist/testing/measure.js
var measureSync = (name, fn) => {
  const start = performance.now();
  const result = fn();
  const end = performance.now();
  const duration = Math.round(end - start);
  console.info(`${name}: ${duration} ms`);
  return result;
};
var measureAsync = async (name, fn) => {
  const start = performance.now();
  const result = await fn();
  const end = performance.now();
  const duration = Math.round(end - start);
  console.info(`${name}: ${duration} ms`);
  return result;
};

// node_modules/@scalar/json-magic/dist/utils/normalize.js
function normalize2(content) {
  if (content === null) {
    return void 0;
  }
  if (typeof content === "string") {
    if (content.trim() === "") {
      return void 0;
    }
    try {
      return JSON.parse(content);
    } catch (_error) {
      const hasColon = /^[^:]+:/.test(content);
      const isJson = content.slice(0, 50).trimStart().startsWith("{");
      if (!hasColon || isJson) {
        return void 0;
      }
      return parse(content, {
        maxAliasCount: 1e4
      });
    }
  }
  return content;
}

// node_modules/@scalar/json-magic/dist/bundle/create-limiter.js
function createLimiter(maxConcurrent) {
  let activeCount = 0;
  const queue = [];
  const next = () => {
    if (queue.length === 0 || activeCount >= maxConcurrent) {
      return;
    }
    const resolve = queue.shift();
    if (resolve) {
      resolve();
    }
  };
  const run = async (fn) => {
    if (activeCount >= maxConcurrent) {
      await new Promise((resolve) => queue.push(resolve));
    }
    activeCount++;
    try {
      const result = await fn();
      return result;
    } finally {
      activeCount--;
      next();
    }
  };
  return run;
}

// node_modules/@scalar/json-magic/dist/bundle/plugins/fetch-urls/index.js
var getHost = (url) => {
  try {
    return new URL(url).host;
  } catch {
    return null;
  }
};
async function fetchUrl(url, limiter, config) {
  try {
    const host = getHost(url);
    const headers = config?.headers?.find((a18) => a18.domains.find((d24) => d24 === host) !== void 0)?.headers;
    const exec = config?.fetch ?? fetch;
    const result = await limiter(
      () => exec(url, {
        headers
      })
    );
    if (result.ok) {
      const body = await result.text();
      return {
        ok: true,
        data: normalize2(body)
      };
    }
    return {
      ok: false
    };
  } catch {
    return {
      ok: false
    };
  }
}
function fetchUrls(config) {
  const limiter = config?.limit ? createLimiter(config.limit) : (fn) => fn();
  return {
    type: "loader",
    validate: isRemoteUrl,
    exec: (value) => fetchUrl(value, limiter, config)
  };
}

// node_modules/@scalar/workspace-store/dist/client.js
var defaultConfig = {
  "x-scalar-reference-config": defaultReferenceConfig
};
async function loadDocument(workspaceDocument) {
  if ("url" in workspaceDocument) {
    return fetchUrls({ fetch: workspaceDocument.fetch }).exec(workspaceDocument.url);
  }
  return {
    ok: true,
    data: workspaceDocument.document
  };
}
var getDocumentSource = (input) => {
  if ("url" in input) {
    return input.url;
  }
  return void 0;
};
var createWorkspaceStore = (workspaceProps) => {
  const originalDocuments = {};
  const intermediateDocuments = {};
  const documentConfigs = {};
  const overrides = {};
  const documentMeta = {};
  const extraDocumentConfigurations = {};
  const workspace = reactive({
    ...workspaceProps?.meta,
    documents: {},
    /**
     * Returns the currently active document from the workspace.
     * The active document is determined by the 'x-scalar-active-document' metadata field,
     * falling back to the first document in the workspace if no active document is specified.
     *
     * @returns The active document or undefined if no document is found
     */
    get activeDocument() {
      const activeDocumentKey = workspace[extensions.workspace.activeDocument] ?? Object.keys(workspace.documents)[0] ?? "";
      return workspace.documents[activeDocumentKey];
    }
  });
  function getActiveDocumentName() {
    return workspace[extensions.workspace.activeDocument] ?? Object.keys(workspace.documents)[0] ?? "";
  }
  async function saveDocument(documentName) {
    const intermediateDocument = intermediateDocuments[documentName];
    const workspaceDocument = workspace.documents[documentName];
    if (!workspaceDocument) {
      return;
    }
    const updatedDocument = getRaw(workspaceDocument);
    if (!intermediateDocument || !updatedDocument) {
      return;
    }
    const updatedWithOriginalRefs = await bundle(deepClone(updatedDocument), {
      plugins: [restoreOriginalRefs()],
      treeShake: false,
      urlMap: true
    });
    const excludedDiffs = applySelectiveUpdates(intermediateDocument, updatedWithOriginalRefs);
    return excludedDiffs;
  }
  async function addInMemoryDocument(input) {
    const { name, meta } = input;
    const cloned = measureSync("deepClone", () => deepClone(input.document));
    const inputDocument = measureSync("upgrade", () => upgrade(cloned).specification);
    measureSync("initialize", () => {
      if (input.initialize !== false) {
        originalDocuments[name] = deepClone({ ...inputDocument });
        intermediateDocuments[name] = deepClone({ ...inputDocument });
        documentConfigs[name] = input.config ?? {};
        overrides[name] = input.overrides ?? {};
        documentMeta[name] = { documentSource: input.documentSource };
        extraDocumentConfigurations[name] = { fetch: input.fetch };
      }
    });
    const temporaryDocument = createMagicProxy({ ...inputDocument, ...meta });
    if (temporaryDocument[extensions.document.navigation] === void 0) {
      await measureAsync(
        "bundle",
        async () => await bundle(getRaw(temporaryDocument), {
          treeShake: false,
          plugins: [
            fetchUrls({
              fetch: extraDocumentConfigurations[name]?.fetch ?? workspaceProps?.fetch
            }),
            externalValueResolver(),
            refsEverywhere()
            // TODO: investigate problems with type: {} properties
            // cleanUp(),
          ],
          urlMap: true,
          origin: documentMeta[name]?.documentSource
          // use the document origin (if provided) as the base URL for resolution
        })
      );
      const coerced = measureSync(
        "coerceValue",
        () => coerceValue(OpenAPIDocumentSchema, deepClone(temporaryDocument))
      );
      measureAsync("mergeObjects", async () => mergeObjects2(temporaryDocument, coerced));
    }
    const isValid = value_exports2.Check(OpenAPIDocumentSchema, temporaryDocument);
    let errors = null;
    if (!isValid) {
      const validationErrors = Array.from(value_exports2.Errors(OpenAPIDocumentSchema, temporaryDocument));
      errors = validationErrors.map((error) => ({
        message: error.message,
        path: error.path,
        schema: error.schema,
        value: error.value
      }));
    }
    const strictDocument = isValid ? temporaryDocument : temporaryDocument;
    if (strictDocument[extensions.document.navigation] === void 0) {
      const showModels = input.config?.["x-scalar-reference-config"]?.features?.showModels;
      strictDocument[extensions.document.navigation] = traverseDocument(strictDocument, {
        ...input.config?.["x-scalar-reference-config"] ?? {},
        hideModels: showModels === void 0 ? void 0 : !showModels
      }).entries;
    }
    workspace.documents[name] = createOverridesProxy(strictDocument, input.overrides);
    return {
      errors,
      document: workspace.documents[name]
    };
  }
  async function addDocument(input) {
    const { name, meta } = input;
    const resolve = await measureAsync(
      "loadDocument",
      async () => await loadDocument({ ...input, fetch: input.fetch ?? workspaceProps?.fetch })
    );
    await measureAsync("addDocument", async () => {
      if (!resolve.ok) {
        console.error(`Failed to fetch document '${name}': request was not successful`);
        workspace.documents[name] = {
          ...meta,
          openapi: "3.1.0",
          info: {
            title: `Document '${name}' could not be loaded`,
            version: "unknown"
          }
        };
        return;
      }
      if (!isObject2(resolve.data)) {
        console.error(`Failed to load document '${name}': response data is not a valid object`);
        workspace.documents[name] = {
          ...meta,
          openapi: "3.1.0",
          info: {
            title: `Document '${name}' could not be loaded`,
            version: "unknown"
          }
        };
        return;
      }
      const { errors } = await addInMemoryDocument({
        ...input,
        document: resolve.data,
        documentSource: getDocumentSource(input)
      });
      if (errors) {
        console.warn("OpenAPI Document Validation Errors", errors);
      }
    });
  }
  const getDocumentConfiguration = (name) => {
    return mergeObjects2(
      mergeObjects2(defaultConfig, workspaceProps?.config ?? {}),
      documentConfigs[name] ?? {}
    );
  };
  const visitedNodesCache = /* @__PURE__ */ new Set();
  return {
    get workspace() {
      return workspace;
    },
    update(key, value) {
      if (key === "__proto__" || key === "constructor" || key === "prototype") {
        throw new Error("Invalid key: cannot modify prototype");
      }
      Object.assign(workspace, { [key]: value });
    },
    updateDocument(name, key, value) {
      const currentDocument = workspace.documents[name === "active" ? getActiveDocumentName() : name];
      if (!currentDocument) {
        throw "Please select a valid document";
      }
      Object.assign(currentDocument, { [key]: value });
    },
    async replaceDocument(documentName, input) {
      const currentDocument = workspace.documents[documentName];
      if (!currentDocument) {
        return console.error(`Document '${documentName}' does not exist in the workspace.`);
      }
      const { errors } = await addInMemoryDocument({
        name: documentName,
        document: input,
        // Preserve the current metadata
        meta: {
          "x-scalar-active-auth": currentDocument["x-scalar-active-auth"],
          "x-scalar-active-server": currentDocument["x-scalar-active-server"]
        },
        initialize: false
      });
      if (errors) {
        console.warn("OpenAPI Document Validation Errors", errors);
      }
    },
    resolve: async (path) => {
      const activeDocument = workspace.activeDocument;
      const target = getValueByPath2(activeDocument, path);
      if (!isObject2(target)) {
        console.error(
          `Invalid path provided for resolution. Path: [${path.join(", ")}]. Found value of type: ${typeof target}. Expected an object.`
        );
        return;
      }
      return bundle(target, {
        root: activeDocument,
        treeShake: false,
        plugins: [fetchUrls(), loadingStatus(), externalValueResolver()],
        urlMap: true,
        visitedNodes: visitedNodesCache
      });
    },
    addDocument,
    get config() {
      return getDocumentConfiguration(getActiveDocumentName());
    },
    exportDocument: (documentName, format) => {
      const intermediateDocument = intermediateDocuments[documentName];
      if (!intermediateDocument) {
        return;
      }
      if (format === "json") {
        return JSON.stringify(intermediateDocument);
      }
      return browser_default.stringify(intermediateDocument);
    },
    saveDocument,
    async revertDocumentChanges(documentName) {
      const workspaceDocument = workspace.documents[documentName];
      const intermediate = intermediateDocuments[documentName];
      if (!workspaceDocument || !intermediate) {
        return;
      }
      const { errors } = await addInMemoryDocument({
        name: documentName,
        document: intermediate,
        initialize: false
      });
      if (errors) {
        console.warn("OpenAPI Document Validation Errors", errors);
      }
    },
    commitDocument(documentName) {
      console.warn(`Commit operation for document '${documentName}' is not implemented yet.`);
    },
    exportWorkspace() {
      return JSON.stringify({
        documents: {
          ...Object.fromEntries(
            Object.entries(workspace.documents).map(([name, doc]) => [
              name,
              // Extract the raw document data for export, removing any Vue reactivity wrappers.
              // When importing, the document can be wrapped again in a magic proxy.
              getRaw(doc)
            ])
          )
        },
        meta: workspaceProps?.meta ?? {},
        documentConfigs,
        originalDocuments,
        intermediateDocuments,
        overrides,
        documentMeta
      });
    },
    loadWorkspace(input) {
      const result = coerceValue(InMemoryWorkspaceSchema, JSON.parse(input));
      safeAssign(
        workspace.documents,
        Object.fromEntries(
          Object.entries(result.documents).map(([name, doc]) => [
            name,
            createOverridesProxy(createMagicProxy(doc), result.overrides[name])
          ])
        )
      );
      safeAssign(originalDocuments, result.originalDocuments);
      safeAssign(intermediateDocuments, result.intermediateDocuments);
      safeAssign(documentConfigs, result.documentConfigs);
      safeAssign(overrides, result.overrides);
      safeAssign(workspace, result.meta);
      safeAssign(documentMeta, result.documentMeta);
    },
    importWorkspaceFromSpecification: (specification) => {
      const { documents, overrides: overrides2, info, workspace: workspaceVersion, ...meta } = specification;
      safeAssign(workspace, meta);
      return Promise.all(
        Object.entries(documents ?? {}).map(
          ([name, doc]) => addDocument({ url: doc.$ref, name, overrides: overrides2?.[name] })
        )
      );
    },
    rebaseDocument: (documentName, newDocumentOrigin, resolvedConflicts) => {
      const newOrigin = coerceValue(OpenAPIDocumentSchema2, upgrade(newDocumentOrigin).specification);
      const originalDocument = originalDocuments[documentName];
      const intermediateDocument = intermediateDocuments[documentName];
      const activeDocument = workspace.documents[documentName] ? getRaw(workspace.documents[documentName]) : void 0;
      if (!originalDocument || !intermediateDocument || !activeDocument) {
        return console.error("[ERROR]: Specified document is missing or internal corrupted workspace state");
      }
      const changelogAA = diff2(originalDocument, newOrigin);
      const changelogAB = diff2(originalDocument, intermediateDocument);
      const changesA = merge(changelogAA, changelogAB);
      if (resolvedConflicts === void 0) {
        return changesA.conflicts;
      }
      const changesetA = changesA.diffs.concat(resolvedConflicts);
      const newIntermediateDocument = apply(deepClone(originalDocument), changesetA);
      intermediateDocuments[documentName] = newIntermediateDocument;
      originalDocuments[documentName] = newOrigin;
      const changelogBA = diff2(intermediateDocument, newIntermediateDocument);
      const changelogBB = diff2(intermediateDocument, activeDocument);
      const changesB = merge(changelogBA, changelogBB);
      const changesetB = changesB.diffs.concat(changesB.conflicts.flatMap((it2) => it2[0]));
      const newActiveDocument = coerceValue(
        OpenAPIDocumentSchema,
        apply(deepClone(newIntermediateDocument), changesetB)
      );
      workspace.documents[documentName] = createOverridesProxy(
        createMagicProxy({ ...newActiveDocument }),
        overrides[documentName]
      );
      return;
    }
  };
};

// node_modules/packrup/dist/index.mjs
function unpackToArray(input, options) {
  const unpacked = [];
  const kFn = options.resolveKeyData || ((ctx) => ctx.key);
  const vFn = options.resolveValueData || ((ctx) => ctx.value);
  for (const [k13, v13] of Object.entries(input)) {
    unpacked.push(...(Array.isArray(v13) ? v13 : [v13]).map((i17) => {
      const ctx = { key: k13, value: i17 };
      const val = vFn(ctx);
      if (typeof val === "object")
        return unpackToArray(val, options);
      if (Array.isArray(val))
        return val;
      return {
        [typeof options.key === "function" ? options.key(ctx) : options.key]: kFn(ctx),
        [typeof options.value === "function" ? options.value(ctx) : options.value]: val
      };
    }).flat());
  }
  return unpacked;
}
function unpackToString(value, options) {
  return Object.entries(value).map(([key, value2]) => {
    if (typeof value2 === "object")
      value2 = unpackToString(value2, options);
    if (options.resolve) {
      const resolved = options.resolve({ key, value: value2 });
      if (typeof resolved !== "undefined")
        return resolved;
    }
    if (typeof value2 === "number")
      value2 = value2.toString();
    if (typeof value2 === "string" && options.wrapValue) {
      value2 = value2.replace(new RegExp(options.wrapValue, "g"), `\\${options.wrapValue}`);
      value2 = `${options.wrapValue}${value2}${options.wrapValue}`;
    }
    return `${key}${options.keyValueSeparator || ""}${value2}`;
  }).join(options.entrySeparator || "");
}

// node_modules/@unhead/shared/dist/index.mjs
var TagsWithInnerContent = /* @__PURE__ */ new Set(["title", "titleTemplate", "script", "style", "noscript"]);
var HasElementTags = /* @__PURE__ */ new Set([
  "base",
  "meta",
  "link",
  "style",
  "script",
  "noscript"
]);
var ValidHeadTags = /* @__PURE__ */ new Set([
  "title",
  "titleTemplate",
  "templateParams",
  "base",
  "htmlAttrs",
  "bodyAttrs",
  "meta",
  "link",
  "style",
  "script",
  "noscript"
]);
var UniqueTags = /* @__PURE__ */ new Set(["base", "title", "titleTemplate", "bodyAttrs", "htmlAttrs", "templateParams"]);
var TagConfigKeys = /* @__PURE__ */ new Set(["tagPosition", "tagPriority", "tagDuplicateStrategy", "children", "innerHTML", "textContent", "processTemplateParams"]);
var IsBrowser = typeof window !== "undefined";
var composableNames = [
  "getActiveHead",
  "useHead",
  "useSeoMeta",
  "useHeadSafe",
  "useServerHead",
  "useServerSeoMeta",
  "useServerHeadSafe"
];
function defineHeadPlugin(plugin) {
  return plugin;
}
function hashCode(s15) {
  let h21 = 9;
  for (let i17 = 0; i17 < s15.length; )
    h21 = Math.imul(h21 ^ s15.charCodeAt(i17++), 9 ** 9);
  return ((h21 ^ h21 >>> 9) + 65536).toString(16).substring(1, 8).toLowerCase();
}
function hashTag(tag) {
  if (tag._h) {
    return tag._h;
  }
  if (tag._d) {
    return hashCode(tag._d);
  }
  let content = `${tag.tag}:${tag.textContent || tag.innerHTML || ""}:`;
  for (const key in tag.props) {
    content += `${key}:${String(tag.props[key])},`;
  }
  return hashCode(content);
}
var p2 = (p25) => ({ keyValue: p25, metaKey: "property" });
var k3 = (p25) => ({ keyValue: p25 });
var MetaPackingSchema = {
  appleItunesApp: {
    unpack: {
      entrySeparator: ", ",
      resolve({ key, value }) {
        return `${fixKeyCase(key)}=${value}`;
      }
    }
  },
  articleExpirationTime: p2("article:expiration_time"),
  articleModifiedTime: p2("article:modified_time"),
  articlePublishedTime: p2("article:published_time"),
  bookReleaseDate: p2("book:release_date"),
  charset: {
    metaKey: "charset"
  },
  contentSecurityPolicy: {
    unpack: {
      entrySeparator: "; ",
      resolve({ key, value }) {
        return `${fixKeyCase(key)} ${value}`;
      }
    },
    metaKey: "http-equiv"
  },
  contentType: {
    metaKey: "http-equiv"
  },
  defaultStyle: {
    metaKey: "http-equiv"
  },
  fbAppId: p2("fb:app_id"),
  msapplicationConfig: k3("msapplication-Config"),
  msapplicationTileColor: k3("msapplication-TileColor"),
  msapplicationTileImage: k3("msapplication-TileImage"),
  ogAudioSecureUrl: p2("og:audio:secure_url"),
  ogAudioUrl: p2("og:audio"),
  ogImageSecureUrl: p2("og:image:secure_url"),
  ogImageUrl: p2("og:image"),
  ogSiteName: p2("og:site_name"),
  ogVideoSecureUrl: p2("og:video:secure_url"),
  ogVideoUrl: p2("og:video"),
  profileFirstName: p2("profile:first_name"),
  profileLastName: p2("profile:last_name"),
  profileUsername: p2("profile:username"),
  refresh: {
    metaKey: "http-equiv",
    unpack: {
      entrySeparator: ";",
      resolve({ key, value }) {
        if (key === "seconds")
          return `${value}`;
      }
    }
  },
  robots: {
    unpack: {
      entrySeparator: ", ",
      resolve({ key, value }) {
        if (typeof value === "boolean")
          return `${fixKeyCase(key)}`;
        else
          return `${fixKeyCase(key)}:${value}`;
      }
    }
  },
  xUaCompatible: {
    metaKey: "http-equiv"
  }
};
var openGraphNamespaces = /* @__PURE__ */ new Set([
  "og",
  "book",
  "article",
  "profile"
]);
function resolveMetaKeyType(key) {
  const fKey = fixKeyCase(key);
  const prefixIndex = fKey.indexOf(":");
  if (openGraphNamespaces.has(fKey.substring(0, prefixIndex)))
    return "property";
  return MetaPackingSchema[key]?.metaKey || "name";
}
function resolveMetaKeyValue(key) {
  return MetaPackingSchema[key]?.keyValue || fixKeyCase(key);
}
function fixKeyCase(key) {
  const updated = key.replace(/([A-Z])/g, "-$1").toLowerCase();
  const prefixIndex = updated.indexOf("-");
  const fKey = updated.substring(0, prefixIndex);
  if (fKey === "twitter" || openGraphNamespaces.has(fKey))
    return key.replace(/([A-Z])/g, ":$1").toLowerCase();
  return updated;
}
function changeKeyCasingDeep(input) {
  if (Array.isArray(input)) {
    return input.map((entry) => changeKeyCasingDeep(entry));
  }
  if (typeof input !== "object" || Array.isArray(input))
    return input;
  const output = {};
  for (const key in input) {
    if (!Object.prototype.hasOwnProperty.call(input, key)) {
      continue;
    }
    output[fixKeyCase(key)] = changeKeyCasingDeep(input[key]);
  }
  return output;
}
function resolvePackedMetaObjectValue(value, key) {
  const definition = MetaPackingSchema[key];
  if (key === "refresh")
    return `${value.seconds};url=${value.url}`;
  return unpackToString(
    changeKeyCasingDeep(value),
    {
      keyValueSeparator: "=",
      entrySeparator: ", ",
      resolve({ value: value2, key: key2 }) {
        if (value2 === null)
          return "";
        if (typeof value2 === "boolean")
          return `${key2}`;
      },
      ...definition?.unpack
    }
  );
}
var ObjectArrayEntries = /* @__PURE__ */ new Set(["og:image", "og:video", "og:audio", "twitter:image"]);
function sanitize(input) {
  const out = {};
  for (const k22 in input) {
    if (!Object.prototype.hasOwnProperty.call(input, k22)) {
      continue;
    }
    const v13 = input[k22];
    if (String(v13) !== "false" && k22)
      out[k22] = v13;
  }
  return out;
}
function handleObjectEntry(key, v13) {
  const value = sanitize(v13);
  const fKey = fixKeyCase(key);
  const attr = resolveMetaKeyType(fKey);
  if (ObjectArrayEntries.has(fKey)) {
    const input = {};
    for (const k22 in value) {
      if (!Object.prototype.hasOwnProperty.call(value, k22)) {
        continue;
      }
      input[`${key}${k22 === "url" ? "" : `${k22[0].toUpperCase()}${k22.slice(1)}`}`] = value[k22];
    }
    return unpackMeta(input).sort((a18, b10) => (a18[attr]?.length || 0) - (b10[attr]?.length || 0));
  }
  return [{ [attr]: fKey, ...value }];
}
function unpackMeta(input) {
  const extras = [];
  const primitives = {};
  for (const key in input) {
    if (!Object.prototype.hasOwnProperty.call(input, key)) {
      continue;
    }
    const value = input[key];
    if (!Array.isArray(value)) {
      if (typeof value === "object" && value) {
        if (ObjectArrayEntries.has(fixKeyCase(key))) {
          extras.push(...handleObjectEntry(key, value));
          continue;
        }
        primitives[key] = sanitize(value);
      } else {
        primitives[key] = value;
      }
      continue;
    }
    for (const v13 of value) {
      extras.push(...typeof v13 === "string" ? unpackMeta({ [key]: v13 }) : handleObjectEntry(key, v13));
    }
  }
  const meta = unpackToArray(primitives, {
    key({ key }) {
      return resolveMetaKeyType(key);
    },
    value({ key }) {
      return key === "charset" ? "charset" : "content";
    },
    resolveKeyData({ key }) {
      return resolveMetaKeyValue(key);
    },
    resolveValueData({ value, key }) {
      if (value === null)
        return "_null";
      if (typeof value === "object")
        return resolvePackedMetaObjectValue(value, key);
      return typeof value === "number" ? value.toString() : value;
    }
  });
  return [...extras, ...meta].map((m30) => {
    if (m30.content === "_null")
      m30.content = null;
    return m30;
  });
}
function thenable(val, thenFn) {
  if (val instanceof Promise) {
    return val.then(thenFn);
  }
  return thenFn(val);
}
function normaliseTag(tagName, input, e16, normalizedProps) {
  const props = normalizedProps || normaliseProps(
    // explicitly check for an object
    // @ts-expect-error untyped
    typeof input === "object" && typeof input !== "function" && !(input instanceof Promise) ? { ...input } : { [tagName === "script" || tagName === "noscript" || tagName === "style" ? "innerHTML" : "textContent"]: input },
    tagName === "templateParams" || tagName === "titleTemplate"
  );
  if (props instanceof Promise) {
    return props.then((val) => normaliseTag(tagName, input, e16, val));
  }
  const tag = {
    tag: tagName,
    props
  };
  for (const k13 of TagConfigKeys) {
    const val = tag.props[k13] !== void 0 ? tag.props[k13] : e16[k13];
    if (val !== void 0) {
      if (!(k13 === "innerHTML" || k13 === "textContent" || k13 === "children") || TagsWithInnerContent.has(tag.tag)) {
        tag[k13 === "children" ? "innerHTML" : k13] = val;
      }
      delete tag.props[k13];
    }
  }
  if (tag.props.body) {
    tag.tagPosition = "bodyClose";
    delete tag.props.body;
  }
  if (tag.tag === "script") {
    if (typeof tag.innerHTML === "object") {
      tag.innerHTML = JSON.stringify(tag.innerHTML);
      tag.props.type = tag.props.type || "application/json";
    }
  }
  return Array.isArray(tag.props.content) ? tag.props.content.map((v13) => ({ ...tag, props: { ...tag.props, content: v13 } })) : tag;
}
function normaliseStyleClassProps(key, v13) {
  const sep = key === "class" ? " " : ";";
  if (v13 && typeof v13 === "object" && !Array.isArray(v13)) {
    v13 = Object.entries(v13).filter(([, v22]) => v22).map(([k13, v22]) => key === "style" ? `${k13}:${v22}` : k13);
  }
  return String(Array.isArray(v13) ? v13.join(sep) : v13)?.split(sep).filter((c14) => Boolean(c14.trim())).join(sep);
}
function nestedNormaliseProps(props, virtual, keys, startIndex) {
  for (let i17 = startIndex; i17 < keys.length; i17 += 1) {
    const k13 = keys[i17];
    if (k13 === "class" || k13 === "style") {
      props[k13] = normaliseStyleClassProps(k13, props[k13]);
      continue;
    }
    if (props[k13] instanceof Promise) {
      return props[k13].then((val) => {
        props[k13] = val;
        return nestedNormaliseProps(props, virtual, keys, i17);
      });
    }
    if (!virtual && !TagConfigKeys.has(k13)) {
      const v13 = String(props[k13]);
      const isDataKey = k13.startsWith("data-");
      if (v13 === "true" || v13 === "") {
        props[k13] = isDataKey ? "true" : true;
      } else if (!props[k13]) {
        if (isDataKey && v13 === "false")
          props[k13] = "false";
        else
          delete props[k13];
      }
    }
  }
}
function normaliseProps(props, virtual = false) {
  const resolvedProps = nestedNormaliseProps(props, virtual, Object.keys(props), 0);
  if (resolvedProps instanceof Promise) {
    return resolvedProps.then(() => props);
  }
  return props;
}
var TagEntityBits = 10;
function nestedNormaliseEntryTags(headTags, tagPromises, startIndex) {
  for (let i17 = startIndex; i17 < tagPromises.length; i17 += 1) {
    const tags = tagPromises[i17];
    if (tags instanceof Promise) {
      return tags.then((val) => {
        tagPromises[i17] = val;
        return nestedNormaliseEntryTags(headTags, tagPromises, i17);
      });
    }
    if (Array.isArray(tags)) {
      headTags.push(...tags);
    } else {
      headTags.push(tags);
    }
  }
}
function normaliseEntryTags(e16) {
  const tagPromises = [];
  const input = e16.resolvedInput;
  for (const k13 in input) {
    if (!Object.prototype.hasOwnProperty.call(input, k13)) {
      continue;
    }
    const v13 = input[k13];
    if (v13 === void 0 || !ValidHeadTags.has(k13)) {
      continue;
    }
    if (Array.isArray(v13)) {
      for (const props of v13) {
        tagPromises.push(normaliseTag(k13, props, e16));
      }
      continue;
    }
    tagPromises.push(normaliseTag(k13, v13, e16));
  }
  if (tagPromises.length === 0) {
    return [];
  }
  const headTags = [];
  return thenable(nestedNormaliseEntryTags(headTags, tagPromises, 0), () => headTags.map((t7, i17) => {
    t7._e = e16._i;
    e16.mode && (t7._m = e16.mode);
    t7._p = (e16._i << TagEntityBits) + i17;
    return t7;
  }));
}
var NetworkEvents = /* @__PURE__ */ new Set(["onload", "onerror", "onabort", "onprogress", "onloadstart"]);
var TAG_WEIGHTS = {
  // tags
  base: -10,
  title: 10
};
var TAG_ALIASES = {
  // relative scores to their default values
  critical: -80,
  high: -10,
  low: 20
};
function tagWeight(tag) {
  const priority = tag.tagPriority;
  if (typeof priority === "number")
    return priority;
  let weight = 100;
  if (tag.tag === "meta") {
    if (tag.props["http-equiv"] === "content-security-policy")
      weight = -30;
    else if (tag.props.charset)
      weight = -20;
    else if (tag.props.name === "viewport")
      weight = -15;
  } else if (tag.tag === "link" && tag.props.rel === "preconnect") {
    weight = 20;
  } else if (tag.tag in TAG_WEIGHTS) {
    weight = TAG_WEIGHTS[tag.tag];
  }
  if (priority && priority in TAG_ALIASES) {
    return weight + TAG_ALIASES[priority];
  }
  return weight;
}
var SortModifiers = [{ prefix: "before:", offset: -1 }, { prefix: "after:", offset: 1 }];
var allowedMetaProperties = ["name", "property", "http-equiv"];
function tagDedupeKey(tag) {
  const { props, tag: tagName } = tag;
  if (UniqueTags.has(tagName))
    return tagName;
  if (tagName === "link" && props.rel === "canonical")
    return "canonical";
  if (props.charset)
    return "charset";
  if (props.id) {
    return `${tagName}:id:${props.id}`;
  }
  for (const n8 of allowedMetaProperties) {
    if (props[n8] !== void 0) {
      return `${tagName}:${n8}:${props[n8]}`;
    }
  }
  return false;
}
var sepSub = "%separator";
function sub(p25, token, isJson = false) {
  let val;
  if (token === "s" || token === "pageTitle") {
    val = p25.pageTitle;
  } else if (token.includes(".")) {
    const dotIndex = token.indexOf(".");
    val = p25[token.substring(0, dotIndex)]?.[token.substring(dotIndex + 1)];
  } else {
    val = p25[token];
  }
  if (val !== void 0) {
    return isJson ? (val || "").replace(/"/g, '\\"') : val || "";
  }
  return void 0;
}
var sepSubRe = new RegExp(`${sepSub}(?:\\s*${sepSub})*`, "g");
function processTemplateParams(s15, p25, sep, isJson = false) {
  if (typeof s15 !== "string" || !s15.includes("%"))
    return s15;
  let decoded = s15;
  try {
    decoded = decodeURI(s15);
  } catch {
  }
  const tokens = decoded.match(/%\w+(?:\.\w+)?/g);
  if (!tokens) {
    return s15;
  }
  const hasSepSub = s15.includes(sepSub);
  s15 = s15.replace(/%\w+(?:\.\w+)?/g, (token) => {
    if (token === sepSub || !tokens.includes(token)) {
      return token;
    }
    const re = sub(p25, token.slice(1), isJson);
    return re !== void 0 ? re : token;
  }).trim();
  if (hasSepSub) {
    if (s15.endsWith(sepSub))
      s15 = s15.slice(0, -sepSub.length);
    if (s15.startsWith(sepSub))
      s15 = s15.slice(sepSub.length);
    s15 = s15.replace(sepSubRe, sep).trim();
  }
  return s15;
}
function resolveTitleTemplate(template, title) {
  if (template == null)
    return title || null;
  if (typeof template === "function")
    return template(title);
  return template;
}

// node_modules/@unhead/dom/dist/index.mjs
async function renderDOMHead(head, options = {}) {
  const dom = options.document || head.resolvedOptions.document;
  if (!dom || !head.dirty)
    return;
  const beforeRenderCtx = { shouldRender: true, tags: [] };
  await head.hooks.callHook("dom:beforeRender", beforeRenderCtx);
  if (!beforeRenderCtx.shouldRender)
    return;
  if (head._domUpdatePromise) {
    return head._domUpdatePromise;
  }
  head._domUpdatePromise = new Promise(async (resolve) => {
    const tags = (await head.resolveTags()).map((tag) => ({
      tag,
      id: HasElementTags.has(tag.tag) ? hashTag(tag) : tag.tag,
      shouldRender: true
    }));
    let state = head._dom;
    if (!state) {
      state = {
        elMap: { htmlAttrs: dom.documentElement, bodyAttrs: dom.body }
      };
      const takenDedupeKeys = /* @__PURE__ */ new Set();
      for (const key of ["body", "head"]) {
        const children = dom[key]?.children;
        for (const c14 of children) {
          const tag = c14.tagName.toLowerCase();
          if (!HasElementTags.has(tag)) {
            continue;
          }
          const t7 = {
            tag,
            props: await normaliseProps(
              c14.getAttributeNames().reduce((props, name) => ({ ...props, [name]: c14.getAttribute(name) }), {})
            ),
            innerHTML: c14.innerHTML
          };
          const dedupeKey = tagDedupeKey(t7);
          let d24 = dedupeKey;
          let i17 = 1;
          while (d24 && takenDedupeKeys.has(d24))
            d24 = `${dedupeKey}:${i17++}`;
          if (d24) {
            t7._d = d24;
            takenDedupeKeys.add(d24);
          }
          state.elMap[c14.getAttribute("data-hid") || hashTag(t7)] = c14;
        }
      }
    }
    state.pendingSideEffects = { ...state.sideEffects };
    state.sideEffects = {};
    function track(id, scope, fn) {
      const k13 = `${id}:${scope}`;
      state.sideEffects[k13] = fn;
      delete state.pendingSideEffects[k13];
    }
    function trackCtx({ id, $el, tag }) {
      const isAttrTag = tag.tag.endsWith("Attrs");
      state.elMap[id] = $el;
      if (!isAttrTag) {
        if (tag.textContent && tag.textContent !== $el.textContent) {
          $el.textContent = tag.textContent;
        }
        if (tag.innerHTML && tag.innerHTML !== $el.innerHTML) {
          $el.innerHTML = tag.innerHTML;
        }
        track(id, "el", () => {
          state.elMap[id]?.remove();
          delete state.elMap[id];
        });
      }
      if (tag._eventHandlers) {
        for (const k13 in tag._eventHandlers) {
          if (!Object.prototype.hasOwnProperty.call(tag._eventHandlers, k13)) {
            continue;
          }
          if ($el.getAttribute(`data-${k13}`) !== "") {
            (tag.tag === "bodyAttrs" ? dom.defaultView : $el).addEventListener(
              // onload -> load
              k13.substring(2),
              tag._eventHandlers[k13].bind($el)
            );
            $el.setAttribute(`data-${k13}`, "");
          }
        }
      }
      for (const k13 in tag.props) {
        if (!Object.prototype.hasOwnProperty.call(tag.props, k13)) {
          continue;
        }
        const value = tag.props[k13];
        const ck = `attr:${k13}`;
        if (k13 === "class") {
          if (!value) {
            continue;
          }
          for (const c14 of value.split(" ")) {
            isAttrTag && track(id, `${ck}:${c14}`, () => $el.classList.remove(c14));
            !$el.classList.contains(c14) && $el.classList.add(c14);
          }
        } else if (k13 === "style") {
          if (!value) {
            continue;
          }
          for (const c14 of value.split(";")) {
            const propIndex = c14.indexOf(":");
            const k22 = c14.substring(0, propIndex).trim();
            const v13 = c14.substring(propIndex + 1).trim();
            track(id, `${ck}:${k22}`, () => {
              $el.style.removeProperty(k22);
            });
            $el.style.setProperty(k22, v13);
          }
        } else {
          $el.getAttribute(k13) !== value && $el.setAttribute(k13, value === true ? "" : String(value));
          isAttrTag && track(id, ck, () => $el.removeAttribute(k13));
        }
      }
    }
    const pending = [];
    const frag = {
      bodyClose: void 0,
      bodyOpen: void 0,
      head: void 0
    };
    for (const ctx of tags) {
      const { tag, shouldRender, id } = ctx;
      if (!shouldRender)
        continue;
      if (tag.tag === "title") {
        dom.title = tag.textContent;
        continue;
      }
      ctx.$el = ctx.$el || state.elMap[id];
      if (ctx.$el) {
        trackCtx(ctx);
      } else if (HasElementTags.has(tag.tag)) {
        pending.push(ctx);
      }
    }
    for (const ctx of pending) {
      const pos = ctx.tag.tagPosition || "head";
      ctx.$el = dom.createElement(ctx.tag.tag);
      trackCtx(ctx);
      frag[pos] = frag[pos] || dom.createDocumentFragment();
      frag[pos].appendChild(ctx.$el);
    }
    for (const ctx of tags)
      await head.hooks.callHook("dom:renderTag", ctx, dom, track);
    frag.head && dom.head.appendChild(frag.head);
    frag.bodyOpen && dom.body.insertBefore(frag.bodyOpen, dom.body.firstChild);
    frag.bodyClose && dom.body.appendChild(frag.bodyClose);
    for (const k13 in state.pendingSideEffects) {
      state.pendingSideEffects[k13]();
    }
    head._dom = state;
    await head.hooks.callHook("dom:rendered", { renders: tags });
    resolve();
  }).finally(() => {
    head._domUpdatePromise = void 0;
    head.dirty = false;
  });
  return head._domUpdatePromise;
}
function debouncedRenderDOMHead(head, options = {}) {
  const fn = options.delayFn || ((fn2) => setTimeout(fn2, 10));
  return head._domDebouncedUpdatePromise = head._domDebouncedUpdatePromise || new Promise((resolve) => fn(() => {
    return renderDOMHead(head, options).then(() => {
      delete head._domDebouncedUpdatePromise;
      resolve();
    });
  }));
}
function DomPlugin(options) {
  return defineHeadPlugin((head) => {
    const initialPayload = head.resolvedOptions.document?.head.querySelector('script[id="unhead:payload"]')?.innerHTML || false;
    if (initialPayload) {
      head.push(JSON.parse(initialPayload));
    }
    return {
      mode: "client",
      hooks: {
        "entries:updated": (head2) => {
          debouncedRenderDOMHead(head2, options);
        }
      }
    };
  });
}

// node_modules/hookable/dist/index.mjs
function flatHooks(configHooks, hooks = {}, parentName) {
  for (const key in configHooks) {
    const subHook = configHooks[key];
    const name = parentName ? `${parentName}:${key}` : key;
    if (typeof subHook === "object" && subHook !== null) {
      flatHooks(subHook, hooks, name);
    } else if (typeof subHook === "function") {
      hooks[name] = subHook;
    }
  }
  return hooks;
}
var defaultTask = { run: (function_) => function_() };
var _createTask = () => defaultTask;
var createTask = typeof console.createTask !== "undefined" ? console.createTask : _createTask;
function serialTaskCaller(hooks, args) {
  const name = args.shift();
  const task = createTask(name);
  return hooks.reduce(
    (promise, hookFunction) => promise.then(() => task.run(() => hookFunction(...args))),
    Promise.resolve()
  );
}
function parallelTaskCaller(hooks, args) {
  const name = args.shift();
  const task = createTask(name);
  return Promise.all(hooks.map((hook) => task.run(() => hook(...args))));
}
function callEachWith(callbacks, arg0) {
  for (const callback of [...callbacks]) {
    callback(arg0);
  }
}
var Hookable = class {
  constructor() {
    this._hooks = {};
    this._before = void 0;
    this._after = void 0;
    this._deprecatedMessages = void 0;
    this._deprecatedHooks = {};
    this.hook = this.hook.bind(this);
    this.callHook = this.callHook.bind(this);
    this.callHookWith = this.callHookWith.bind(this);
  }
  hook(name, function_, options = {}) {
    if (!name || typeof function_ !== "function") {
      return () => {
      };
    }
    const originalName = name;
    let dep;
    while (this._deprecatedHooks[name]) {
      dep = this._deprecatedHooks[name];
      name = dep.to;
    }
    if (dep && !options.allowDeprecated) {
      let message = dep.message;
      if (!message) {
        message = `${originalName} hook has been deprecated` + (dep.to ? `, please use ${dep.to}` : "");
      }
      if (!this._deprecatedMessages) {
        this._deprecatedMessages = /* @__PURE__ */ new Set();
      }
      if (!this._deprecatedMessages.has(message)) {
        console.warn(message);
        this._deprecatedMessages.add(message);
      }
    }
    if (!function_.name) {
      try {
        Object.defineProperty(function_, "name", {
          get: () => "_" + name.replace(/\W+/g, "_") + "_hook_cb",
          configurable: true
        });
      } catch {
      }
    }
    this._hooks[name] = this._hooks[name] || [];
    this._hooks[name].push(function_);
    return () => {
      if (function_) {
        this.removeHook(name, function_);
        function_ = void 0;
      }
    };
  }
  hookOnce(name, function_) {
    let _unreg;
    let _function = (...arguments_) => {
      if (typeof _unreg === "function") {
        _unreg();
      }
      _unreg = void 0;
      _function = void 0;
      return function_(...arguments_);
    };
    _unreg = this.hook(name, _function);
    return _unreg;
  }
  removeHook(name, function_) {
    if (this._hooks[name]) {
      const index = this._hooks[name].indexOf(function_);
      if (index !== -1) {
        this._hooks[name].splice(index, 1);
      }
      if (this._hooks[name].length === 0) {
        delete this._hooks[name];
      }
    }
  }
  deprecateHook(name, deprecated) {
    this._deprecatedHooks[name] = typeof deprecated === "string" ? { to: deprecated } : deprecated;
    const _hooks = this._hooks[name] || [];
    delete this._hooks[name];
    for (const hook of _hooks) {
      this.hook(name, hook);
    }
  }
  deprecateHooks(deprecatedHooks) {
    Object.assign(this._deprecatedHooks, deprecatedHooks);
    for (const name in deprecatedHooks) {
      this.deprecateHook(name, deprecatedHooks[name]);
    }
  }
  addHooks(configHooks) {
    const hooks = flatHooks(configHooks);
    const removeFns = Object.keys(hooks).map(
      (key) => this.hook(key, hooks[key])
    );
    return () => {
      for (const unreg of removeFns.splice(0, removeFns.length)) {
        unreg();
      }
    };
  }
  removeHooks(configHooks) {
    const hooks = flatHooks(configHooks);
    for (const key in hooks) {
      this.removeHook(key, hooks[key]);
    }
  }
  removeAllHooks() {
    for (const key in this._hooks) {
      delete this._hooks[key];
    }
  }
  callHook(name, ...arguments_) {
    arguments_.unshift(name);
    return this.callHookWith(serialTaskCaller, name, ...arguments_);
  }
  callHookParallel(name, ...arguments_) {
    arguments_.unshift(name);
    return this.callHookWith(parallelTaskCaller, name, ...arguments_);
  }
  callHookWith(caller, name, ...arguments_) {
    const event = this._before || this._after ? { name, args: arguments_, context: {} } : void 0;
    if (this._before) {
      callEachWith(this._before, event);
    }
    const result = caller(
      name in this._hooks ? [...this._hooks[name]] : [],
      arguments_
    );
    if (result instanceof Promise) {
      return result.finally(() => {
        if (this._after && event) {
          callEachWith(this._after, event);
        }
      });
    }
    if (this._after && event) {
      callEachWith(this._after, event);
    }
    return result;
  }
  beforeEach(function_) {
    this._before = this._before || [];
    this._before.push(function_);
    return () => {
      if (this._before !== void 0) {
        const index = this._before.indexOf(function_);
        if (index !== -1) {
          this._before.splice(index, 1);
        }
      }
    };
  }
  afterEach(function_) {
    this._after = this._after || [];
    this._after.push(function_);
    return () => {
      if (this._after !== void 0) {
        const index = this._after.indexOf(function_);
        if (index !== -1) {
          this._after.splice(index, 1);
        }
      }
    };
  }
};
function createHooks() {
  return new Hookable();
}

// node_modules/unhead/dist/index.mjs
var UsesMergeStrategy = /* @__PURE__ */ new Set(["templateParams", "htmlAttrs", "bodyAttrs"]);
var DedupePlugin = defineHeadPlugin({
  hooks: {
    "tag:normalise": ({ tag }) => {
      if (tag.props.hid) {
        tag.key = tag.props.hid;
        delete tag.props.hid;
      }
      if (tag.props.vmid) {
        tag.key = tag.props.vmid;
        delete tag.props.vmid;
      }
      if (tag.props.key) {
        tag.key = tag.props.key;
        delete tag.props.key;
      }
      const generatedKey = tagDedupeKey(tag);
      if (generatedKey && !generatedKey.startsWith("meta:og:") && !generatedKey.startsWith("meta:twitter:")) {
        delete tag.key;
      }
      const dedupe = generatedKey || (tag.key ? `${tag.tag}:${tag.key}` : false);
      if (dedupe)
        tag._d = dedupe;
    },
    "tags:resolve": (ctx) => {
      const deduping = /* @__PURE__ */ Object.create(null);
      for (const tag of ctx.tags) {
        const dedupeKey = (tag.key ? `${tag.tag}:${tag.key}` : tag._d) || hashTag(tag);
        const dupedTag = deduping[dedupeKey];
        if (dupedTag) {
          let strategy = tag?.tagDuplicateStrategy;
          if (!strategy && UsesMergeStrategy.has(tag.tag))
            strategy = "merge";
          if (strategy === "merge") {
            const oldProps = dupedTag.props;
            if (oldProps.style && tag.props.style) {
              if (oldProps.style[oldProps.style.length - 1] !== ";") {
                oldProps.style += ";";
              }
              tag.props.style = `${oldProps.style} ${tag.props.style}`;
            }
            if (oldProps.class && tag.props.class) {
              tag.props.class = `${oldProps.class} ${tag.props.class}`;
            } else if (oldProps.class) {
              tag.props.class = oldProps.class;
            }
            deduping[dedupeKey].props = {
              ...oldProps,
              ...tag.props
            };
            continue;
          } else if (tag._e === dupedTag._e) {
            dupedTag._duped = dupedTag._duped || [];
            tag._d = `${dupedTag._d}:${dupedTag._duped.length + 1}`;
            dupedTag._duped.push(tag);
            continue;
          } else if (tagWeight(tag) > tagWeight(dupedTag)) {
            continue;
          }
        }
        const hasProps = tag.innerHTML || tag.textContent || Object.keys(tag.props).length !== 0;
        if (!hasProps && HasElementTags.has(tag.tag)) {
          delete deduping[dedupeKey];
          continue;
        }
        deduping[dedupeKey] = tag;
      }
      const newTags = [];
      for (const key in deduping) {
        const tag = deduping[key];
        const dupes = tag._duped;
        newTags.push(tag);
        if (dupes) {
          delete tag._duped;
          newTags.push(...dupes);
        }
      }
      ctx.tags = newTags;
      ctx.tags = ctx.tags.filter((t7) => !(t7.tag === "meta" && (t7.props.name || t7.props.property) && !t7.props.content));
    }
  }
});
var ValidEventTags = /* @__PURE__ */ new Set(["script", "link", "bodyAttrs"]);
var EventHandlersPlugin = defineHeadPlugin((head) => ({
  hooks: {
    "tags:resolve": (ctx) => {
      for (const tag of ctx.tags) {
        if (!ValidEventTags.has(tag.tag)) {
          continue;
        }
        const props = tag.props;
        for (const key in props) {
          if (key[0] !== "o" || key[1] !== "n") {
            continue;
          }
          if (!Object.prototype.hasOwnProperty.call(props, key)) {
            continue;
          }
          const value = props[key];
          if (typeof value !== "function") {
            continue;
          }
          if (head.ssr && NetworkEvents.has(key)) {
            props[key] = `this.dataset.${key}fired = true`;
          } else {
            delete props[key];
          }
          tag._eventHandlers = tag._eventHandlers || {};
          tag._eventHandlers[key] = value;
        }
        if (head.ssr && tag._eventHandlers && (tag.props.src || tag.props.href)) {
          tag.key = tag.key || hashCode(tag.props.src || tag.props.href);
        }
      }
    },
    "dom:renderTag": ({ $el, tag }) => {
      const dataset = $el?.dataset;
      if (!dataset) {
        return;
      }
      for (const k13 in dataset) {
        if (!k13.endsWith("fired")) {
          continue;
        }
        const ek = k13.slice(0, -5);
        if (!NetworkEvents.has(ek)) {
          continue;
        }
        tag._eventHandlers?.[ek]?.call($el, new Event(ek.substring(2)));
      }
    }
  }
}));
var DupeableTags = /* @__PURE__ */ new Set(["link", "style", "script", "noscript"]);
var HashKeyedPlugin = defineHeadPlugin({
  hooks: {
    "tag:normalise": ({ tag }) => {
      if (tag.key && DupeableTags.has(tag.tag)) {
        tag.props["data-hid"] = tag._h = hashCode(tag.key);
      }
    }
  }
});
var PayloadPlugin = defineHeadPlugin({
  mode: "server",
  hooks: {
    "tags:beforeResolve": (ctx) => {
      const payload = {};
      let hasPayload = false;
      for (const tag of ctx.tags) {
        if (tag._m !== "server" || tag.tag !== "titleTemplate" && tag.tag !== "templateParams" && tag.tag !== "title") {
          continue;
        }
        payload[tag.tag] = tag.tag === "title" || tag.tag === "titleTemplate" ? tag.textContent : tag.props;
        hasPayload = true;
      }
      if (hasPayload) {
        ctx.tags.push({
          tag: "script",
          innerHTML: JSON.stringify(payload),
          props: { id: "unhead:payload", type: "application/json" }
        });
      }
    }
  }
});
var SortPlugin = defineHeadPlugin({
  hooks: {
    "tags:resolve": (ctx) => {
      for (const tag of ctx.tags) {
        if (typeof tag.tagPriority !== "string") {
          continue;
        }
        for (const { prefix, offset } of SortModifiers) {
          if (!tag.tagPriority.startsWith(prefix)) {
            continue;
          }
          const key = tag.tagPriority.substring(prefix.length);
          const position = ctx.tags.find((tag2) => tag2._d === key)?._p;
          if (position !== void 0) {
            tag._p = position + offset;
            break;
          }
        }
      }
      ctx.tags.sort((a18, b10) => {
        const aWeight = tagWeight(a18);
        const bWeight = tagWeight(b10);
        if (aWeight < bWeight) {
          return -1;
        } else if (aWeight > bWeight) {
          return 1;
        }
        return a18._p - b10._p;
      });
    }
  }
});
var SupportedAttrs = {
  meta: "content",
  link: "href",
  htmlAttrs: "lang"
};
var contentAttrs = ["innerHTML", "textContent"];
var TemplateParamsPlugin = defineHeadPlugin((head) => ({
  hooks: {
    "tags:resolve": (ctx) => {
      const { tags } = ctx;
      let templateParams;
      for (let i17 = 0; i17 < tags.length; i17 += 1) {
        const tag = tags[i17];
        if (tag.tag !== "templateParams") {
          continue;
        }
        templateParams = ctx.tags.splice(i17, 1)[0].props;
        i17 -= 1;
      }
      const params = templateParams || {};
      const sep = params.separator || "|";
      delete params.separator;
      params.pageTitle = processTemplateParams(
        // find templateParams
        params.pageTitle || tags.find((tag) => tag.tag === "title")?.textContent || "",
        params,
        sep
      );
      for (const tag of tags) {
        if (tag.processTemplateParams === false) {
          continue;
        }
        const v13 = SupportedAttrs[tag.tag];
        if (v13 && typeof tag.props[v13] === "string") {
          tag.props[v13] = processTemplateParams(tag.props[v13], params, sep);
        } else if (tag.processTemplateParams || tag.tag === "titleTemplate" || tag.tag === "title") {
          for (const p25 of contentAttrs) {
            if (typeof tag[p25] === "string")
              tag[p25] = processTemplateParams(tag[p25], params, sep, tag.tag === "script" && tag.props.type.endsWith("json"));
          }
        }
      }
      head._templateParams = params;
      head._separator = sep;
    },
    "tags:afterResolve": ({ tags }) => {
      let title;
      for (let i17 = 0; i17 < tags.length; i17 += 1) {
        const tag = tags[i17];
        if (tag.tag === "title" && tag.processTemplateParams !== false) {
          title = tag;
        }
      }
      if (title?.textContent) {
        title.textContent = processTemplateParams(title.textContent, head._templateParams, head._separator);
      }
    }
  }
}));
var TitleTemplatePlugin = defineHeadPlugin({
  hooks: {
    "tags:resolve": (ctx) => {
      const { tags } = ctx;
      let titleTag;
      let titleTemplateTag;
      for (let i17 = 0; i17 < tags.length; i17 += 1) {
        const tag = tags[i17];
        if (tag.tag === "title") {
          titleTag = tag;
        } else if (tag.tag === "titleTemplate") {
          titleTemplateTag = tag;
        }
      }
      if (titleTemplateTag && titleTag) {
        const newTitle = resolveTitleTemplate(
          titleTemplateTag.textContent,
          titleTag.textContent
        );
        if (newTitle !== null) {
          titleTag.textContent = newTitle || titleTag.textContent;
        } else {
          ctx.tags.splice(ctx.tags.indexOf(titleTag), 1);
        }
      } else if (titleTemplateTag) {
        const newTitle = resolveTitleTemplate(
          titleTemplateTag.textContent
        );
        if (newTitle !== null) {
          titleTemplateTag.textContent = newTitle;
          titleTemplateTag.tag = "title";
          titleTemplateTag = void 0;
        }
      }
      if (titleTemplateTag) {
        ctx.tags.splice(ctx.tags.indexOf(titleTemplateTag), 1);
      }
    }
  }
});
var XSSPlugin = defineHeadPlugin({
  hooks: {
    "tags:afterResolve": (ctx) => {
      for (const tag of ctx.tags) {
        if (typeof tag.innerHTML === "string") {
          if (tag.innerHTML && (tag.props.type === "application/ld+json" || tag.props.type === "application/json")) {
            tag.innerHTML = tag.innerHTML.replace(/</g, "\\u003C");
          } else {
            tag.innerHTML = tag.innerHTML.replace(new RegExp(`</${tag.tag}`, "g"), `<\\/${tag.tag}`);
          }
        }
      }
    }
  }
});
var activeHead;
function createHead(options = {}) {
  const head = createHeadCore(options);
  head.use(DomPlugin());
  return activeHead = head;
}
function filterMode(mode, ssr) {
  return !mode || mode === "server" && ssr || mode === "client" && !ssr;
}
function createHeadCore(options = {}) {
  const hooks = createHooks();
  hooks.addHooks(options.hooks || {});
  options.document = options.document || (IsBrowser ? document : void 0);
  const ssr = !options.document;
  const updated = () => {
    head.dirty = true;
    hooks.callHook("entries:updated", head);
  };
  let entryCount = 0;
  let entries = [];
  const plugins = [];
  const head = {
    plugins,
    dirty: false,
    resolvedOptions: options,
    hooks,
    headEntries() {
      return entries;
    },
    use(p25) {
      const plugin = typeof p25 === "function" ? p25(head) : p25;
      if (!plugin.key || !plugins.some((p26) => p26.key === plugin.key)) {
        plugins.push(plugin);
        filterMode(plugin.mode, ssr) && hooks.addHooks(plugin.hooks || {});
      }
    },
    push(input, entryOptions) {
      delete entryOptions?.head;
      const entry = {
        _i: entryCount++,
        input,
        ...entryOptions
      };
      if (filterMode(entry.mode, ssr)) {
        entries.push(entry);
        updated();
      }
      return {
        dispose() {
          entries = entries.filter((e16) => e16._i !== entry._i);
          updated();
        },
        // a patch is the same as creating a new entry, just a nice DX
        patch(input2) {
          for (const e16 of entries) {
            if (e16._i === entry._i) {
              e16.input = entry.input = input2;
            }
          }
          updated();
        }
      };
    },
    async resolveTags() {
      const resolveCtx = { tags: [], entries: [...entries] };
      await hooks.callHook("entries:resolve", resolveCtx);
      for (const entry of resolveCtx.entries) {
        const resolved = entry.resolvedInput || entry.input;
        entry.resolvedInput = await (entry.transform ? entry.transform(resolved) : resolved);
        if (entry.resolvedInput) {
          for (const tag of await normaliseEntryTags(entry)) {
            const tagCtx = { tag, entry, resolvedOptions: head.resolvedOptions };
            await hooks.callHook("tag:normalise", tagCtx);
            resolveCtx.tags.push(tagCtx.tag);
          }
        }
      }
      await hooks.callHook("tags:beforeResolve", resolveCtx);
      await hooks.callHook("tags:resolve", resolveCtx);
      await hooks.callHook("tags:afterResolve", resolveCtx);
      return resolveCtx.tags;
    },
    ssr
  };
  [
    DedupePlugin,
    PayloadPlugin,
    EventHandlersPlugin,
    HashKeyedPlugin,
    SortPlugin,
    TemplateParamsPlugin,
    TitleTemplatePlugin,
    XSSPlugin,
    ...options?.plugins || []
  ].forEach((p25) => head.use(p25));
  head.hooks.callHook("init", head);
  return head;
}
function getActiveHead() {
  return activeHead;
}
var ScriptProxyTarget = Symbol("ScriptProxyTarget");
function scriptProxy() {
}
scriptProxy[ScriptProxyTarget] = true;

// node_modules/@unhead/vue/dist/shared/vue.ziyDaVMR.mjs
var Vue3 = version[0] === "3";
function resolveUnref(r12) {
  return typeof r12 === "function" ? r12() : unref(r12);
}
function resolveUnrefHeadInput(ref2) {
  if (ref2 instanceof Promise || ref2 instanceof Date || ref2 instanceof RegExp)
    return ref2;
  const root = resolveUnref(ref2);
  if (!ref2 || !root)
    return root;
  if (Array.isArray(root))
    return root.map((r12) => resolveUnrefHeadInput(r12));
  if (typeof root === "object") {
    const resolved = {};
    for (const k13 in root) {
      if (!Object.prototype.hasOwnProperty.call(root, k13)) {
        continue;
      }
      if (k13 === "titleTemplate" || k13[0] === "o" && k13[1] === "n") {
        resolved[k13] = unref(root[k13]);
        continue;
      }
      resolved[k13] = resolveUnrefHeadInput(root[k13]);
    }
    return resolved;
  }
  return root;
}
var VueReactivityPlugin = defineHeadPlugin({
  hooks: {
    "entries:resolve": (ctx) => {
      for (const entry of ctx.entries)
        entry.resolvedInput = resolveUnrefHeadInput(entry.input);
    }
  }
});
var headSymbol = "usehead";
function vueInstall(head) {
  const plugin = {
    install(app) {
      if (Vue3) {
        app.config.globalProperties.$unhead = head;
        app.config.globalProperties.$head = head;
        app.provide(headSymbol, head);
      }
    }
  };
  return plugin.install;
}
function createHead2(options = {}) {
  options.domDelayFn = options.domDelayFn || ((fn) => nextTick(() => setTimeout(() => fn(), 0)));
  const head = createHead(options);
  head.use(VueReactivityPlugin);
  head.install = vueInstall(head);
  return head;
}
var _global = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
var globalKey = "__unhead_injection_handler__";
function injectHead() {
  if (globalKey in _global) {
    return _global[globalKey]();
  }
  const head = inject(headSymbol);
  if (!head && true)
    console.warn("Unhead is missing Vue context, falling back to shared context. This may have unexpected results.");
  return head || getActiveHead();
}

// node_modules/@unhead/vue/dist/shared/vue.-sixQ7xP.mjs
function useHead(input, options = {}) {
  const head = options.head || injectHead();
  if (head) {
    if (!head.ssr)
      return clientUseHead(head, input, options);
    return head.push(input, options);
  }
}
function clientUseHead(head, input, options = {}) {
  const deactivated = ref(false);
  const resolvedInput = ref({});
  watchEffect(() => {
    resolvedInput.value = deactivated.value ? {} : resolveUnrefHeadInput(input);
  });
  const entry = head.push(resolvedInput.value, options);
  watch(resolvedInput, (e16) => {
    entry.patch(e16);
  });
  const vm = getCurrentInstance();
  if (vm) {
    onBeforeUnmount(() => {
      entry.dispose();
    });
    onDeactivated(() => {
      deactivated.value = true;
    });
    onActivated(() => {
      deactivated.value = false;
    });
  }
  return entry;
}

// node_modules/@unhead/vue/dist/index.mjs
var coreComposableNames = [
  "injectHead"
];
var unheadVueComposablesImports = {
  "@unhead/vue": [...coreComposableNames, ...composableNames]
};
function useSeoMeta(input, options) {
  const { title, titleTemplate, ...meta } = input;
  return useHead({
    title,
    titleTemplate,
    // @ts-expect-error runtime type
    _flatMeta: meta
  }, {
    ...options,
    transform(t7) {
      const meta2 = unpackMeta({ ...t7._flatMeta });
      delete t7._flatMeta;
      return {
        // @ts-expect-error runtime type
        ...t7,
        meta: meta2
      };
    }
  });
}

// node_modules/@scalar/helpers/dist/testing/sleep.js
var sleep = (ms) => new Promise((r12) => setTimeout(r12, ms));

// node_modules/@scalar/api-reference/dist/_virtual/_plugin-vue_export-helper.js
var s4 = (t7, e16) => {
  const o8 = t7.__vccOpts || t7;
  for (const [r12, c14] of e16)
    o8[r12] = c14;
  return o8;
};

// node_modules/@scalar/api-reference/dist/components/ClassicHeader.vue.js
var n2 = {};
var d3 = { class: "references-classic-header-container" };
var a = { class: "references-classic-header" };
var i2 = { class: "references-classic-header-content" };
function l(e16, _22) {
  return openBlock(), createElementBlock("div", d3, [
    createBaseVNode("div", a, [
      createBaseVNode("div", i2, [
        renderSlot(e16.$slots, "default", {}, void 0, true)
      ]),
      renderSlot(e16.$slots, "dark-mode-toggle", {}, void 0, true)
    ])
  ]);
}
var h4 = s4(n2, [["render", l], ["__scopeId", "data-v-9198d025"]]);

// node_modules/@scalar/api-reference/dist/components/GettingStarted.vue2.js
var C4 = { class: "start custom-scroll" };
var S2 = { class: "start-copy" };
var x2 = { class: "start-cta" };
var k4 = { class: "start-row" };
var Z = { class: "start-section start-section-colors" };
var _9 = ["onClick"];
var P2 = defineComponent({
  __name: "GettingStarted",
  props: {
    theme: {}
  },
  emits: ["changeTheme", "loadSwaggerFile", "linkSwaggerFile", "updateContent"],
  setup(E11, { emit: v13 }) {
    const g6 = v13, m30 = [
      "default",
      "alternate",
      "moon",
      "purple",
      "solarized",
      "bluePlanet",
      "saturn",
      "kepler",
      "mars",
      "deepSpace"
    ];
    async function h21() {
      const s15 = await fetch(
        "https://registry.scalar.com/@scalar/apis/galaxy/latest?format=yaml"
      );
      g6("updateContent", await s15.text());
    }
    return (s15, a18) => (openBlock(), createElementBlock("div", C4, [
      createBaseVNode("div", S2, [
        a18[3] || (a18[3] = createStaticVNode('<div class="start-logo" data-v-bc17fac9><svg height="36" viewBox="0 0 36 36" width="36" xmlns="http://www.w3.org/2000/svg" data-v-bc17fac9><path d="M18 0a18 18 0 1 1 0 36 18 18 0 0 1 0-36Zm11.2 6.5c-3.3-3.3-11.1-1-17.4 5.3-6.2 6.3-8.6 14-5.3 17.4 3.3 3.3 11 .9 17.3-5.4 6.3-6.2 8.7-14 5.4-17.3ZM17.6 12a6.3 6.3 0 1 1 0 12.7 6.3 6.3 0 0 1 0-12.7Z" fill="currentColor" fill-rule="evenodd" data-v-bc17fac9></path></svg></div><h1 class="start-h1" data-v-bc17fac9>Swagger Editor</h1><p class="start-p" data-v-bc17fac9> Welcome to the Scalar API References + Swagger Editor, a Free &amp; Open-Source tool that takes your Swagger/OAS file and generates Beautiful API references. </p>', 3)),
        createBaseVNode("div", x2, [
          createVNode(unref($), {
            fullWidth: "",
            onClick: h21
          }, {
            default: withCtx(() => a18[1] || (a18[1] = [
              createTextVNode(" Show Example ")
            ])),
            _: 1,
            __: [1]
          }),
          createVNode(unref($), {
            fullWidth: "",
            variant: "outlined",
            onClick: a18[0] || (a18[0] = (t7) => s15.$emit("loadSwaggerFile"))
          }, {
            default: withCtx(() => a18[2] || (a18[2] = [
              createTextVNode(" Upload File ")
            ])),
            _: 1,
            __: [2]
          })
        ])
      ]),
      createBaseVNode("div", k4, [
        a18[5] || (a18[5] = createStaticVNode('<div class="start-section start-section-integrations" data-v-bc17fac9><div class="start-h2" data-v-bc17fac9>INTEGRATIONS</div><a class="start-item" href="https://github.com/scalar/scalar/tree/main/integrations/fastify#readme" target="_blank" data-v-bc17fac9><svg fill="currentColor" height="16" viewBox="0 0 19 16" width="19" xmlns="http://www.w3.org/2000/svg" data-v-bc17fac9><path d="m18.2 3.1.8-2V.9l-4.7 1.3C15.2 1 15 0 15 0s-2.5 1.6-4.3 1.5c-2 0-3.6.8-4 1-1.8 1.2-2.5 3.3-3.2 3.8L0 8.9 2.3 8l-2 2.5c.2.3 1.2 1.6 2.1 1.3l.4-.1 1.6.5-.7-1 .2-.2.9.3-.1-.8.9.3-.1-.8.3-.1 1-3.5 3.7-2.6-.3.7A4 4 0 0 1 8 7l-.6.2c-.5.5-.7.7-.8 2.5a2 2 0 0 1 1 0c1.6.4 2.2 2.3 1.7 2.9l-.7.6H8v.6h-.7v.5l-.2.2c-.7 0-1.4-.6-1.4-.6 0 .5.4 1.3.4 1.3s1.7 1.1 2.7.7c1-.4.7-2.3 2.8-3.2l3.3-.9.8-2.2-1.7.5v-2l2.5-.6.9-2.2-3.4.9v-2l4.2-1.1Z" fill="currentColor" fill-rule="nonzero" data-v-bc17fac9></path></svg><span data-v-bc17fac9>Fastify</span></a><a class="start-item" href="https://github.com/scalar/scalar/blob/main/documentation/integrations/html-js.md#html" target="_blank" data-v-bc17fac9><svg fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" data-v-bc17fac9><g data-v-bc17fac9><path d="M22.5 1.5h-21A1.5 1.5 0 0 0 0 3v3a1.5 1.5 0 0 0 1.5 1.5h21A1.5 1.5 0 0 0 24 6V3a1.5 1.5 0 0 0-1.5-1.5Zm-19.25 3A1.25 1.25 0 1 1 4.5 5.75 1.25 1.25 0 0 1 3.25 4.5ZM8.5 5.75A1.25 1.25 0 1 1 9.75 4.5 1.25 1.25 0 0 1 8.5 5.75Z" fill="currentColor" data-v-bc17fac9></path><path d="M22.5 9h-21A1.5 1.5 0 0 0 0 10.5v3A1.5 1.5 0 0 0 1.5 15h21a1.5 1.5 0 0 0 1.5-1.5v-3A1.5 1.5 0 0 0 22.5 9ZM3.25 12a1.25 1.25 0 1 1 1.25 1.25A1.25 1.25 0 0 1 3.25 12Zm5.25 1.25A1.25 1.25 0 1 1 9.75 12a1.25 1.25 0 0 1-1.25 1.25Z" fill="currentColor" data-v-bc17fac9></path><path d="M22.5 16.5h-21A1.5 1.5 0 0 0 0 18v3a1.5 1.5 0 0 0 1.5 1.5h21A1.5 1.5 0 0 0 24 21v-3a1.5 1.5 0 0 0-1.5-1.5Zm-19.25 3a1.25 1.25 0 1 1 1.25 1.25 1.25 1.25 0 0 1-1.25-1.25Zm5.25 1.25a1.25 1.25 0 1 1 1.25-1.25 1.25 1.25 0 0 1-1.25 1.25Z" fill="currentColor" data-v-bc17fac9></path></g></svg><span data-v-bc17fac9>CDN</span></a><a class="start-item" href="https://github.com/scalar/scalar/blob/main/packages/api-reference/README.md#vuejs" target="_blank" data-v-bc17fac9><svg height="170" viewBox="0 0 196.3 170" width="196.3" xmlns="http://www.w3.org/2000/svg" data-v-bc17fac9><g fill="currentColor" fill-rule="nonzero" data-v-bc17fac9><polygon points="39.23 0 0 0 2.9450761 5.1010782 98.16 170.02 196.32 0 157.06 0 98.16 102.01 42.175701 5.0991171" data-v-bc17fac9></polygon><polygon points="75.5 2.009956e-14 0 2.009956e-14 2.94 5.1 78.44871 5.1 98.16 39.26 117.87937 5.1 193.38 5.1 196.325 0 120.82 7.8065636e-15 114.97322 2.009956e-14 98.16 29.037153 81.35 2.009956e-14" data-v-bc17fac9></polygon></g></svg><span data-v-bc17fac9>Vue</span></a><a class="start-item" href="https://github.com/scalar/scalar/blob/main/packages/api-reference-react/README.md#usage" target="_blank" data-v-bc17fac9><svg height="23.3" viewBox="0 0 22 23.3" width="22" xmlns="http://www.w3.org/2000/svg" data-v-bc17fac9><g fill="none" fill-rule="evenodd" data-v-bc17fac9><circle cx="11" cy="11.6" fill="currentColor" fill-rule="nonzero" r="2" data-v-bc17fac9></circle><g stroke="currentColor" data-v-bc17fac9><ellipse cx="11" cy="11.6" rx="11" ry="4.2" data-v-bc17fac9></ellipse><ellipse cx="11" cy="11.6" rx="11" ry="4.2" transform="rotate(60 11 11.6)" data-v-bc17fac9></ellipse><ellipse cx="11" cy="11.6" rx="11" ry="4.2" transform="rotate(120 11 11.6)" data-v-bc17fac9></ellipse></g></g></svg><span data-v-bc17fac9>React</span></a></div>', 1)),
        createBaseVNode("div", Z, [
          a18[4] || (a18[4] = createBaseVNode("p", { class: "start-h2" }, "THEMING", -1)),
          (openBlock(), createElementBlock(Fragment, null, renderList(m30, (t7) => createBaseVNode("div", {
            key: t7,
            class: normalizeClass(["start-item", { "start-item-active": t7 === s15.theme }]),
            onClick: (F4) => s15.$emit("changeTheme", { id: t7, label: unref(themeLabels)[t7] })
          }, toDisplayString(unref(themeLabels)[t7]), 11, _9)), 64))
        ])
      ]),
      a18[6] || (a18[6] = createStaticVNode('<p class="start-h1" data-v-bc17fac9>Features</p><ul class="start-ul" data-v-bc17fac9><li data-v-bc17fac9><p class="start-h3" data-v-bc17fac9>Customize</p> Bring your typography &amp; color palettes, or use our themes! </li><li data-v-bc17fac9><p class="start-h3" data-v-bc17fac9>Testing</p> A deeply integrated Rest API Client (Also Free &amp; Open-Source) </li><li data-v-bc17fac9><p class="start-h3" data-v-bc17fac9>Search</p> Fully integrated Search (Using fuse.js) </li><li data-v-bc17fac9><p class="start-h3" data-v-bc17fac9>Hosting</p> Free subdomain hosting on https://apidocumentation.com </li><li data-v-bc17fac9><p class="start-h3" data-v-bc17fac9>OpenAPI &amp; Swagger</p> Support for OpenAPI 3.1, OpenAPI 3.0, and Swagger 2.0 </li><li data-v-bc17fac9><p class="start-h3" data-v-bc17fac9>Code Samples</p> Code samples to show off your API in most popular languages </li></ul>', 2))
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/components/GettingStarted.vue.js
var e3 = s4(P2, [["__scopeId", "data-v-bc17fac9"]]);

// node_modules/@scalar/api-reference/dist/components/Lazy/lazyBus.js
var e4 = Symbol();
var r = useEventBus(e4);
var m7 = ref(false);

// node_modules/@scalar/helpers/dist/dom/scroll-to-id.js
var scrollToId = async (id, focus) => {
  const scrollToElement = (element2) => {
    element2.scrollIntoView();
    if (focus) {
      element2.focus();
    }
  };
  const element = document.getElementById(id);
  if (element) {
    scrollToElement(element);
    return;
  }
  const stopTime = Date.now() + 1e3;
  const tryScroll = () => {
    const element2 = document.getElementById(id);
    if (element2) {
      scrollToElement(element2);
      return;
    }
    if (Date.now() < stopTime) {
      requestAnimationFrame(tryScroll);
    }
  };
  requestAnimationFrame(tryScroll);
};

// node_modules/@scalar/api-reference/dist/libs/markdown.js
var s5 = (n8, e16) => n8.map((t7) => ({
  ...t7,
  slug: e16.slug(t7.value)
}));
function i3(n8) {
  const e16 = new BananaSlug(), t7 = getHeadings(n8);
  return s5(t7, e16);
}
var l2 = (n8) => {
  const e16 = Math.min(...n8.map((t7) => t7.depth));
  return e16 >= 1 && e16 <= 6 ? e16 : 1;
};

// node_modules/@scalar/api-reference/dist/features/traverse-schema/helpers/traverse-description.js
var f3 = "introduction";
var v3 = (n8, l6, u15) => {
  var i17;
  if (!(n8 != null && n8.trim()))
    return [];
  const h21 = i3(n8), o8 = l2(h21), r12 = [];
  let s15 = null;
  if (n8 && !n8.trim().startsWith("#")) {
    const e16 = {
      depth: 1,
      value: "Introduction",
      slug: f3
    }, t7 = u15(e16), a18 = e16.value;
    r12.push({
      id: t7,
      title: a18
    }), l6.set(t7, a18);
  }
  for (const e16 of h21) {
    if (e16.depth !== o8 && e16.depth !== o8 + 1)
      continue;
    const t7 = {
      id: u15(e16),
      title: e16.value
    };
    l6.set(t7.id, t7.title), e16.depth === o8 ? (t7.children = [], r12.push(t7), s15 = t7) : s15 && ((i17 = s15.children) == null || i17.push(t7));
  }
  return r12;
};

// node_modules/@scalar/api-reference/dist/features/traverse-schema/helpers/get-tag.js
var r2 = (g6, e16) => {
  let t7 = g6.get(e16);
  return t7 || (t7 = { entries: [], tag: { name: e16 } }, g6.set(e16, t7)), t7;
};

// node_modules/@scalar/api-reference/dist/features/traverse-schema/helpers/traverse-paths.js
var x3 = (r12, s15, e16 = "Unknown", c14, f19, h21) => {
  var t7;
  const i17 = h21({ ...r12, method: s15, path: e16 }, c14), n8 = (t7 = r12.summary) != null && t7.trim() ? r12.summary : e16;
  return f19.set(i17, n8), {
    id: i17,
    title: n8,
    path: e16,
    method: s15,
    operation: r12
  };
};
var O3 = (r12, s15, e16, c14) => {
  Object.entries(r12.paths ?? {}).forEach(([f19, h21]) => {
    Object.entries(h21 ?? {}).forEach(([n8, t7]) => {
      var l6, E11;
      if (!(t7["x-internal"] || t7["x-scalar-ignore"] || !httpMethods.has(n8)))
        if ((l6 = t7.tags) != null && l6.length)
          t7.tags.forEach((u15) => {
            var g6;
            const { tag: y10 } = r2(s15, u15);
            (g6 = s15.get(u15)) == null || g6.entries.push(x3(t7, n8, f19, y10, e16, c14));
          });
        else {
          const { tag: u15 } = r2(s15, "default");
          (E11 = s15.get("default")) == null || E11.entries.push(x3(t7, n8, f19, u15, e16, c14));
        }
    });
  });
};

// node_modules/@scalar/api-reference/dist/features/traverse-schema/helpers/traverse-schemas.js
var h5 = (e16, s15 = "Unkown", c14, i17, t7) => {
  const o8 = i17({ name: s15 }, t7), r12 = "title" in e16 && typeof e16.title == "string" ? e16.title : s15;
  return c14.set(o8, r12), {
    id: o8,
    title: r12,
    name: s15,
    schema: e16
  };
};
var p3 = (e16, s15, c14, i17) => {
  var r12, g6;
  const t7 = ((r12 = e16.components) == null ? void 0 : r12.schemas) ?? {}, o8 = [];
  for (const n8 in t7)
    t7[n8]["x-internal"] || t7[n8]["x-scalar-ignore"] || !Object.hasOwn(t7, n8) || ((g6 = t7[n8]["x-tags"]) != null && g6.length ? t7[n8]["x-tags"].forEach((a18) => {
      var f19;
      const { tag: l6 } = r2(s15, a18);
      (f19 = s15.get(a18)) == null || f19.entries.push(h5(t7[n8], n8, c14, i17, l6));
    }) : o8.push(h5(t7[n8], n8, c14, i17)));
  return o8;
};

// node_modules/@scalar/api-reference/dist/features/traverse-schema/helpers/traverse-tags.js
var u2 = (n8, o8, m30, c14, s15 = false) => {
  const i17 = m30(n8), d24 = n8["x-displayName"] || n8.name || "Untitled Tag";
  return o8.set(i17, d24), {
    id: i17,
    title: d24,
    tag: n8,
    children: c14,
    isGroup: s15
  };
};
var p4 = (n8, o8, m30, { getTagId: c14, tagsSorter: s15, operationsSorter: i17 }) => {
  const d24 = n8.includes("default"), l6 = d24 ? n8.filter((a18) => a18 !== "default") : n8;
  return s15 === "alpha" ? l6.sort((a18, r12) => {
    const h21 = r2(o8, a18).tag["x-displayName"] || a18 || "Untitle Tag", t7 = r2(o8, r12).tag["x-displayName"] || r12 || "Untitled Tag";
    return h21.localeCompare(t7);
  }) : typeof s15 == "function" && l6.sort((a18, r12) => s15(r2(o8, a18).tag, r2(o8, r12).tag)), d24 && l6.push("default"), l6.flatMap((a18) => {
    const { tag: r12, entries: h21 } = r2(o8, a18);
    return r12["x-internal"] || r12["x-scalar-ignore"] ? [] : (i17 === "alpha" ? h21.sort((t7, e16) => "method" in t7 && "method" in e16 ? t7.title.localeCompare(e16.title) : 0) : i17 === "method" ? h21.sort((t7, e16) => "method" in t7 && "method" in e16 ? t7.method.localeCompare(e16.method) : 0) : typeof i17 == "function" && h21.sort((t7, e16) => {
      if (!("method" in t7) || !("method" in e16))
        return 0;
      const x12 = "path" in t7 ? t7.path : t7.name, y10 = "path" in e16 ? e16.path : e16.name, g6 = "operation" in t7 ? t7.operation : t7.webhook, T9 = "operation" in e16 ? e16.operation : e16.webhook;
      return i17(
        { method: t7.method, httpVerb: t7.method, path: x12, operation: g6 },
        { method: e16.method, httpVerb: e16.method, path: y10, operation: T9 }
      );
    }), h21.length ? u2(r12, m30, c14, h21) : []);
  });
};
var k5 = (n8, o8, m30, { getTagId: c14, tagsSorter: s15, operationsSorter: i17 }) => {
  if (n8["x-tagGroups"])
    return n8["x-tagGroups"].flatMap((r12) => {
      const h21 = p4(r12.tags ?? [], o8, m30, {
        getTagId: c14,
        tagsSorter: s15,
        operationsSorter: i17
      });
      return h21.length ? u2(r12, m30, c14, h21, true) : [];
    });
  const d24 = Array.from(o8.keys()), l6 = p4(d24, o8, m30, { getTagId: c14, tagsSorter: s15, operationsSorter: i17 });
  return l6.length === 1 && l6[0].title === "default" ? l6[0].children ?? [] : l6;
};

// node_modules/@scalar/api-reference/dist/features/traverse-schema/helpers/traverse-webhooks.js
var i4 = (e16, r12, t7 = "Unknown", n8, c14, h21) => {
  const g6 = e16.summary || t7, o8 = c14({ name: t7, method: r12 }, h21);
  return n8.set(o8, g6), {
    id: o8,
    title: g6,
    name: t7,
    webhook: e16,
    method: r12
  };
};
var x4 = (e16, r12, t7, n8) => {
  const c14 = [];
  return Object.entries(e16.webhooks ?? {}).forEach(([h21, g6]) => {
    Object.entries(g6 ?? {}).forEach(([u15, s15]) => {
      var f19;
      s15["x-internal"] || s15["x-scalar-ignore"] || ((f19 = s15.tags) != null && f19.length ? s15.tags.forEach((E11) => {
        var b10;
        const { tag: k13 } = r2(r12, E11);
        (b10 = r12.get(E11)) == null || b10.entries.push(i4(s15, u15, h21, t7, n8, k13));
      }) : c14.push(i4(s15, u15, h21, t7, n8)));
    });
  }), c14;
};

// node_modules/@scalar/api-reference/dist/features/traverse-schema/helpers/traverse-document.js
var x5 = (e16, { config: a18, getHeadingId: v13, getOperationId: c14, getWebhookId: i17, getModelId: n8, getTagId: f19 }) => {
  var h21, l6, m30;
  const r12 = /* @__PURE__ */ new Map(), t7 = new Map(
    ((h21 = e16.tags) == null ? void 0 : h21.map((s15) => [s15.name ?? "Untitled Tag", { tag: s15, entries: [] }])) ?? []
  );
  O3(e16, t7, r12, c14);
  const o8 = v3((l6 = e16.info) == null ? void 0 : l6.description, r12, v13), p25 = x4(e16, t7, r12, i17), g6 = k5(e16, t7, r12, {
    getTagId: f19,
    tagsSorter: a18.value.tagsSorter,
    operationsSorter: a18.value.operationsSorter
  });
  if (o8.push(...g6), p25.length && o8.push({
    id: i17(),
    isWebhooks: true,
    title: "Webhooks",
    children: p25
  }), !a18.value.hideModels && ((m30 = e16.components) != null && m30.schemas)) {
    const s15 = p3(e16, t7, r12, n8);
    s15.length && o8.push({
      id: n8(),
      title: "Models",
      children: s15
    });
  }
  return { entries: o8, titles: r12 };
};

// node_modules/@scalar/api-reference/dist/features/sidebar/helpers/create-sidebar.js
var h6 = (i17, o8) => {
  const r12 = reactive({}), a18 = ref(false), n8 = (e16) => r12[e16] = !r12[e16], c14 = (e16, t7) => r12[e16] = t7, m30 = (e16, t7) => {
    const s15 = o8.getSectionId(e16);
    if (s15 && s15 !== e16)
      if (r12[s15])
        scrollToId(e16, t7);
      else {
        const f19 = r.on((u15) => {
          u15.loaded === e16 && (scrollToId(e16, t7), f19());
        });
        c14(s15, true);
      }
  }, d24 = computed(() => {
    const e16 = x5(i17.value, o8);
    return o8.config.value.defaultOpenAllTags && e16.entries.forEach((t7) => c14(t7.id, true)), e16;
  });
  return {
    collapsedSidebarItems: r12,
    isSidebarOpen: a18,
    items: d24,
    scrollToOperation: m30,
    setCollapsedSidebarItem: c14,
    toggleCollapsedSidebarItem: n8
  };
};

// node_modules/@scalar/api-reference/dist/features/sidebar/hooks/useSidebar.js
var i5 = Symbol();
var l3 = (e16, r12) => {
  if (e16 && r12) {
    const a18 = h6(e16, r12);
    return provide(i5, a18), a18;
  }
  const o8 = inject(i5);
  if (!o8)
    throw new Error(
      "useSidebar() was called without a collection and no sidebar instance was found. Make sure to call useSidebar(collection) in a parent component first."
    );
  return o8;
};

// node_modules/@scalar/api-reference/dist/components/MobileHeader.vue2.js
var p5 = { class: "references-mobile-header t-doc__header" };
var b2 = { class: "references-mobile-breadcrumbs" };
var _10 = { class: "references-mobile-header-actions" };
var M = defineComponent({
  __name: "MobileHeader",
  props: {
    breadcrumb: {}
  },
  setup(f19) {
    const { isSidebarOpen: e16 } = l3();
    return (r12, n8) => (openBlock(), createElementBlock("div", p5, [
      createVNode(unref(S), {
        icon: unref(e16) ? "Close" : "Menu",
        label: unref(e16) ? "Close Menu" : "Open Menu",
        size: "md",
        onClick: n8[0] || (n8[0] = (h21) => e16.value = !unref(e16))
      }, null, 8, ["icon", "label"]),
      createBaseVNode("span", b2, toDisplayString(r12.breadcrumb), 1),
      createBaseVNode("div", _10, [
        renderSlot(r12.$slots, "actions", {}, void 0, true)
      ])
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/components/MobileHeader.vue.js
var m8 = s4(M, [["__scopeId", "data-v-6616d485"]]);

// node_modules/@scalar/api-reference/dist/hooks/useConfig.js
var r3 = Symbol();
var f4 = () => inject(
  r3,
  computed(() => apiReferenceConfigurationSchema.parse({}))
);

// node_modules/@scalar/api-reference/dist/hooks/useNavState.js
var P3 = Symbol();
var U = ref(false);
var x6 = ref("");
var k6 = ref("");
var T = (f19) => {
  const { isIntersectionEnabled: p25, hash: r12, hashPrefix: u15 } = inject(P3, {
    isIntersectionEnabled: U,
    hash: x6,
    hashPrefix: k6
  }), t7 = f19 ?? f4(), c14 = (e16) => {
    var a18;
    if (!t7.value.pathRouting)
      return "";
    const n8 = new RegExp("^" + ((a18 = t7.value.pathRouting) == null ? void 0 : a18.basePath) + "/?");
    return decodeURIComponent(e16.replace(n8, ""));
  }, v13 = (e16 = r12.value) => {
    var h21;
    const n8 = (h21 = e16.match(/(tag\/[^/]+)/)) == null ? void 0 : h21[0], a18 = e16.startsWith("model") ? "models" : "", o8 = e16.startsWith("webhook") ? "webhooks" : "";
    return n8 || a18 || o8;
  }, g6 = () => t7.value.pathRouting ? c14(window.location.pathname) : (
    // Must remove the prefix from the hash as the internal hash value should be pure
    decodeURIComponent(window.location.hash.replace(/^#/, "")).slice(u15.value.length)
  ), m30 = () => r12.value = g6(), $6 = (e16, n8 = window.location.href) => {
    const a18 = new URL(n8);
    t7.value.pathRouting ? a18.pathname = combineUrlAndPath(t7.value.pathRouting.basePath, e16) : a18.hash = u15.value + e16, r12.value = e16, window.history.replaceState({}, "", a18);
  }, I7 = (e16, n8 = window.location.href, a18 = window.location.search) => {
    const o8 = new URL(n8);
    return t7.value.pathRouting ? o8.pathname = combineUrlAndPath(t7.value.pathRouting.basePath, e16) : o8.hash = u15.value + e16, o8.search = a18, o8.toString();
  }, w13 = (e16 = r12.value) => `${u15.value}${e16}`, S8 = (e16) => typeof t7.value.generateHeadingSlug == "function" ? `${t7.value.generateHeadingSlug(e16)}` : e16.slug ? `description/${e16.slug}` : "", R8 = (e16, n8) => {
    if (!(e16 != null && e16.name))
      return "models";
    const a18 = n8 ? `${s15(n8)}/` : "";
    return typeof t7.value.generateModelSlug == "function" ? `${a18}model/${t7.value.generateModelSlug(e16)}` : `${a18}model/${slug(e16.name)}`;
  }, s15 = (e16) => typeof t7.value.generateTagSlug == "function" ? `tag/${t7.value.generateTagSlug(e16)}` : `tag/${slug(e16.name ?? "")}`;
  return {
    hash: r12,
    /** Sets the prefix for the hash */
    setHashPrefix: (e16) => {
      u15.value = e16;
    },
    /**
     * Gets the full hash with the prefix
     * @param hashTarget The hash to target with the return
     * @returns The full hash
     */
    getFullHash: w13,
    /**
     * Gets the hashed url with the prefix
     * @param replacementHash The hash to replace the current hash with
     * @param url The url to get the hashed url from
     * @returns The hashed url
     */
    getHashedUrl: I7,
    /**
     * Replaces the URL state with the new url and hash
     * Replacement is used so that hash changes don't trigger the url hash watcher and cause a scroll
     */
    replaceUrlState: $6,
    getReferenceId: g6,
    getWebhookId: (e16, n8) => {
      if (!(e16 != null && e16.name))
        return "webhooks";
      const a18 = n8 ? `${s15(n8)}/` : "";
      return typeof t7.value.generateWebhookSlug == "function" ? `${a18}webhook/${t7.value.generateWebhookSlug(e16)}` : `${a18}webhook/${e16.method}/${slug(e16.name)}`;
    },
    getModelId: R8,
    getHeadingId: S8,
    getOperationId: (e16, n8) => typeof t7.value.generateOperationSlug == "function" ? `${s15(n8)}/${t7.value.generateOperationSlug({
      path: e16.path,
      operationId: e16.operationId,
      method: e16.method,
      summary: e16.summary
    })}` : `${s15(n8)}/${e16.method}${e16.path}`,
    getPathRoutingId: c14,
    getSectionId: v13,
    getTagId: s15,
    isIntersectionEnabled: p25,
    updateHash: m30
  };
};

// node_modules/@scalar/api-reference/dist/libs/download.js
var v4 = Symbol("download");
var L2 = useEventBus(v4);
function E3(e16, n8) {
  return n8 && !isJsonString(e16) ? toJson(normalize(e16)) : !n8 && isJsonString(e16) ? toYaml(normalize(e16)) : e16;
}
function y4() {
  try {
    return new MouseEvent("click", {
      bubbles: true,
      cancelable: true,
      view: window
    });
  } catch {
    return new MouseEvent("click", {
      bubbles: true,
      cancelable: true
    });
  }
}
function R(e16, n8, c14) {
  const t7 = c14 === "json" || !isDefined(c14) && isJsonString(e16), l6 = E3(e16, t7), i17 = t7 ? ".json" : ".yaml", u15 = t7 ? "application/json" : "application/x-yaml", m30 = n8 ? n8 + i17 : "openapi" + i17, d24 = new Blob([l6], { type: u15 }), s15 = URL.createObjectURL(d24), o8 = document.createElement("a");
  o8.href = s15, o8.download = m30, o8.dispatchEvent(y4()), setTimeout(() => {
    window.URL.revokeObjectURL(s15), o8.remove();
  }, 100);
}

// node_modules/@scalar/api-reference/dist/features/document-source/hooks/useDocumentFetcher.js
function y5({
  configuration: r12
}) {
  const t7 = ref("");
  return watch(
    () => toValue(r12),
    async (n8) => {
      var o8;
      if (!n8)
        return;
      const e16 = await a2(n8, (o8 = toValue(r12)) == null ? void 0 : o8.proxyUrl);
      typeof e16 == "string" && (t7.value = e16.trim());
    },
    { immediate: true, deep: true }
  ), {
    originalDocument: t7
  };
}
var a2 = async ({ url: r12, content: t7 }, n8) => {
  if (r12 && !t7)
    try {
      return await fetchDocument(r12, n8);
    } catch (o8) {
      console.error("Failed to fetch OpenAPI document from URL:", o8);
    }
  const e16 = typeof t7 == "function" ? t7() : t7;
  if (typeof e16 == "string")
    return e16;
  if (typeof e16 == "object")
    return prettyPrintJson(e16);
};

// node_modules/@scalar/api-reference/dist/features/document-source/hooks/useDocumentSource.js
function C5({
  originalDocument: c14,
  dereferencedDocument: o8,
  configuration: i17
}) {
  const { originalDocument: d24 } = y5({
    configuration: i17
  }), s15 = computed(() => c14 ? toValue(c14) : toValue(d24)), n8 = ref(""), h21 = computed(() => o8 ? toValue(o8) : toValue(u15)), u15 = ref({
    openapi: "3.1.0",
    info: {
      title: "",
      version: ""
    },
    paths: {}
  });
  watch(
    () => toValue(s15),
    async (a18) => {
      if (!a18)
        return;
      const e16 = normalize(a18);
      if (e16 === void 0) {
        console.error("Failed to parse the OpenAPI document:", a18);
        return;
      }
      if (n8.value = typeof e16 == "object" && (e16.openapi || e16.swagger) || "", o8)
        return;
      const S8 = !n8.value.startsWith("3.1") ? (
        // Upgrade needed
        upgrade(e16).specification
      ) : (
        // Skip the upgrade
        e16
      ), A3 = await measureAsync("dereference", async () => {
        const { schema: p25, errors: r12 } = await dereference(S8);
        return r12 != null && r12.length && console.warn(
          `Please open an issue on https://github.com/scalar/scalar
`,
          `Scalar OpenAPI Parser Warning:
`,
          r12
        ), p25 === void 0 && console.error("Failed to dereference the OpenAPI document", r12), p25;
      });
      u15.value = A3;
    },
    { immediate: true }
  );
  const m30 = ge({
    useLocalStorage: false,
    ...toValue(i17) ?? apiReferenceConfigurationSchema.parse({})
  }), g6 = Y(m30);
  return {
    originalDocument: s15,
    originalOpenApiVersion: n8,
    dereferencedDocument: h21,
    workspaceStore: m30,
    activeEntitiesStore: g6
  };
}

// node_modules/@scalar/api-reference/dist/features/download-link/openapi-version-symbol.js
var o = Symbol("openApiVersion");

// node_modules/@scalar/api-reference/dist/plugins/plugin-manager.js
var r4 = ({ plugins: o8 = [] }) => {
  const s15 = /* @__PURE__ */ new Map();
  return o8.forEach((e16) => {
    const n8 = e16();
    s15.set(n8.name, n8);
  }), {
    /**
     * Get all extensions with the given name from registered plugins
     */
    getSpecificationExtensions: (e16) => {
      const n8 = [];
      for (const i17 of s15.values())
        for (const t7 of i17.extensions)
          t7.name === e16 && n8.push(t7);
      return n8;
    }
  };
};

// node_modules/@scalar/api-reference/dist/plugins/hooks/usePluginManager.js
var t3 = Symbol();
var i6 = () => {
  const r12 = inject(t3);
  return r12 || r4({});
};

// node_modules/@scalar/helpers/dist/http/normalize-http-method.js
var DEFAULT_REQUEST_METHOD = "get";
var normalizeHttpMethod = (method) => {
  if (typeof method !== "string") {
    console.warn(`Request method is not a string. Using ${DEFAULT_REQUEST_METHOD} as the default.`);
    return DEFAULT_REQUEST_METHOD;
  }
  const normalizedMethod = method.trim().toLowerCase();
  if (!isHttpMethod(normalizedMethod)) {
    console.warn(
      `${method || "Request method"} is not a valid request method. Using ${DEFAULT_REQUEST_METHOD} as the default.`
    );
    return DEFAULT_REQUEST_METHOD;
  }
  return normalizedMethod;
};

// node_modules/@scalar/api-reference/dist/components/HttpMethod/HttpMethod.vue.js
var z2 = defineComponent({
  __name: "HttpMethod",
  props: {
    as: {},
    property: {},
    short: { type: Boolean },
    method: {}
  },
  setup(p25) {
    const t7 = p25, e16 = computed(
      () => getHttpMethodInfo(String(t7.method || ""))
    ), n8 = computed(() => normalizeHttpMethod(t7.method));
    return (o8, v13) => (openBlock(), createBlock(resolveDynamicComponent(o8.as ?? "span"), {
      class: "uppercase",
      style: normalizeStyle({ [o8.property || "color"]: e16.value.colorVar })
    }, {
      default: withCtx(() => [
        renderSlot(o8.$slots, "default"),
        createTextVNode(" " + toDisplayString(o8.short ? e16.value.short : n8.value), 1)
      ]),
      _: 3
    }, 8, ["style"]));
  }
});

// node_modules/@scalar/api-reference/dist/features/sidebar/components/SidebarHttpBadge.vue2.js
var c4 = defineComponent({
  __name: "SidebarHttpBadge",
  props: {
    method: {},
    active: { type: Boolean }
  },
  setup(p25) {
    return (e16, m30) => (openBlock(), createBlock(unref(z2), {
      class: normalizeClass([
        "sidebar-heading-type",
        `sidebar-heading-type--${e16.method.toLowerCase()}`,
        { "sidebar-heading-type-active": e16.active }
      ]),
      method: e16.method,
      property: "--method-color",
      short: ""
    }, {
      default: withCtx(() => [
        renderSlot(e16.$slots, "default", {}, void 0, true)
      ]),
      _: 3
    }, 8, ["class", "method"]));
  }
});

// node_modules/@scalar/api-reference/dist/features/sidebar/components/SidebarHttpBadge.vue.js
var e5 = s4(c4, [["__scopeId", "data-v-522f945c"]]);

// node_modules/@scalar/api-reference/dist/features/sidebar/components/SidebarElement.vue2.js
var P4 = ["id"];
var z3 = {
  key: 0,
  class: "sidebar-heading-chevron"
};
var j = ["aria-expanded"];
var F = ["href", "tabindex"];
var G = { class: "sidebar-heading-link-title" };
var W2 = {
  key: 0,
  class: "sidebar-heading-link-method"
};
var q2 = {
  key: 1,
  class: "action-menu"
};
var oe = defineComponent({
  __name: "SidebarElement",
  props: {
    id: {},
    item: {},
    isActive: { type: Boolean },
    hasChildren: { type: Boolean },
    open: { type: Boolean }
  },
  emits: ["toggleOpen"],
  setup(C12, { emit: y10 }) {
    const o8 = C12, p25 = y10, { getFullHash: u15, isIntersectionEnabled: l6, replaceUrlState: w13 } = T(), i17 = f4(), c14 = async () => {
      l6.value = false, o8.hasChildren && p25("toggleOpen"), await sleep(100), l6.value = true;
    }, S8 = () => {
      if (i17.value.pathRouting)
        return combineUrlAndPath(i17.value.pathRouting.basePath, o8.item.id);
      if (typeof window < "u") {
        const e16 = new URL(window.location.href);
        return e16.hash = u15(o8.item.id), `${e16.search}${e16.hash}`;
      }
      return `#${u15(o8.item.id)}`;
    }, B8 = async (e16) => {
      var t7, f19;
      (f19 = (t7 = i17.value).onSidebarClick) == null || f19.call(t7, o8.item.id), i17.value.pathRouting && (e16.preventDefault(), o8.hasChildren && p25("toggleOpen"), p25("toggleOpen"), l6.value = false, w13(o8.item.id), scrollToId(o8.item.id), await sleep(100), l6.value = true);
    };
    return (e16, t7) => (openBlock(), createElementBlock("li", {
      id: e16.id,
      class: "sidebar-group-item"
    }, [
      createBaseVNode("div", {
        class: normalizeClass(["sidebar-heading", {
          "sidebar-group-item__folder": e16.hasChildren,
          active_page: e16.isActive,
          deprecated: "operation" in e16.item && unref(isOperationDeprecated)(
            e16.item.operation
          )
        }]),
        onClick: c14
      }, [
        e16.hasChildren && !unref(i17).defaultOpenAllTags ? (openBlock(), createElementBlock("p", z3, [
          createBaseVNode("button", {
            "aria-expanded": e16.open,
            class: "toggle-nested-icon",
            type: "button",
            onClick: withModifiers(c14, ["stop"])
          }, [
            createVNode(unref($2), { open: e16.open }, {
              label: withCtx(() => [
                createTextVNode(toDisplayString(e16.open ? "Collapse" : "Expand") + " " + toDisplayString(e16.item.title), 1)
              ]),
              _: 1
            }, 8, ["open"])
          ], 8, j),
          t7[0] || (t7[0] = createTextVNode("   "))
        ])) : createCommentVNode("", true),
        createBaseVNode("a", {
          class: "sidebar-heading-link",
          href: S8(),
          tabindex: e16.hasChildren ? -1 : 0,
          onClick: B8
        }, [
          createBaseVNode("p", G, toDisplayString(e16.item.title), 1),
          "method" in e16.item && !e16.hasChildren ? (openBlock(), createElementBlock("p", W2, [
            t7[1] || (t7[1] = createTextVNode("   ")),
            t7[2] || (t7[2] = createBaseVNode("span", { class: "sr-only" }, "HTTP Method: ", -1)),
            createVNode(e5, {
              class: "min-w-9.75 justify-end text-right",
              active: e16.isActive,
              method: e16.item.method
            }, {
              default: withCtx(() => [
                "webhook" in e16.item ? (openBlock(), createBlock(unref(_7), {
                  key: 0,
                  weight: "bold",
                  style: normalizeStyle({
                    color: unref(getHttpMethodInfo)(e16.item.method).colorVar
                  })
                }, null, 8, ["style"])) : createCommentVNode("", true)
              ]),
              _: 1
            }, 8, ["active", "method"])
          ])) : createCommentVNode("", true)
        ], 8, F)
      ], 2),
      e16.open ? renderSlot(e16.$slots, "default", { key: 0 }, void 0, true) : createCommentVNode("", true),
      e16.$slots["action-menu"] ? (openBlock(), createElementBlock("div", q2, [
        renderSlot(e16.$slots, "action-menu", {}, void 0, true)
      ])) : createCommentVNode("", true)
    ], 8, P4));
  }
});

// node_modules/@scalar/api-reference/dist/features/sidebar/components/SidebarElement.vue.js
var a3 = s4(oe, [["__scopeId", "data-v-c3e6d407"]]);

// node_modules/@scalar/api-reference/dist/features/sidebar/components/SidebarGroup.vue2.js
var p6 = defineComponent({
  __name: "SidebarGroup",
  props: {
    level: {}
  },
  setup(a18) {
    return (e16, n8) => (openBlock(), createElementBlock("ul", {
      class: "sidebar-group sidebar-indent-nested",
      style: normalizeStyle({ "--scalar-sidebar-level": e16.level })
    }, [
      renderSlot(e16.$slots, "default", {}, void 0, true)
    ], 4));
  }
});

// node_modules/@scalar/api-reference/dist/features/sidebar/components/SidebarGroup.vue.js
var m9 = s4(p6, [["__scopeId", "data-v-a0601651"]]);

// node_modules/@scalar/api-reference/dist/features/sidebar/components/Sidebar.vue2.js
var R2 = { class: "sidebar" };
var U2 = ["aria-label"];
var j2 = { class: "sidebar-group-title" };
var q3 = -160;
var X = defineComponent({
  __name: "Sidebar",
  props: {
    title: {}
  },
  setup(x12) {
    const { hash: d24, isIntersectionEnabled: I7 } = T(), { items: O11, toggleCollapsedSidebarItem: _22, collapsedSidebarItems: g6 } = l3(), f19 = ref(null), l6 = ref(true);
    watch(d24, (e16) => {
      !I7.value || l6.value || typeof window > "u" || E11(e16);
    });
    const E11 = (e16) => {
      var t7, s15, S8, k13;
      const r12 = document.getElementById(`sidebar-${e16}`);
      if (!r12 || !f19.value)
        return;
      let i17 = q3;
      r12.getAttribute("data-sidebar-type") === "heading" ? i17 += r12.offsetTop + ((t7 = r12.getElementsByClassName("sidebar-heading")) == null ? void 0 : t7[0]).offsetHeight : i17 += r12.offsetTop + (((s15 = r12.parentElement) == null ? void 0 : s15.offsetTop) ?? 0) + (((k13 = (S8 = r12.parentElement) == null ? void 0 : S8.parentElement) == null ? void 0 : k13.offsetTop) ?? 0), f19.value.scrollTo({ top: i17, behavior: "smooth" });
    }, B8 = (e16) => {
      if (!f19.value)
        return;
      const r12 = new MutationObserver((i17, t7) => {
        document.getElementById(`sidebar-${e16}`) && (E11(e16), l6.value = false, t7.disconnect());
      });
      return r12.observe(f19.value, {
        childList: true,
        subtree: true
      }), r12;
    }, v13 = (e16) => d24.value === e16 ? true : d24.value.includes("/description/") ? d24.value.split("/description/")[0] === e16 : false;
    onMounted(() => {
      const e16 = B8(d24.value);
      d24.value || setTimeout(() => l6.value = false, 300), onUnmounted(() => {
        e16 == null || e16.disconnect();
      });
    });
    const b10 = (e16) => {
      var r12;
      return "children" in e16 && (((r12 = e16.children) == null ? void 0 : r12.length) ?? 0) > 0;
    };
    return (e16, r12) => (openBlock(), createElementBlock("div", R2, [
      renderSlot(e16.$slots, "sidebar-start", {}, void 0, true),
      createBaseVNode("nav", {
        ref_key: "scrollerEl",
        ref: f19,
        "aria-label": `Table of contents for ${e16.title}`,
        class: "sidebar-pages custom-scroll custom-scroll-self-contain-overflow"
      }, [
        createVNode(m9, { level: 0 }, {
          default: withCtx(() => [
            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(O11).entries, (i17) => (openBlock(), createElementBlock(Fragment, {
              key: i17.id
            }, [
              "isGroup" in i17 && i17.isGroup ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
                createBaseVNode("li", j2, toDisplayString(i17.title), 1),
                (openBlock(true), createElementBlock(Fragment, null, renderList(i17.children, (t7) => (openBlock(), createBlock(a3, {
                  key: t7.id,
                  id: `sidebar-${t7.id}`,
                  "data-sidebar-type": "heading",
                  hasChildren: b10(t7),
                  isActive: v13(t7.id),
                  item: t7,
                  open: unref(g6)[t7.id] ?? false,
                  onToggleOpen: async () => {
                    l6.value = true, unref(_22)(t7.id), await unref(sleep)(100), l6.value = false;
                  }
                }, {
                  default: withCtx(() => [
                    b10(t7) ? (openBlock(), createBlock(m9, {
                      key: 0,
                      level: 1
                    }, {
                      default: withCtx(() => [
                        (openBlock(true), createElementBlock(Fragment, null, renderList(t7.children, (s15) => (openBlock(), createBlock(a3, {
                          key: s15.id,
                          id: `sidebar-${s15.id}`,
                          isActive: v13(s15.id),
                          item: s15
                        }, null, 8, ["id", "isActive", "item"]))), 128))
                      ]),
                      _: 2
                    }, 1024)) : createCommentVNode("", true)
                  ]),
                  _: 2
                }, 1032, ["id", "hasChildren", "isActive", "item", "open", "onToggleOpen"]))), 128))
              ], 64)) : (openBlock(), createBlock(a3, {
                key: 1,
                id: `sidebar-${i17.id}`,
                "data-sidebar-type": "heading",
                hasChildren: b10(i17),
                isActive: v13(i17.id),
                item: i17,
                open: unref(g6)[i17.id] ?? false,
                onToggleOpen: async () => {
                  l6.value = true, unref(_22)(i17.id), await unref(sleep)(100), l6.value = false;
                }
              }, {
                default: withCtx(() => [
                  b10(i17) ? (openBlock(), createBlock(m9, {
                    key: 0,
                    level: 1
                  }, {
                    default: withCtx(() => [
                      (openBlock(true), createElementBlock(Fragment, null, renderList(i17.children, (t7) => (openBlock(), createBlock(a3, {
                        key: t7.id,
                        id: `sidebar-${t7.id}`,
                        isActive: v13(t7.id),
                        item: t7
                      }, null, 8, ["id", "isActive", "item"]))), 128))
                    ]),
                    _: 2
                  }, 1024)) : createCommentVNode("", true)
                ]),
                _: 2
              }, 1032, ["id", "hasChildren", "isActive", "item", "open", "onToggleOpen"]))
            ], 64))), 128))
          ]),
          _: 1
        })
      ], 8, U2),
      renderSlot(e16.$slots, "sidebar-end", {}, void 0, true)
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/features/sidebar/components/Sidebar.vue.js
var m10 = s4(X, [["__scopeId", "data-v-7ed79e6b"]]);

// node_modules/@scalar/api-reference/dist/features/Search/helpers/create-fuse-instance.js
function n3() {
  return new Fuse([], {
    // Define searchable fields with weights to prioritize more important matches
    keys: [
      // Highest weight - titles are most descriptive
      { name: "title", weight: 0.7 },
      // Medium weight - helpful but often verbose
      { name: "description", weight: 0.3 },
      // Lowest weight - can be very long and noisy
      { name: "body", weight: 0.2 },
      // High weight - unique identifiers for operations
      { name: "id", weight: 0.6 },
      // Good weight - endpoint paths are searchable
      { name: "path", weight: 0.5 },
      // Medium-high weight - helps with categorization
      { name: "tag", weight: 0.4 },
      // Medium weight - useful for filtering by method
      { name: "method", weight: 0.3 }
    ],
    // Threshold controls how strict the matching is (0.0 = perfect match, 1.0 = very loose)
    // 0.3 allows for some typos and partial matches while maintaining relevance
    threshold: 0.3,
    // Maximum distance between characters that can be matched
    // Higher values allow matches even when characters are far apart in long text
    distance: 100,
    // Include the match score in results for debugging and potential UI enhancements
    includeScore: true,
    // Include detailed match information showing which parts of the text matched
    includeMatches: true,
    // Don't require matches to be at the beginning of strings
    // Makes search more flexible and user-friendly
    ignoreLocation: true,
    // Enable advanced search syntax like 'exact' for exact matches or !exclude for exclusions
    useExtendedSearch: true,
    // Find all possible matches in each item, not just the first one
    // Ensures comprehensive search results
    findAllMatches: true
  });
}

// node_modules/@scalar/openapi-types/dist/helpers/is-dereferenced.js
var isDereferenced = (obj) => typeof obj === "object" && obj !== null && !("$ref" in obj && typeof obj.$ref === "string");

// node_modules/@scalar/api-reference/dist/libs/openapi.js
function d4(i17, s15) {
  var r12, n8;
  let o8 = i17;
  const e16 = (r12 = s15.required) == null ? void 0 : r12.includes(i17);
  o8 += e16 ? " REQUIRED " : " optional ";
  const t7 = getResolvedRef((n8 = s15.properties) == null ? void 0 : n8[i17]);
  return t7 && (o8 += t7.type, t7.description && (o8 += " " + t7.description)), o8;
}
function y6(i17) {
  const s15 = ["Body"], o8 = getResolvedRef(i17 == null ? void 0 : i17.schema), e16 = o8 == null ? void 0 : o8.properties;
  return e16 && Object.keys(e16).forEach((t7) => {
    if (!i17.schema)
      return;
    s15.push(d4(t7, o8));
    const r12 = getResolvedRef(e16[t7]);
    r12.type === "object" && !!r12.properties && r12.properties && Object.keys(r12.properties).forEach((f19) => {
      var p25, u15;
      s15.push(`${f19} ${(u15 = getResolvedRef((p25 = r12.properties) == null ? void 0 : p25[f19])) == null ? void 0 : u15.type}`);
    });
  }), s15;
}
function q4(i17) {
  var s15, o8;
  try {
    const e16 = (o8 = (s15 = getResolvedRef(i17 == null ? void 0 : i17.requestBody)) == null ? void 0 : s15.content) == null ? void 0 : o8["application/json"];
    if (!e16)
      throw new Error("Body not found");
    return y6(e16);
  } catch {
    return false;
  }
}
function a4(i17) {
  var o8, e16;
  if (!i17)
    return {};
  const s15 = (
    // OpenAPI 3.x
    Object.keys(((o8 = i17 == null ? void 0 : i17.components) == null ? void 0 : o8.schemas) ?? {}).length ? (e16 = i17 == null ? void 0 : i17.components) == null ? void 0 : e16.schemas : (
      // Fallback
      {}
    )
  );
  return Object.keys(s15 ?? {}).forEach((t7) => {
    var r12, n8;
    (((r12 = s15[t7]) == null ? void 0 : r12["x-internal"]) === true || ((n8 = s15[t7]) == null ? void 0 : n8["x-scalar-ignore"]) === true) && delete s15[t7];
  }), s15;
}
function v5(i17) {
  const s15 = {
    path: [],
    query: [],
    header: [],
    cookie: [],
    body: [],
    formData: []
  }, o8 = i17.parameters ?? [];
  return o8 && o8.forEach((e16) => {
    isDereferenced(e16) && (typeof e16 == "object" && e16 !== null && "$ref" in e16 || (e16.in === "path" ? s15.path.push(e16) : e16.in === "query" ? s15.query.push(e16) : e16.in === "header" ? s15.header.push(e16) : e16.in === "cookie" ? s15.cookie.push(e16) : e16.in === "body" ? s15.body.push(e16) : e16.in === "formData" && s15.formData.push(e16)));
  }), s15;
}

// node_modules/@scalar/api-reference/dist/features/Search/helpers/create-search-index.js
function c5(i17) {
  const o8 = [];
  function e16(d24) {
    d24.forEach((t7) => {
      h7(t7, o8), "children" in t7 && t7.children && e16(t7.children);
    });
  }
  return e16(i17), o8;
}
function h7(i17, o8) {
  if ("operation" in i17) {
    const e16 = q4(i17.operation) || v5(i17.operation), d24 = typeof e16 != "boolean" ? e16 : null;
    o8.push({
      type: "operation",
      title: i17.title,
      href: `#${i17.id}`,
      id: i17.operation.operationId,
      description: i17.operation.description || "",
      method: i17.method,
      path: i17.path,
      body: d24 || "",
      entry: i17
    });
    return;
  }
  if ("webhook" in i17) {
    o8.push({
      type: "webhook",
      title: i17.title,
      href: `#${i17.id}`,
      description: "Webhook",
      method: i17.method,
      body: i17.webhook.description || "",
      entry: i17
    });
    return;
  }
  if ("schema" in i17) {
    const e16 = "description" in i17.schema && typeof i17.schema.description == "string" ? i17.schema.description : "";
    o8.push({
      type: "model",
      title: i17.title,
      href: `#${i17.id}`,
      description: "Model",
      body: e16,
      entry: i17
    });
    return;
  }
  if ("tag" in i17) {
    o8.push({
      title: i17.title,
      href: `#${i17.id}`,
      description: i17.tag.description || "",
      type: "tag",
      body: "",
      entry: i17
    });
    return;
  }
  if ("isGroup" in i17) {
    o8.push({
      title: i17.title,
      href: `#${i17.id}`,
      description: "Tag Group",
      type: "tag",
      body: "",
      entry: i17
    });
    return;
  }
  if ("isWebhooks" in i17) {
    o8.push({
      type: "heading",
      title: "Webhooks",
      href: `#${i17.id}`,
      description: "Heading",
      body: "",
      entry: i17
    });
    return;
  }
  if (i17.title === "Models") {
    o8.push({
      type: "heading",
      title: "Models",
      href: `#${i17.id}`,
      description: "Heading",
      body: "",
      entry: i17
    });
    return;
  }
  if (i17.title) {
    o8.push({
      type: "heading",
      title: i17.title ?? "",
      description: "Description",
      href: `#${i17.id}`,
      body: "",
      entry: i17
    });
    return;
  }
}

// node_modules/@scalar/api-reference/dist/features/Search/hooks/useSearchIndex.js
var d5 = 25;
function _11(l6) {
  const n8 = n3(), e16 = ref();
  watch(
    l6,
    () => {
      const { entries: r12 } = toValue(l6), c14 = c5(r12);
      n8.setCollection(c14);
    },
    { immediate: true }
  );
  const t7 = ref("");
  watch(t7, (r12) => {
    if (r12.length) {
      v13();
      return;
    }
    o8();
  });
  function o8() {
    t7.value = "", e16.value = void 0, s15.value = [];
  }
  const s15 = ref([]), v13 = () => {
    e16.value = 0, s15.value = n8.search(t7.value, {
      limit: d5
    });
  }, u15 = computed(() => t7.value.length !== 0 ? s15.value : n8._docs.slice(0, d5).map((c14, m30) => ({
    item: c14,
    refIndex: m30
  }))), f19 = computed(
    () => typeof e16.value == "number" ? u15.value[e16.value] : void 0
  );
  return {
    resetSearch: o8,
    selectedIndex: e16,
    selectedSearchResult: f19,
    searchResultsWithPlaceholderResults: u15,
    query: t7
  };
}

// node_modules/@scalar/api-reference/dist/features/Search/components/SearchModal.vue2.js
var ce = { class: "sr-only" };
var de = { class: "inline-flex items-center gap-1" };
var me2 = { class: "sr-only" };
var Re = defineComponent({
  __name: "SearchModal",
  props: {
    modalState: {},
    hideModels: { type: Boolean }
  },
  setup(L5) {
    const f19 = L5, u15 = nanoid(), w13 = `${u15}-search-result`, R8 = `${u15}-search-instructions`, h21 = (o8) => `${u15}${o8}`, { items: D7 } = l3(), {
      resetSearch: F4,
      selectedIndex: i17,
      selectedSearchResult: k13,
      searchResultsWithPlaceholderResults: d24,
      query: p25
    } = _11(D7), H7 = {
      heading: V2,
      model: _2,
      operation: _6,
      tag: y3,
      webhook: _6
    }, O11 = {
      heading: "Heading",
      operation: "Operation",
      tag: "Tag",
      model: "Model",
      webhook: "Webhook"
    }, P10 = ref(null);
    watch(
      () => f19.modalState.open,
      (o8) => {
        o8 && F4();
      }
    );
    const { setCollapsedSidebarItem: U6 } = l3(), K6 = /#(tag\/[^/]*)/;
    function B8(o8) {
      let t7 = "models";
      const e16 = o8.item.href.match(K6);
      e16 != null && e16.length && e16.length > 1 && (t7 = e16[1]), U6(t7, true);
      const r12 = o8.item.href.replace("#", "");
      if (document.getElementById(r12))
        scrollToId(r12), f19.modalState.hide();
      else {
        const y10 = r.on((z9) => {
          z9.loaded === r12 && (scrollToId(r12), y10(), f19.modalState.hide());
        });
      }
    }
    watch(i17, (o8) => {
      var r12;
      if (typeof o8 != "number")
        return;
      const t7 = d24.value[o8], e16 = h21(t7 == null ? void 0 : t7.item.href);
      (r12 = document.getElementById(e16)) == null || r12.scrollIntoView({
        behavior: "smooth",
        block: "nearest"
      });
    });
    const x12 = (o8) => {
      const t7 = o8 === "up" ? -1 : 1, e16 = d24.value.length;
      if (typeof i17.value == "number") {
        const r12 = (i17.value + t7 + e16) % e16;
        i17.value = r12;
      } else
        i17.value = t7 === -1 ? e16 - 1 : 0;
    };
    function W10(o8) {
      const t7 = new URL(window.location.href);
      return t7.hash = o8, t7.toString();
    }
    function q10() {
      if (!isDefined(i17.value))
        return;
      const o8 = d24.value;
      o8.length !== 0 && B8(o8[i17.value]);
    }
    return (o8, t7) => (openBlock(), createBlock(unref(m4), {
      "aria-label": "Reference Search",
      state: o8.modalState,
      variant: "search"
    }, {
      default: withCtx(() => [
        createBaseVNode("div", {
          ref_key: "searchModalRef",
          ref: P10,
          class: "ref-search-container",
          role: "search"
        }, [
          createVNode(unref(q), {
            modelValue: unref(p25),
            "onUpdate:modelValue": t7[0] || (t7[0] = (e16) => isRef(p25) ? p25.value = e16 : null),
            "aria-activedescendant": unref(k13) ? h21(unref(k13).item.href) : void 0,
            "aria-autocomplete": "list",
            "aria-controls": w13,
            "aria-describedby": R8,
            role: "combobox",
            onBlur: t7[1] || (t7[1] = (e16) => i17.value = void 0),
            onKeydown: [
              t7[2] || (t7[2] = withKeys(withModifiers((e16) => x12("down"), ["stop", "prevent"]), ["down"])),
              withKeys(withModifiers(q10, ["stop", "prevent"]), ["enter"]),
              t7[3] || (t7[3] = withKeys(withModifiers((e16) => x12("up"), ["stop", "prevent"]), ["up"]))
            ]
          }, null, 8, ["modelValue", "aria-activedescendant", "onKeydown"])
        ], 512),
        createVNode(unref(x), {
          id: w13,
          "aria-label": "Reference Search Results",
          class: "ref-search-results custom-scroll",
          noResults: !unref(d24).length
        }, {
          query: withCtx(() => [
            createTextVNode(toDisplayString(unref(p25)), 1)
          ]),
          default: withCtx(() => [
            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(d24), (e16, r12) => (openBlock(), createBlock(unref(B2), {
              id: h21(e16.item.href),
              key: e16.refIndex,
              href: W10(e16.item.href),
              icon: H7[e16.item.type],
              selected: unref(i17) === r12,
              onClick: (y10) => B8(e16),
              onFocus: (y10) => i17.value = r12
            }, createSlots({
              default: withCtx(() => [
                createBaseVNode("span", {
                  class: normalizeClass({
                    deprecated: "operation" in e16.item.entry && unref(isOperationDeprecated)(e16.item.entry.operation)
                  })
                }, [
                  createBaseVNode("span", ce, [
                    createTextVNode(toDisplayString(O11[e16.item.type]) + ":  ", 1),
                    "operation" in e16.item.entry && unref(isOperationDeprecated)(e16.item.entry.operation) ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
                      createTextVNode(" (Deprecated)  ")
                    ], 64)) : createCommentVNode("", true)
                  ]),
                  createTextVNode(" " + toDisplayString(e16.item.title) + " ", 1),
                  t7[4] || (t7[4] = createBaseVNode("span", { class: "sr-only" }, ",", -1))
                ], 2)
              ]),
              _: 2
            }, [
              e16.item.type !== "webhook" && (e16.item.method || e16.item.path) && e16.item.path !== e16.item.title ? {
                name: "description",
                fn: withCtx(() => [
                  createBaseVNode("span", de, [
                    e16.item.type === "operation" ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
                      createVNode(e5, {
                        "aria-hidden": "true",
                        method: e16.item.method ?? "get"
                      }, null, 8, ["method"]),
                      createBaseVNode("span", me2, " HTTP Method: " + toDisplayString(e16.item.method ?? "get"), 1)
                    ], 64)) : createCommentVNode("", true),
                    t7[5] || (t7[5] = createBaseVNode("span", { class: "sr-only" }, "Path: ", -1)),
                    createTextVNode(" " + toDisplayString(e16.item.path), 1)
                  ])
                ]),
                key: "0"
              } : e16.item.description ? {
                name: "description",
                fn: withCtx(() => [
                  t7[6] || (t7[6] = createBaseVNode("span", { class: "sr-only" }, "Description: ", -1)),
                  createTextVNode(" " + toDisplayString(e16.item.description), 1)
                ]),
                key: "1"
              } : void 0
            ]), 1032, ["id", "href", "icon", "selected", "onClick", "onFocus"]))), 128))
          ]),
          _: 1
        }, 8, ["noResults"]),
        createBaseVNode("div", {
          id: R8,
          class: "ref-search-meta"
        }, t7[7] || (t7[7] = [
          createBaseVNode("span", {
            "aria-hidden": "true",
            class: "contents"
          }, [
            createBaseVNode("span", null, "↑↓ Navigate"),
            createBaseVNode("span", null, "⏎ Select")
          ], -1),
          createBaseVNode("span", { class: "sr-only" }, " Press up arrow / down arrow to navigate, enter to select, type to filter results ", -1)
        ]))
      ]),
      _: 1
    }, 8, ["state"]));
  }
});

// node_modules/@scalar/api-reference/dist/features/Search/components/SearchModal.vue.js
var m11 = s4(Re, [["__scopeId", "data-v-d38e7ee7"]]);

// node_modules/tabbable/dist/index.esm.js
var candidateSelectors = ["input:not([inert])", "select:not([inert])", "textarea:not([inert])", "a[href]:not([inert])", "button:not([inert])", "[tabindex]:not(slot):not([inert])", "audio[controls]:not([inert])", "video[controls]:not([inert])", '[contenteditable]:not([contenteditable="false"]):not([inert])', "details>summary:first-of-type:not([inert])", "details:not([inert])"];
var candidateSelector = candidateSelectors.join(",");
var NoElement = typeof Element === "undefined";
var matches = NoElement ? function() {
} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
var getRootNode = !NoElement && Element.prototype.getRootNode ? function(element) {
  var _element$getRootNode;
  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);
} : function(element) {
  return element === null || element === void 0 ? void 0 : element.ownerDocument;
};
var isInert = function isInert2(node, lookUp) {
  var _node$getAttribute;
  if (lookUp === void 0) {
    lookUp = true;
  }
  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, "inert");
  var inert = inertAtt === "" || inertAtt === "true";
  var result = inert || lookUp && node && isInert2(node.parentNode);
  return result;
};
var isContentEditable = function isContentEditable2(node) {
  var _node$getAttribute2;
  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, "contenteditable");
  return attValue === "" || attValue === "true";
};
var getCandidates = function getCandidates2(el, includeContainer, filter) {
  if (isInert(el)) {
    return [];
  }
  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));
  if (includeContainer && matches.call(el, candidateSelector)) {
    candidates.unshift(el);
  }
  candidates = candidates.filter(filter);
  return candidates;
};
var getCandidatesIteratively = function getCandidatesIteratively2(elements, includeContainer, options) {
  var candidates = [];
  var elementsToCheck = Array.from(elements);
  while (elementsToCheck.length) {
    var element = elementsToCheck.shift();
    if (isInert(element, false)) {
      continue;
    }
    if (element.tagName === "SLOT") {
      var assigned = element.assignedElements();
      var content = assigned.length ? assigned : element.children;
      var nestedCandidates = getCandidatesIteratively2(content, true, options);
      if (options.flatten) {
        candidates.push.apply(candidates, nestedCandidates);
      } else {
        candidates.push({
          scopeParent: element,
          candidates: nestedCandidates
        });
      }
    } else {
      var validCandidate = matches.call(element, candidateSelector);
      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {
        candidates.push(element);
      }
      var shadowRoot = element.shadowRoot || // check for an undisclosed shadow
      typeof options.getShadowRoot === "function" && options.getShadowRoot(element);
      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));
      if (shadowRoot && validShadowRoot) {
        var _nestedCandidates = getCandidatesIteratively2(shadowRoot === true ? element.children : shadowRoot.children, true, options);
        if (options.flatten) {
          candidates.push.apply(candidates, _nestedCandidates);
        } else {
          candidates.push({
            scopeParent: element,
            candidates: _nestedCandidates
          });
        }
      } else {
        elementsToCheck.unshift.apply(elementsToCheck, element.children);
      }
    }
  }
  return candidates;
};
var hasTabIndex = function hasTabIndex2(node) {
  return !isNaN(parseInt(node.getAttribute("tabindex"), 10));
};
var getTabIndex = function getTabIndex2(node) {
  if (!node) {
    throw new Error("No node provided");
  }
  if (node.tabIndex < 0) {
    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {
      return 0;
    }
  }
  return node.tabIndex;
};
var getSortOrderTabIndex = function getSortOrderTabIndex2(node, isScope) {
  var tabIndex = getTabIndex(node);
  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {
    return 0;
  }
  return tabIndex;
};
var sortOrderedTabbables = function sortOrderedTabbables2(a18, b10) {
  return a18.tabIndex === b10.tabIndex ? a18.documentOrder - b10.documentOrder : a18.tabIndex - b10.tabIndex;
};
var isInput = function isInput2(node) {
  return node.tagName === "INPUT";
};
var isHiddenInput = function isHiddenInput2(node) {
  return isInput(node) && node.type === "hidden";
};
var isDetailsWithSummary = function isDetailsWithSummary2(node) {
  var r12 = node.tagName === "DETAILS" && Array.prototype.slice.apply(node.children).some(function(child) {
    return child.tagName === "SUMMARY";
  });
  return r12;
};
var getCheckedRadio = function getCheckedRadio2(nodes, form) {
  for (var i17 = 0; i17 < nodes.length; i17++) {
    if (nodes[i17].checked && nodes[i17].form === form) {
      return nodes[i17];
    }
  }
};
var isTabbableRadio = function isTabbableRadio2(node) {
  if (!node.name) {
    return true;
  }
  var radioScope = node.form || getRootNode(node);
  var queryRadios = function queryRadios2(name) {
    return radioScope.querySelectorAll('input[type="radio"][name="' + name + '"]');
  };
  var radioSet;
  if (typeof window !== "undefined" && typeof window.CSS !== "undefined" && typeof window.CSS.escape === "function") {
    radioSet = queryRadios(window.CSS.escape(node.name));
  } else {
    try {
      radioSet = queryRadios(node.name);
    } catch (err) {
      console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", err.message);
      return false;
    }
  }
  var checked = getCheckedRadio(radioSet, node.form);
  return !checked || checked === node;
};
var isRadio = function isRadio2(node) {
  return isInput(node) && node.type === "radio";
};
var isNonTabbableRadio = function isNonTabbableRadio2(node) {
  return isRadio(node) && !isTabbableRadio(node);
};
var isNodeAttached = function isNodeAttached2(node) {
  var _nodeRoot;
  var nodeRoot = node && getRootNode(node);
  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;
  var attached = false;
  if (nodeRoot && nodeRoot !== node) {
    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;
    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));
    while (!attached && nodeRootHost) {
      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;
      nodeRoot = getRootNode(nodeRootHost);
      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;
      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));
    }
  }
  return attached;
};
var isZeroArea = function isZeroArea2(node) {
  var _node$getBoundingClie = node.getBoundingClientRect(), width = _node$getBoundingClie.width, height = _node$getBoundingClie.height;
  return width === 0 && height === 0;
};
var isHidden = function isHidden2(node, _ref) {
  var displayCheck = _ref.displayCheck, getShadowRoot = _ref.getShadowRoot;
  if (getComputedStyle(node).visibility === "hidden") {
    return true;
  }
  var isDirectSummary = matches.call(node, "details>summary:first-of-type");
  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;
  if (matches.call(nodeUnderDetails, "details:not([open]) *")) {
    return true;
  }
  if (!displayCheck || displayCheck === "full" || displayCheck === "legacy-full") {
    if (typeof getShadowRoot === "function") {
      var originalNode = node;
      while (node) {
        var parentElement = node.parentElement;
        var rootNode = getRootNode(node);
        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true) {
          return isZeroArea(node);
        } else if (node.assignedSlot) {
          node = node.assignedSlot;
        } else if (!parentElement && rootNode !== node.ownerDocument) {
          node = rootNode.host;
        } else {
          node = parentElement;
        }
      }
      node = originalNode;
    }
    if (isNodeAttached(node)) {
      return !node.getClientRects().length;
    }
    if (displayCheck !== "legacy-full") {
      return true;
    }
  } else if (displayCheck === "non-zero-area") {
    return isZeroArea(node);
  }
  return false;
};
var isDisabledFromFieldset = function isDisabledFromFieldset2(node) {
  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {
    var parentNode = node.parentElement;
    while (parentNode) {
      if (parentNode.tagName === "FIELDSET" && parentNode.disabled) {
        for (var i17 = 0; i17 < parentNode.children.length; i17++) {
          var child = parentNode.children.item(i17);
          if (child.tagName === "LEGEND") {
            return matches.call(parentNode, "fieldset[disabled] *") ? true : !child.contains(node);
          }
        }
        return true;
      }
      parentNode = parentNode.parentElement;
    }
  }
  return false;
};
var isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable2(options, node) {
  if (node.disabled || // we must do an inert look up to filter out any elements inside an inert ancestor
  //  because we're limited in the type of selectors we can use in JSDom (see related
  //  note related to `candidateSelectors`)
  isInert(node) || isHiddenInput(node) || isHidden(node, options) || // For a details element with a summary, the summary element gets the focus
  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {
    return false;
  }
  return true;
};
var isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable2(options, node) {
  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {
    return false;
  }
  return true;
};
var isValidShadowRootTabbable = function isValidShadowRootTabbable2(shadowHostNode) {
  var tabIndex = parseInt(shadowHostNode.getAttribute("tabindex"), 10);
  if (isNaN(tabIndex) || tabIndex >= 0) {
    return true;
  }
  return false;
};
var sortByOrder = function sortByOrder2(candidates) {
  var regularTabbables = [];
  var orderedTabbables = [];
  candidates.forEach(function(item, i17) {
    var isScope = !!item.scopeParent;
    var element = isScope ? item.scopeParent : item;
    var candidateTabindex = getSortOrderTabIndex(element, isScope);
    var elements = isScope ? sortByOrder2(item.candidates) : element;
    if (candidateTabindex === 0) {
      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);
    } else {
      orderedTabbables.push({
        documentOrder: i17,
        tabIndex: candidateTabindex,
        item,
        isScope,
        content: elements
      });
    }
  });
  return orderedTabbables.sort(sortOrderedTabbables).reduce(function(acc, sortable) {
    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);
    return acc;
  }, []).concat(regularTabbables);
};
var tabbable = function tabbable2(container, options) {
  options = options || {};
  var candidates;
  if (options.getShadowRoot) {
    candidates = getCandidatesIteratively([container], options.includeContainer, {
      filter: isNodeMatchingSelectorTabbable.bind(null, options),
      flatten: false,
      getShadowRoot: options.getShadowRoot,
      shadowRootFilter: isValidShadowRootTabbable
    });
  } else {
    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));
  }
  return sortByOrder(candidates);
};
var focusable = function focusable2(container, options) {
  options = options || {};
  var candidates;
  if (options.getShadowRoot) {
    candidates = getCandidatesIteratively([container], options.includeContainer, {
      filter: isNodeMatchingSelectorFocusable.bind(null, options),
      flatten: true,
      getShadowRoot: options.getShadowRoot
    });
  } else {
    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));
  }
  return candidates;
};
var isTabbable = function isTabbable2(node, options) {
  options = options || {};
  if (!node) {
    throw new Error("No node provided");
  }
  if (matches.call(node, candidateSelector) === false) {
    return false;
  }
  return isNodeMatchingSelectorTabbable(options, node);
};
var focusableCandidateSelector = candidateSelectors.concat("iframe").join(",");
var isFocusable = function isFocusable2(node, options) {
  options = options || {};
  if (!node) {
    throw new Error("No node provided");
  }
  if (matches.call(node, focusableCandidateSelector) === false) {
    return false;
  }
  return isNodeMatchingSelectorFocusable(options, node);
};

// node_modules/focus-trap/dist/focus-trap.esm.js
function _arrayLikeToArray(r12, a18) {
  (null == a18 || a18 > r12.length) && (a18 = r12.length);
  for (var e16 = 0, n8 = Array(a18); e16 < a18; e16++) n8[e16] = r12[e16];
  return n8;
}
function _arrayWithoutHoles(r12) {
  if (Array.isArray(r12)) return _arrayLikeToArray(r12);
}
function _defineProperty(e16, r12, t7) {
  return (r12 = _toPropertyKey(r12)) in e16 ? Object.defineProperty(e16, r12, {
    value: t7,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e16[r12] = t7, e16;
}
function _iterableToArray(r12) {
  if ("undefined" != typeof Symbol && null != r12[Symbol.iterator] || null != r12["@@iterator"]) return Array.from(r12);
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function ownKeys(e16, r12) {
  var t7 = Object.keys(e16);
  if (Object.getOwnPropertySymbols) {
    var o8 = Object.getOwnPropertySymbols(e16);
    r12 && (o8 = o8.filter(function(r13) {
      return Object.getOwnPropertyDescriptor(e16, r13).enumerable;
    })), t7.push.apply(t7, o8);
  }
  return t7;
}
function _objectSpread2(e16) {
  for (var r12 = 1; r12 < arguments.length; r12++) {
    var t7 = null != arguments[r12] ? arguments[r12] : {};
    r12 % 2 ? ownKeys(Object(t7), true).forEach(function(r13) {
      _defineProperty(e16, r13, t7[r13]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e16, Object.getOwnPropertyDescriptors(t7)) : ownKeys(Object(t7)).forEach(function(r13) {
      Object.defineProperty(e16, r13, Object.getOwnPropertyDescriptor(t7, r13));
    });
  }
  return e16;
}
function _toConsumableArray(r12) {
  return _arrayWithoutHoles(r12) || _iterableToArray(r12) || _unsupportedIterableToArray(r12) || _nonIterableSpread();
}
function _toPrimitive(t7, r12) {
  if ("object" != typeof t7 || !t7) return t7;
  var e16 = t7[Symbol.toPrimitive];
  if (void 0 !== e16) {
    var i17 = e16.call(t7, r12);
    if ("object" != typeof i17) return i17;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r12 ? String : Number)(t7);
}
function _toPropertyKey(t7) {
  var i17 = _toPrimitive(t7, "string");
  return "symbol" == typeof i17 ? i17 : i17 + "";
}
function _unsupportedIterableToArray(r12, a18) {
  if (r12) {
    if ("string" == typeof r12) return _arrayLikeToArray(r12, a18);
    var t7 = {}.toString.call(r12).slice(8, -1);
    return "Object" === t7 && r12.constructor && (t7 = r12.constructor.name), "Map" === t7 || "Set" === t7 ? Array.from(r12) : "Arguments" === t7 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t7) ? _arrayLikeToArray(r12, a18) : void 0;
  }
}
var activeFocusTraps = {
  activateTrap: function activateTrap(trapStack, trap) {
    if (trapStack.length > 0) {
      var activeTrap = trapStack[trapStack.length - 1];
      if (activeTrap !== trap) {
        activeTrap._setPausedState(true);
      }
    }
    var trapIndex = trapStack.indexOf(trap);
    if (trapIndex === -1) {
      trapStack.push(trap);
    } else {
      trapStack.splice(trapIndex, 1);
      trapStack.push(trap);
    }
  },
  deactivateTrap: function deactivateTrap(trapStack, trap) {
    var trapIndex = trapStack.indexOf(trap);
    if (trapIndex !== -1) {
      trapStack.splice(trapIndex, 1);
    }
    if (trapStack.length > 0 && !trapStack[trapStack.length - 1]._isManuallyPaused()) {
      trapStack[trapStack.length - 1]._setPausedState(false);
    }
  }
};
var isSelectableInput = function isSelectableInput2(node) {
  return node.tagName && node.tagName.toLowerCase() === "input" && typeof node.select === "function";
};
var isEscapeEvent = function isEscapeEvent2(e16) {
  return (e16 === null || e16 === void 0 ? void 0 : e16.key) === "Escape" || (e16 === null || e16 === void 0 ? void 0 : e16.key) === "Esc" || (e16 === null || e16 === void 0 ? void 0 : e16.keyCode) === 27;
};
var isTabEvent = function isTabEvent2(e16) {
  return (e16 === null || e16 === void 0 ? void 0 : e16.key) === "Tab" || (e16 === null || e16 === void 0 ? void 0 : e16.keyCode) === 9;
};
var isKeyForward = function isKeyForward2(e16) {
  return isTabEvent(e16) && !e16.shiftKey;
};
var isKeyBackward = function isKeyBackward2(e16) {
  return isTabEvent(e16) && e16.shiftKey;
};
var delay = function delay2(fn) {
  return setTimeout(fn, 0);
};
var valueOrHandler = function valueOrHandler2(value) {
  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    params[_key - 1] = arguments[_key];
  }
  return typeof value === "function" ? value.apply(void 0, params) : value;
};
var getActualTarget = function getActualTarget2(event) {
  return event.target.shadowRoot && typeof event.composedPath === "function" ? event.composedPath()[0] : event.target;
};
var internalTrapStack = [];
var createFocusTrap = function createFocusTrap2(elements, userOptions) {
  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;
  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;
  var config = _objectSpread2({
    returnFocusOnDeactivate: true,
    escapeDeactivates: true,
    delayInitialFocus: true,
    isKeyForward,
    isKeyBackward
  }, userOptions);
  var state = {
    // containers given to createFocusTrap()
    // @type {Array<HTMLElement>}
    containers: [],
    // list of objects identifying tabbable nodes in `containers` in the trap
    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap
    //  is active, but the trap should never get to a state where there isn't at least one group
    //  with at least one tabbable node in it (that would lead to an error condition that would
    //  result in an error being thrown)
    // @type {Array<{
    //   container: HTMLElement,
    //   tabbableNodes: Array<HTMLElement>, // empty if none
    //   focusableNodes: Array<HTMLElement>, // empty if none
    //   posTabIndexesFound: boolean,
    //   firstTabbableNode: HTMLElement|undefined,
    //   lastTabbableNode: HTMLElement|undefined,
    //   firstDomTabbableNode: HTMLElement|undefined,
    //   lastDomTabbableNode: HTMLElement|undefined,
    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined
    // }>}
    containerGroups: [],
    // same order/length as `containers` list
    // references to objects in `containerGroups`, but only those that actually have
    //  tabbable nodes in them
    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__
    //  the same length
    tabbableGroups: [],
    nodeFocusedBeforeActivation: null,
    mostRecentlyFocusedNode: null,
    active: false,
    paused: false,
    manuallyPaused: false,
    // timer ID for when delayInitialFocus is true and initial focus in this trap
    //  has been delayed during activation
    delayInitialFocusTimer: void 0,
    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any
    recentNavEvent: void 0
  };
  var trap;
  var getOption = function getOption2(configOverrideOptions, optionName, configOptionName) {
    return configOverrideOptions && configOverrideOptions[optionName] !== void 0 ? configOverrideOptions[optionName] : config[configOptionName || optionName];
  };
  var findContainerIndex = function findContainerIndex2(element, event) {
    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === "function" ? event.composedPath() : void 0;
    return state.containerGroups.findIndex(function(_ref) {
      var container = _ref.container, tabbableNodes = _ref.tabbableNodes;
      return container.contains(element) || // fall back to explicit tabbable search which will take into consideration any
      //  web components if the `tabbableOptions.getShadowRoot` option was used for
      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't
      //  look inside web components even if open)
      (composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function(node) {
        return node === element;
      });
    });
  };
  var getNodeForOption = function getNodeForOption2(optionName) {
    var _ref2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref2$hasFallback = _ref2.hasFallback, hasFallback = _ref2$hasFallback === void 0 ? false : _ref2$hasFallback, _ref2$params = _ref2.params, params = _ref2$params === void 0 ? [] : _ref2$params;
    var optionValue = config[optionName];
    if (typeof optionValue === "function") {
      optionValue = optionValue.apply(void 0, _toConsumableArray(params));
    }
    if (optionValue === true) {
      optionValue = void 0;
    }
    if (!optionValue) {
      if (optionValue === void 0 || optionValue === false) {
        return optionValue;
      }
      throw new Error("`".concat(optionName, "` was specified but was not a node, or did not return a node"));
    }
    var node = optionValue;
    if (typeof optionValue === "string") {
      try {
        node = doc.querySelector(optionValue);
      } catch (err) {
        throw new Error("`".concat(optionName, '` appears to be an invalid selector; error="').concat(err.message, '"'));
      }
      if (!node) {
        if (!hasFallback) {
          throw new Error("`".concat(optionName, "` as selector refers to no known node"));
        }
      }
    }
    return node;
  };
  var getInitialFocusNode = function getInitialFocusNode2() {
    var node = getNodeForOption("initialFocus", {
      hasFallback: true
    });
    if (node === false) {
      return false;
    }
    if (node === void 0 || node && !isFocusable(node, config.tabbableOptions)) {
      if (findContainerIndex(doc.activeElement) >= 0) {
        node = doc.activeElement;
      } else {
        var firstTabbableGroup = state.tabbableGroups[0];
        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;
        node = firstTabbableNode || getNodeForOption("fallbackFocus");
      }
    } else if (node === null) {
      node = getNodeForOption("fallbackFocus");
    }
    if (!node) {
      throw new Error("Your focus-trap needs to have at least one focusable element");
    }
    return node;
  };
  var updateTabbableNodes = function updateTabbableNodes2() {
    state.containerGroups = state.containers.map(function(container) {
      var tabbableNodes = tabbable(container, config.tabbableOptions);
      var focusableNodes = focusable(container, config.tabbableOptions);
      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : void 0;
      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : void 0;
      var firstDomTabbableNode = focusableNodes.find(function(node) {
        return isTabbable(node);
      });
      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function(node) {
        return isTabbable(node);
      });
      var posTabIndexesFound = !!tabbableNodes.find(function(node) {
        return getTabIndex(node) > 0;
      });
      return {
        container,
        tabbableNodes,
        focusableNodes,
        /** True if at least one node with positive `tabindex` was found in this container. */
        posTabIndexesFound,
        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */
        firstTabbableNode,
        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */
        lastTabbableNode,
        // NOTE: DOM order is NOT NECESSARILY "document position" order, but figuring that out
        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition
        //  because that API doesn't work with Shadow DOM as well as it should (@see
        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,
        //  to address an edge case related to positive tabindex support, this seems like a much easier,
        //  "close enough most of the time" alternative for positive tabindexes which should generally
        //  be avoided anyway...
        /** First tabbable node in container, __DOM__ order; `undefined` if none. */
        firstDomTabbableNode,
        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */
        lastDomTabbableNode,
        /**
         * Finds the __tabbable__ node that follows the given node in the specified direction,
         *  in this container, if any.
         * @param {HTMLElement} node
         * @param {boolean} [forward] True if going in forward tab order; false if going
         *  in reverse.
         * @returns {HTMLElement|undefined} The next tabbable node, if any.
         */
        nextTabbableNode: function nextTabbableNode(node) {
          var forward = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
          var nodeIdx = tabbableNodes.indexOf(node);
          if (nodeIdx < 0) {
            if (forward) {
              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function(el) {
                return isTabbable(el);
              });
            }
            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function(el) {
              return isTabbable(el);
            });
          }
          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];
        }
      };
    });
    state.tabbableGroups = state.containerGroups.filter(function(group) {
      return group.tabbableNodes.length > 0;
    });
    if (state.tabbableGroups.length <= 0 && !getNodeForOption("fallbackFocus")) {
      throw new Error("Your focus-trap must have at least one container with at least one tabbable node in it at all times");
    }
    if (state.containerGroups.find(function(g6) {
      return g6.posTabIndexesFound;
    }) && state.containerGroups.length > 1) {
      throw new Error("At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.");
    }
  };
  var _getActiveElement = function getActiveElement(el) {
    var activeElement = el.activeElement;
    if (!activeElement) {
      return;
    }
    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {
      return _getActiveElement(activeElement.shadowRoot);
    }
    return activeElement;
  };
  var _tryFocus = function tryFocus(node) {
    if (node === false) {
      return;
    }
    if (node === _getActiveElement(document)) {
      return;
    }
    if (!node || !node.focus) {
      _tryFocus(getInitialFocusNode());
      return;
    }
    node.focus({
      preventScroll: !!config.preventScroll
    });
    state.mostRecentlyFocusedNode = node;
    if (isSelectableInput(node)) {
      node.select();
    }
  };
  var getReturnFocusNode = function getReturnFocusNode2(previousActiveElement) {
    var node = getNodeForOption("setReturnFocus", {
      params: [previousActiveElement]
    });
    return node ? node : node === false ? false : previousActiveElement;
  };
  var findNextNavNode = function findNextNavNode2(_ref3) {
    var target = _ref3.target, event = _ref3.event, _ref3$isBackward = _ref3.isBackward, isBackward = _ref3$isBackward === void 0 ? false : _ref3$isBackward;
    target = target || getActualTarget(event);
    updateTabbableNodes();
    var destinationNode = null;
    if (state.tabbableGroups.length > 0) {
      var containerIndex = findContainerIndex(target, event);
      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : void 0;
      if (containerIndex < 0) {
        if (isBackward) {
          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;
        } else {
          destinationNode = state.tabbableGroups[0].firstTabbableNode;
        }
      } else if (isBackward) {
        var startOfGroupIndex = state.tabbableGroups.findIndex(function(_ref4) {
          var firstTabbableNode = _ref4.firstTabbableNode;
          return target === firstTabbableNode;
        });
        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {
          startOfGroupIndex = containerIndex;
        }
        if (startOfGroupIndex >= 0) {
          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;
          var destinationGroup = state.tabbableGroups[destinationGroupIndex];
          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;
        } else if (!isTabEvent(event)) {
          destinationNode = containerGroup.nextTabbableNode(target, false);
        }
      } else {
        var lastOfGroupIndex = state.tabbableGroups.findIndex(function(_ref5) {
          var lastTabbableNode = _ref5.lastTabbableNode;
          return target === lastTabbableNode;
        });
        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {
          lastOfGroupIndex = containerIndex;
        }
        if (lastOfGroupIndex >= 0) {
          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;
          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];
          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;
        } else if (!isTabEvent(event)) {
          destinationNode = containerGroup.nextTabbableNode(target);
        }
      }
    } else {
      destinationNode = getNodeForOption("fallbackFocus");
    }
    return destinationNode;
  };
  var checkPointerDown = function checkPointerDown2(e16) {
    var target = getActualTarget(e16);
    if (findContainerIndex(target, e16) >= 0) {
      return;
    }
    if (valueOrHandler(config.clickOutsideDeactivates, e16)) {
      trap.deactivate({
        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,
        //  which will result in the outside click setting focus to the node
        //  that was clicked (and if not focusable, to "nothing"); by setting
        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused
        //  on activation (or the configured `setReturnFocus` node), whether the
        //  outside click was on a focusable node or not
        returnFocus: config.returnFocusOnDeactivate
      });
      return;
    }
    if (valueOrHandler(config.allowOutsideClick, e16)) {
      return;
    }
    e16.preventDefault();
  };
  var checkFocusIn = function checkFocusIn2(event) {
    var target = getActualTarget(event);
    var targetContained = findContainerIndex(target, event) >= 0;
    if (targetContained || target instanceof Document) {
      if (targetContained) {
        state.mostRecentlyFocusedNode = target;
      }
    } else {
      event.stopImmediatePropagation();
      var nextNode;
      var navAcrossContainers = true;
      if (state.mostRecentlyFocusedNode) {
        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {
          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);
          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;
          if (tabbableNodes.length > 0) {
            var mruTabIdx = tabbableNodes.findIndex(function(node) {
              return node === state.mostRecentlyFocusedNode;
            });
            if (mruTabIdx >= 0) {
              if (config.isKeyForward(state.recentNavEvent)) {
                if (mruTabIdx + 1 < tabbableNodes.length) {
                  nextNode = tabbableNodes[mruTabIdx + 1];
                  navAcrossContainers = false;
                }
              } else {
                if (mruTabIdx - 1 >= 0) {
                  nextNode = tabbableNodes[mruTabIdx - 1];
                  navAcrossContainers = false;
                }
              }
            }
          }
        } else {
          if (!state.containerGroups.some(function(g6) {
            return g6.tabbableNodes.some(function(n8) {
              return getTabIndex(n8) > 0;
            });
          })) {
            navAcrossContainers = false;
          }
        }
      } else {
        navAcrossContainers = false;
      }
      if (navAcrossContainers) {
        nextNode = findNextNavNode({
          // move FROM the MRU node, not event-related node (which will be the node that is
          //  outside the trap causing the focus escape we're trying to fix)
          target: state.mostRecentlyFocusedNode,
          isBackward: config.isKeyBackward(state.recentNavEvent)
        });
      }
      if (nextNode) {
        _tryFocus(nextNode);
      } else {
        _tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
      }
    }
    state.recentNavEvent = void 0;
  };
  var checkKeyNav = function checkKeyNav2(event) {
    var isBackward = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    state.recentNavEvent = event;
    var destinationNode = findNextNavNode({
      event,
      isBackward
    });
    if (destinationNode) {
      if (isTabEvent(event)) {
        event.preventDefault();
      }
      _tryFocus(destinationNode);
    }
  };
  var checkTabKey = function checkTabKey2(event) {
    if (config.isKeyForward(event) || config.isKeyBackward(event)) {
      checkKeyNav(event, config.isKeyBackward(event));
    }
  };
  var checkEscapeKey = function checkEscapeKey2(event) {
    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {
      event.preventDefault();
      trap.deactivate();
    }
  };
  var checkClick = function checkClick2(e16) {
    var target = getActualTarget(e16);
    if (findContainerIndex(target, e16) >= 0) {
      return;
    }
    if (valueOrHandler(config.clickOutsideDeactivates, e16)) {
      return;
    }
    if (valueOrHandler(config.allowOutsideClick, e16)) {
      return;
    }
    e16.preventDefault();
    e16.stopImmediatePropagation();
  };
  var addListeners = function addListeners2() {
    if (!state.active) {
      return;
    }
    activeFocusTraps.activateTrap(trapStack, trap);
    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function() {
      _tryFocus(getInitialFocusNode());
    }) : _tryFocus(getInitialFocusNode());
    doc.addEventListener("focusin", checkFocusIn, true);
    doc.addEventListener("mousedown", checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener("touchstart", checkPointerDown, {
      capture: true,
      passive: false
    });
    doc.addEventListener("click", checkClick, {
      capture: true,
      passive: false
    });
    doc.addEventListener("keydown", checkTabKey, {
      capture: true,
      passive: false
    });
    doc.addEventListener("keydown", checkEscapeKey);
    return trap;
  };
  var removeListeners = function removeListeners2() {
    if (!state.active) {
      return;
    }
    doc.removeEventListener("focusin", checkFocusIn, true);
    doc.removeEventListener("mousedown", checkPointerDown, true);
    doc.removeEventListener("touchstart", checkPointerDown, true);
    doc.removeEventListener("click", checkClick, true);
    doc.removeEventListener("keydown", checkTabKey, true);
    doc.removeEventListener("keydown", checkEscapeKey);
    return trap;
  };
  var checkDomRemoval = function checkDomRemoval2(mutations) {
    var isFocusedNodeRemoved = mutations.some(function(mutation) {
      var removedNodes = Array.from(mutation.removedNodes);
      return removedNodes.some(function(node) {
        return node === state.mostRecentlyFocusedNode;
      });
    });
    if (isFocusedNodeRemoved) {
      _tryFocus(getInitialFocusNode());
    }
  };
  var mutationObserver = typeof window !== "undefined" && "MutationObserver" in window ? new MutationObserver(checkDomRemoval) : void 0;
  var updateObservedNodes = function updateObservedNodes2() {
    if (!mutationObserver) {
      return;
    }
    mutationObserver.disconnect();
    if (state.active && !state.paused) {
      state.containers.map(function(container) {
        mutationObserver.observe(container, {
          subtree: true,
          childList: true
        });
      });
    }
  };
  trap = {
    get active() {
      return state.active;
    },
    get paused() {
      return state.paused;
    },
    activate: function activate(activateOptions) {
      if (state.active) {
        return this;
      }
      var onActivate = getOption(activateOptions, "onActivate");
      var onPostActivate = getOption(activateOptions, "onPostActivate");
      var checkCanFocusTrap = getOption(activateOptions, "checkCanFocusTrap");
      if (!checkCanFocusTrap) {
        updateTabbableNodes();
      }
      state.active = true;
      state.paused = false;
      state.nodeFocusedBeforeActivation = _getActiveElement(doc);
      onActivate === null || onActivate === void 0 || onActivate();
      var finishActivation = function finishActivation2() {
        if (checkCanFocusTrap) {
          updateTabbableNodes();
        }
        addListeners();
        updateObservedNodes();
        onPostActivate === null || onPostActivate === void 0 || onPostActivate();
      };
      if (checkCanFocusTrap) {
        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);
        return this;
      }
      finishActivation();
      return this;
    },
    deactivate: function deactivate(deactivateOptions) {
      if (!state.active) {
        return this;
      }
      var options = _objectSpread2({
        onDeactivate: config.onDeactivate,
        onPostDeactivate: config.onPostDeactivate,
        checkCanReturnFocus: config.checkCanReturnFocus
      }, deactivateOptions);
      clearTimeout(state.delayInitialFocusTimer);
      state.delayInitialFocusTimer = void 0;
      removeListeners();
      state.active = false;
      state.paused = false;
      updateObservedNodes();
      activeFocusTraps.deactivateTrap(trapStack, trap);
      var onDeactivate = getOption(options, "onDeactivate");
      var onPostDeactivate = getOption(options, "onPostDeactivate");
      var checkCanReturnFocus = getOption(options, "checkCanReturnFocus");
      var returnFocus = getOption(options, "returnFocus", "returnFocusOnDeactivate");
      onDeactivate === null || onDeactivate === void 0 || onDeactivate();
      var finishDeactivation = function finishDeactivation2() {
        delay(function() {
          if (returnFocus) {
            _tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));
          }
          onPostDeactivate === null || onPostDeactivate === void 0 || onPostDeactivate();
        });
      };
      if (returnFocus && checkCanReturnFocus) {
        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);
        return this;
      }
      finishDeactivation();
      return this;
    },
    pause: function pause(pauseOptions) {
      if (!state.active) {
        return this;
      }
      state.manuallyPaused = true;
      return this._setPausedState(true, pauseOptions);
    },
    unpause: function unpause(unpauseOptions) {
      if (!state.active) {
        return this;
      }
      state.manuallyPaused = false;
      if (trapStack[trapStack.length - 1] !== this) {
        return this;
      }
      return this._setPausedState(false, unpauseOptions);
    },
    updateContainerElements: function updateContainerElements(containerElements) {
      var elementsAsArray = [].concat(containerElements).filter(Boolean);
      state.containers = elementsAsArray.map(function(element) {
        return typeof element === "string" ? doc.querySelector(element) : element;
      });
      if (state.active) {
        updateTabbableNodes();
      }
      updateObservedNodes();
      return this;
    }
  };
  Object.defineProperties(trap, {
    _isManuallyPaused: {
      value: function value() {
        return state.manuallyPaused;
      }
    },
    _setPausedState: {
      value: function value(paused, options) {
        if (state.paused === paused) {
          return this;
        }
        state.paused = paused;
        if (paused) {
          var onPause = getOption(options, "onPause");
          var onPostPause = getOption(options, "onPostPause");
          onPause === null || onPause === void 0 || onPause();
          removeListeners();
          updateObservedNodes();
          onPostPause === null || onPostPause === void 0 || onPostPause();
        } else {
          var onUnpause = getOption(options, "onUnpause");
          var onPostUnpause = getOption(options, "onPostUnpause");
          onUnpause === null || onUnpause === void 0 || onUnpause();
          updateTabbableNodes();
          addListeners();
          updateObservedNodes();
          onPostUnpause === null || onPostUnpause === void 0 || onPostUnpause();
        }
        return this;
      }
    }
  });
  trap.updateContainerElements(elements);
  return trap;
};

// node_modules/@vueuse/integrations/useFocusTrap.mjs
function useFocusTrap(target, options = {}) {
  let trap;
  const { immediate, ...focusTrapOptions } = options;
  const hasFocus = ref(false);
  const isPaused = ref(false);
  const activate = (opts) => trap && trap.activate(opts);
  const deactivate = (opts) => trap && trap.deactivate(opts);
  const pause = () => {
    if (trap) {
      trap.pause();
      isPaused.value = true;
    }
  };
  const unpause = () => {
    if (trap) {
      trap.unpause();
      isPaused.value = false;
    }
  };
  const targets = computed(() => {
    const _targets = toValue2(target);
    return (Array.isArray(_targets) ? _targets : [_targets]).map((el) => {
      const _el = toValue2(el);
      return typeof _el === "string" ? _el : unrefElement(_el);
    }).filter(notNullish);
  });
  watch(
    targets,
    (els) => {
      if (!els.length)
        return;
      trap = createFocusTrap(els, {
        ...focusTrapOptions,
        onActivate() {
          hasFocus.value = true;
          if (options.onActivate)
            options.onActivate();
        },
        onDeactivate() {
          hasFocus.value = false;
          if (options.onDeactivate)
            options.onDeactivate();
        }
      });
      if (immediate)
        activate();
    },
    { flush: "post" }
  );
  tryOnScopeDispose(() => deactivate());
  return {
    hasFocus,
    isPaused,
    activate,
    deactivate,
    pause,
    unpause
  };
}

// node_modules/@scalar/api-client/dist/layouts/Modal/ApiClientModal.vue2.js
var V3 = { class: "scalar scalar-app" };
var $3 = { class: "scalar-container" };
var g = ["id"];
var q5 = defineComponent({
  __name: "ApiClientModal",
  setup(H7) {
    const { activeWorkspace: m30 } = z(), { modalState: o8, events: n8 } = je(), l6 = ref(null), s15 = useId(), { activate: u15, deactivate: p25 } = useFocusTrap(l6, {
      allowOutsideClick: true,
      fallbackFocus: `#${s15}`
    }), c14 = (e16) => {
      var t7;
      return E2(e16, n8.hotKeys, (t7 = m30.value) == null ? void 0 : t7.hotKeyConfig);
    };
    watch(
      () => o8.open,
      (e16) => {
        e16 ? (window.addEventListener("keydown", c14), document.documentElement.style.overflow = "hidden", u15({ checkCanFocusTrap: () => nextTick() })) : (window.removeEventListener("keydown", c14), document.documentElement.style.removeProperty("overflow"), p25());
      }
    ), onBeforeMount(() => d());
    const i17 = (e16) => (e16 == null ? void 0 : e16.closeModal) && o8.open && o8.hide();
    return onMounted(() => n8.hotKeys.on(i17)), onBeforeUnmount(() => {
      document.documentElement.style.removeProperty("overflow"), n8.hotKeys.off(i17);
    }), (e16, t7) => withDirectives((openBlock(), createElementBlock("div", V3, [
      createBaseVNode("div", $3, [
        createBaseVNode("div", {
          id: unref(s15),
          ref_key: "client",
          ref: l6,
          "aria-label": "API Client",
          "aria-modal": "true",
          class: "scalar-app-layout scalar-client",
          role: "dialog",
          tabindex: "-1"
        }, [
          createVNode(unref(k2), null, {
            default: withCtx(() => [
              createVNode(unref(RouterView), { key: "$route.fullPath" })
            ]),
            _: 1
          })
        ], 8, g),
        createBaseVNode("div", {
          class: "scalar-app-exit",
          onClick: t7[0] || (t7[0] = (I7) => unref(o8).hide())
        })
      ])
    ], 512)), [
      [vShow, unref(o8).open]
    ]);
  }
});

// node_modules/@scalar/api-client/dist/layouts/Modal/ApiClientModal.vue.js
var a5 = s2(q5, [["__scopeId", "data-v-45e9730e"]]);

// node_modules/@scalar/api-client/dist/router.js
var u3 = () => createRouter({
  history: createMemoryHistory(),
  routes: c3
});

// node_modules/@scalar/api-client/dist/libs/find-request.js
var h8 = (e16) => {
  const r12 = "^" + // start anchor
  e16.replace(/[.*+?^${}()|[\]\\]/g, "\\$&").replace(/\\\{([^}]+)\\\}/g, "([^/]+)") + // replace {param} with capture group
  "$";
  return new RegExp(r12);
};
var l4 = (e16, r12, u15) => {
  let n8 = [];
  return { request: u15.find((t7) => {
    if (t7.method.toLowerCase() !== r12.toLowerCase())
      return false;
    if (t7.path === e16)
      return true;
    const c14 = h8(t7.path), s15 = e16.match(c14);
    return s15 ? (n8 = s15.slice(1).flatMap((p25, f19) => {
      var o8;
      const a18 = (o8 = t7.path.split("{")[f19 + 1]) == null ? void 0 : o8.split("}")[0];
      return a18 ? [{ key: a18, value: p25 }] : [];
    }), true) : false;
  }), pathParams: n8 };
};

// node_modules/@scalar/api-client/dist/libs/get-request-uid-by-path-method.js
var u4 = (t7, d24) => {
  const { requestUid: a18, method: e16, path: o8 } = d24 ?? {};
  if (a18)
    return a18;
  if (!o8 || !e16)
    return Object.keys(t7)[0];
  const s15 = Object.values(t7), n8 = s15.find(
    (c14) => c14.path.toLowerCase() === o8.toLowerCase() && c14.method.toLowerCase() === e16.toLowerCase()
  );
  if (n8)
    return n8.uid;
  const { request: r12 } = l4(o8, e16, s15);
  return (r12 == null ? void 0 : r12.uid) || Object.keys(t7)[0];
};

// node_modules/@scalar/oas-utils/dist/migrations/data-version.js
var DATA_VERSION = "2.5.0";
var DATA_VERSION_LS_LEY = "scalar_api_client_data_version";

// node_modules/@scalar/oas-utils/dist/migrations/local-storage.js
var parseLocalStorage = (lsKey) => {
  const item = localStorage.getItem(lsKey) || "[{}]";
  const data = item[0] === "[" ? parse2(item) : JSON.parse(item);
  return data;
};
var getLocalStorageVersion = () => {
  const collectionStr = localStorage.getItem("collection");
  const dataVersion = localStorage.getItem(DATA_VERSION_LS_LEY);
  if (dataVersion) {
    return dataVersion;
  }
  if (!collectionStr?.length || collectionStr?.[0] === "{") {
    return "0.0.0";
  }
  try {
    const [collection] = Object.values(parse2(collectionStr) ?? {});
    if (collection?.type === "collection") {
      return "2.1.0";
    }
    return "0.0.0";
  } catch (e16) {
    console.error(e16);
    return "0.0.0";
  }
};

// node_modules/@scalar/oas-utils/dist/migrations/semver.js
var semverLessThan = (left, right) => {
  const parseSemver = (version2) => {
    const [major = 0, minor = 0, patch = 0] = version2.split(".").map((part) => Number.parseInt(part, 10));
    return { major, minor, patch };
  };
  const { major: major1, minor: minor1, patch: patch1 } = parseSemver(left);
  const { major: major2, minor: minor2, patch: patch2 } = parseSemver(right);
  if (major1 < major2) {
    return true;
  }
  if (major1 > major2) {
    return false;
  }
  if (minor1 < minor2) {
    return true;
  }
  if (minor1 > minor2) {
    return false;
  }
  return patch1 < patch2;
};

// node_modules/@scalar/oas-utils/dist/migrations/v-2.1.0/migration.js
var migrate_v_2_1_0 = (data) => {
  console.info("Performing data migration v-0.0.0 to v-2.1.0");
  const oldData = {
    ...data,
    // @ts-expect-error Tags used to be called folders
    folders: parseLocalStorage("folder")
  };
  const flattenChildren = (childUids) => childUids.reduce(
    (prev, uid) => {
      const request = oldData.requests[uid];
      if (request) {
        prev.requestUids.add(uid);
        request.securitySchemeUids?.forEach((s15) => prev.authUids.add(s15));
      } else if (oldData.folders[uid]) {
        const { requestUids, tagUids, authUids } = flattenChildren(oldData.folders[uid].childUids ?? []);
        prev.tagUids.add(uid);
        requestUids.forEach((r12) => prev.requestUids.add(r12));
        tagUids.forEach((t7) => prev.tagUids.add(t7));
        authUids.forEach((a18) => prev.authUids.add(a18));
      }
      return prev;
    },
    {
      requestUids: /* @__PURE__ */ new Set(),
      tagUids: /* @__PURE__ */ new Set(),
      authUids: /* @__PURE__ */ new Set()
    }
  );
  const migrateAuth = (scheme) => {
    if (scheme.type === "apiKey") {
      return { type: "apiKey", name: scheme.name, value: scheme.value ?? "" };
    }
    if (scheme.type === "http") {
      return {
        type: "http",
        username: scheme.value ?? "",
        password: scheme.secondValue ?? "",
        token: scheme.value ?? ""
      };
    }
    if (scheme.type === "oauth2" && scheme.flow.type === "implicit") {
      return {
        type: "oauth-implicit",
        token: scheme.flow.token ?? ""
      };
    }
    if (scheme.type === "oauth2" && scheme.flow.type === "password") {
      return {
        type: "oauth-password",
        token: scheme.flow.token ?? "",
        username: scheme.flow.value ?? "",
        password: scheme.flow.secondValue ?? "",
        clientSecret: scheme.flow.clientSecret ?? ""
      };
    }
    if (scheme.type === "oauth2" && scheme.flow.type === "clientCredentials") {
      return {
        type: "oauth-clientCredentials",
        token: scheme.flow.token ?? "",
        clientSecret: scheme.flow.clientSecret ?? ""
      };
    }
    if (scheme.type === "oauth2" && scheme.flow.type === "authorizationCode") {
      return {
        type: "oauth-authorizationCode",
        token: scheme.flow.token ?? "",
        clientSecret: scheme.flow.clientSecret ?? ""
      };
    }
    return {
      type: "apiKey",
      name: "",
      value: ""
    };
  };
  const requestSecurityDict = {};
  const collections = Object.values(oldData.collections ?? {}).reduce((prev, c14) => {
    const { requestUids, tagUids, authUids } = flattenChildren(c14.childUids ?? []);
    const securitySchemesSet = /* @__PURE__ */ new Set([...authUids, ...Object.values(c14.securitySchemeDict ?? {})]);
    const securitySchemes2 = [...securitySchemesSet];
    requestUids.forEach((r12) => requestSecurityDict[r12] = securitySchemes2);
    const auth = securitySchemes2.reduce(
      (_prev, uid) => {
        const scheme = oldData.securitySchemes[uid];
        if (scheme?.uid && _prev) {
          _prev[uid] = migrateAuth(scheme);
        }
        return _prev;
      },
      {}
    );
    prev[c14.uid] = {
      "type": "collection",
      "openapi": c14.spec?.openapi || "3.1.0",
      "info": c14.spec?.info || { title: "OpenAPI Spec", version: "0.0.1" },
      "security": c14.spec?.security || [],
      "externalDocs": c14.spec?.externalDocs,
      "uid": c14.uid,
      securitySchemes: securitySchemes2,
      "selectedSecuritySchemeUids": [],
      "selectedServerUid": c14.selectedServerUid || c14.spec?.serverUids?.[0] || "",
      "servers": c14.spec?.serverUids || [],
      "requests": [...requestUids],
      "tags": [...tagUids],
      auth,
      "children": c14.childUids || [],
      "x-scalar-icon": "interface-content-folder",
      "watchMode": false,
      "watchModeStatus": "IDLE"
    };
    return prev;
  }, {});
  const cookies = oldData.cookies ?? {};
  const environments = Object.values(oldData.environments ?? {}).reduce(
    (prev, e16) => {
      prev[e16.uid] = {
        ...e16,
        value: e16.raw ?? ""
      };
      return prev;
    },
    {}
  );
  const requests = Object.values(oldData.requests ?? {}).reduce((prev, r12) => {
    const parameters = [
      ...Object.values(r12.parameters?.path ?? {}),
      ...Object.values(r12.parameters?.query ?? {}),
      ...Object.values(r12.parameters?.headers ?? {}),
      ...Object.values(r12.parameters?.cookies ?? {})
    ].filter((p25) => p25);
    const selectedSecuritySchemeUids = (r12.selectedSecuritySchemeUids || []).filter(
      (s15) => requestSecurityDict[r12.uid]?.includes(s15)
    );
    prev[r12.uid] = {
      ...r12,
      parameters,
      type: "request",
      method: r12.method?.toLowerCase() ?? "get",
      examples: r12.childUids || [],
      selectedSecuritySchemeUids,
      selectedServerUid: "",
      servers: []
    };
    return prev;
  }, {});
  const requestExamples = Object.values(oldData.requestExamples ?? {}).reduce(
    (prev, e16) => {
      prev[e16.uid] = {
        ...e16,
        type: "requestExample"
      };
      return prev;
    },
    {}
  );
  const migrateFlow = (flow) => {
    const base = {
      refreshUrl: flow.refreshUrl || "",
      selectedScopes: flow.selectedScopes || [],
      scopes: flow.scopes || {}
    };
    if (flow.type === "implicit") {
      return {
        ...flow,
        ...base,
        "type": "implicit",
        "x-scalar-redirect-uri": ("redirectUri" in flow ? flow.redirectUri : "") || ""
      };
    }
    if (flow.type === "password") {
      return {
        ...flow,
        ...base,
        tokenUrl: flow.tokenUrl || ""
      };
    }
    if (flow.type === "clientCredentials") {
      return {
        ...flow,
        ...base,
        tokenUrl: flow.tokenUrl || ""
      };
    }
    return {
      ...flow,
      ...base,
      "x-usePkce": "no",
      "x-scalar-redirect-uri": ("redirectUri" in flow ? flow.redirectUri : "") || "",
      "authorizationUrl": flow.authorizationUrl || "",
      "tokenUrl": flow.tokenUrl || ""
    };
  };
  const getNameKey = (scheme) => {
    switch (scheme?.type) {
      case "apiKey":
        return `${capitalize2(scheme.in)}`;
      case "http": {
        return `${capitalize2(scheme.scheme)} Authentication`;
      }
      case "oauth2":
        return camelToTitleWords(scheme.flow.type);
      case "openIdConnect":
        return "Open ID Connect";
      default:
        return "None";
    }
  };
  const securitySchemes = Object.values(oldData.securitySchemes ?? {}).reduce(
    (prev, s15) => {
      prev[s15.uid] = s15.type === "oauth2" ? {
        ...s15,
        "nameKey": getNameKey(s15),
        "x-scalar-client-id": s15.clientId || "",
        "flow": migrateFlow(s15.flow)
      } : { ...s15, nameKey: getNameKey(s15) };
      return prev;
    },
    {}
  );
  const servers = Object.values(oldData.servers ?? {}).reduce((prev, s15) => {
    prev[s15.uid] = {
      ...s15,
      variables: s15.variables ?? {}
    };
    return prev;
  }, {});
  const tags = Object.values(oldData.folders ?? {}).reduce((prev, f19) => {
    prev[f19.uid] = {
      "type": "tag",
      "uid": f19.uid,
      "name": f19.name || "unknownTag",
      "description": f19.description,
      "children": f19.childUids || [],
      "x-scalar-children": []
    };
    return prev;
  }, {});
  const workspaces = Object.values(oldData.workspaces ?? {}).reduce((prev, w13) => {
    prev[w13.uid] = {
      ...w13,
      description: w13.description ?? "Basic Scalar Workspace",
      cookies: w13.cookieUids || [],
      collections: w13.collectionUids || [],
      environments: w13.environmentUids || []
    };
    return prev;
  }, {});
  return {
    collections,
    cookies,
    environments,
    requestExamples,
    requests,
    securitySchemes,
    servers,
    tags,
    workspaces
  };
};

// node_modules/@scalar/oas-utils/dist/migrations/v-2.2.0/migration.js
var migrateSecurityScheme = (scheme, auth) => {
  if (scheme.type === "apiKey" && auth.type === "apiKey") {
    return {
      ...scheme,
      value: auth.value
    };
  }
  if (scheme.type === "http" && auth.type === "http") {
    return {
      ...scheme,
      username: auth.username,
      password: auth.password,
      token: auth.token
    };
  }
  if (scheme.type === "oauth2") {
    const { flow, ..._scheme } = scheme;
    if (flow.type === "implicit" && auth.type === "oauth-implicit") {
      return {
        ..._scheme,
        flows: {
          implicit: {
            ...flow,
            "scopes": flow.scopes,
            "token": auth.token,
            "x-scalar-client-id": _scheme["x-scalar-client-id"]
          }
        }
      };
    }
    if (flow.type === "password" && auth.type === "oauth-password") {
      return {
        ..._scheme,
        flows: {
          password: {
            ...flow,
            "username": auth.username,
            "password": auth.password,
            "token": auth.token,
            "clientSecret": auth.clientSecret,
            "scopes": flow.scopes,
            "x-scalar-client-id": _scheme["x-scalar-client-id"]
          }
        }
      };
    }
    if (flow.type === "clientCredentials" && auth.type === "oauth-clientCredentials") {
      return {
        ..._scheme,
        flows: {
          clientCredentials: {
            ...flow,
            "token": auth.token,
            "clientSecret": auth.clientSecret,
            "scopes": flow.scopes,
            "x-scalar-client-id": _scheme["x-scalar-client-id"]
          }
        }
      };
    }
    if (flow.type === "authorizationCode" && auth.type === "oauth-authorizationCode") {
      return {
        ..._scheme,
        flows: {
          authorizationCode: {
            ...flow,
            "token": auth.token,
            "clientSecret": auth.clientSecret,
            "scopes": flow.scopes,
            "x-scalar-client-id": _scheme["x-scalar-client-id"]
          }
        }
      };
    }
  }
  return null;
};
var migrate_v_2_2_0 = (data) => {
  console.info("Performing data migration v-2.1.0 to v-2.2.0");
  const securitySchemes = Object.values(data.securitySchemes).reduce(
    (prev, s15) => {
      const collection = Object.values(data.collections).find((c14) => c14.securitySchemes.includes(s15.uid));
      const auth = collection?.auth?.[s15.uid];
      if (!auth) {
        return prev;
      }
      const newScheme = migrateSecurityScheme(s15, auth);
      if (newScheme) {
        prev[s15.uid] = newScheme;
      }
      return prev;
    },
    {}
  );
  const servers = data.servers;
  return {
    ...data,
    securitySchemes,
    servers
  };
};

// node_modules/@scalar/oas-utils/dist/migrations/v-2.3.0/migration.js
var migrate_v_2_3_0 = (data) => {
  console.info("Performing data migration v-2.2.0 to v-2.3.0");
  const environments = data.environments;
  const workspaces = Object.values(data.workspaces).reduce((prev, w13) => {
    const workspaceEnvironments = {};
    Object.entries(environments).forEach(([envId, envData]) => {
      const parsedData = typeof envData.value === "string" ? JSON.parse(envData.value) : envData.value;
      if (envId === "default") {
        Object.assign(workspaceEnvironments, parsedData);
      }
    });
    prev[w13.uid] = {
      ...w13,
      environments: workspaceEnvironments
    };
    return prev;
  }, {});
  const collections = Object.values(data.collections).reduce((prev, c14) => {
    prev[c14.uid] = {
      ...c14,
      "x-scalar-environments": c14["x-scalar-environments"] || {}
    };
    return prev;
  }, {});
  Object.values(workspaces).forEach((workspace) => {
    Object.entries(environments).forEach(([envKey, envData]) => {
      if (envKey !== "default") {
        const parsedData = typeof envData.value === "string" ? JSON.parse(envData.value) : envData.value;
        const envName = envData.name;
        Object.values(collections).forEach((collection) => {
          collection["x-scalar-environments"] = collection["x-scalar-environments"] || {};
          collection["x-scalar-environments"][envName] = {
            variables: parsedData
          };
          if (workspace.activeEnvironmentId === envKey) {
            collection["x-scalar-active-environment"] = envName ?? "";
          }
        });
      }
    });
  });
  return {
    ...data,
    collections,
    workspaces
  };
};

// node_modules/@scalar/oas-utils/dist/migrations/v-2.4.0/migration.js
var migrate_v_2_4_0 = (data) => {
  console.info("Performing data migration v-2.3.0 to v-2.4.0");
  const collections = Object.values(data.collections).reduce((prev, c14) => {
    if (c14.info?.title === "Drafts") {
      c14.servers = [];
      Object.values(data.requests).forEach((request) => {
        if (request.selectedServerUid && c14.requests.includes(request.uid)) {
          const server = data.servers[request.selectedServerUid];
          if (server) {
            request.path = `${server.url}${request.path}`;
          }
          request.selectedServerUid = "";
        }
      });
    }
    prev[c14.uid] = c14;
    return prev;
  }, {});
  return {
    ...data,
    collections
  };
};

// node_modules/@scalar/oas-utils/dist/migrations/v-2.5.0/migration.js
var migrate_v_2_5_0 = (data) => {
  console.info("Performing data migration v-2.4.0 to v-2.5.0");
  const cookies = Object.entries(data.cookies || {}).reduce((acc, [key, cookie]) => {
    acc[key] = {
      ...cookie,
      uid: cookie.uid
    };
    return acc;
  }, {});
  const collections = Object.entries(data.collections || {}).reduce(
    (acc, [key, collection]) => {
      acc[key] = {
        ...collection,
        info: collection.info ?? {
          title: "API",
          version: "1.0"
        },
        uid: collection.uid,
        selectedSecuritySchemeUids: collection.selectedSecuritySchemeUids,
        servers: collection.servers.map((uid) => uid),
        tags: collection.tags.map((uid) => uid),
        requests: collection.requests.map((uid) => uid),
        children: collection.children.map((uid) => uid),
        selectedServerUid: collection.selectedServerUid,
        useCollectionSecurity: false
      };
      return acc;
    },
    {}
  );
  const environments = Object.entries(data.environments || {}).reduce(
    (acc, [key, environment]) => {
      acc[key] = {
        ...environment,
        uid: environment.uid
      };
      return acc;
    },
    {}
  );
  const requests = Object.entries(data.requests || {}).reduce(
    (acc, [key, request]) => {
      acc[key] = {
        ...request,
        uid: request.uid,
        servers: request.servers,
        selectedServerUid: request.selectedServerUid,
        examples: request.examples,
        selectedSecuritySchemeUids: request.selectedSecuritySchemeUids
      };
      return acc;
    },
    {}
  );
  const requestExamples = Object.entries(data.requestExamples || {}).reduce(
    (acc, [key, example]) => {
      const headers = example.parameters.headers;
      const hasAcceptHeader = headers.some((header) => header.key.toLowerCase() === "accept");
      if (!hasAcceptHeader) {
        headers.unshift({ key: "Accept", value: "*/*", enabled: true });
      }
      acc[key] = {
        ...example,
        uid: example.uid,
        requestUid: example.requestUid,
        parameters: {
          ...example.parameters,
          headers
        }
      };
      return acc;
    },
    {}
  );
  const securitySchemes = Object.entries(data.securitySchemes || {}).reduce(
    (acc, [key, securityScheme]) => {
      acc[key] = {
        ...securityScheme,
        uid: securityScheme.uid
      };
      return acc;
    },
    {}
  );
  const servers = Object.entries(data.servers || {}).reduce((acc, [key, server]) => {
    acc[key] = {
      ...server,
      uid: server.uid,
      variables: Object.entries(server.variables || {}).reduce((variablesAcc, [variableKey, variable]) => {
        variablesAcc[variableKey] = {
          default: variable.default ?? "",
          description: variable.description ?? "",
          ...variable.enum?.length && { enum: variable.enum }
        };
        return variablesAcc;
      }, {})
    };
    return acc;
  }, {});
  const tags = Object.entries(data.tags || {}).reduce((acc, [key, tag]) => {
    acc[key] = {
      ...tag,
      uid: tag.uid,
      children: tag.children
    };
    return acc;
  }, {});
  const workspaces = Object.entries(data.workspaces || {}).reduce(
    (acc, [key, workspace]) => {
      acc[key] = {
        ...workspace,
        uid: workspace.uid,
        collections: workspace.collections.map((uid) => uid),
        cookies: workspace.cookies.map((uid) => uid),
        selectedHttpClient: {
          targetKey: "shell",
          clientKey: "curl"
        }
      };
      return acc;
    },
    {}
  );
  return {
    ...data,
    collections,
    cookies,
    environments,
    requests,
    requestExamples,
    securitySchemes,
    servers,
    tags,
    workspaces
  };
};

// node_modules/@scalar/oas-utils/dist/migrations/migrator.js
var migrator = () => {
  const dataVersion = getLocalStorageVersion();
  console.info("Data version: " + dataVersion);
  let data = {
    collections: parseLocalStorage("collection"),
    cookies: parseLocalStorage("cookie"),
    environments: parseLocalStorage("environment"),
    requestExamples: parseLocalStorage("requestExample"),
    requests: parseLocalStorage("request"),
    securitySchemes: parseLocalStorage("securityScheme"),
    servers: parseLocalStorage("server"),
    tags: parseLocalStorage("tag"),
    workspaces: parseLocalStorage("workspace")
  };
  if (semverLessThan(dataVersion, "2.1.0")) {
    data = migrate_v_2_1_0(data);
  }
  if (semverLessThan(dataVersion, "2.2.0")) {
    data = migrate_v_2_2_0(data);
  }
  if (semverLessThan(dataVersion, "2.3.0")) {
    data = migrate_v_2_3_0(data);
  }
  if (semverLessThan(dataVersion, "2.4.0")) {
    data = migrate_v_2_4_0(data);
  }
  if (semverLessThan(dataVersion, "2.5.0")) {
    data = migrate_v_2_5_0(data);
  }
  data = {
    collections: Object.values(data.collections),
    cookies: Object.values(data.cookies),
    environments: Object.values(data.environments),
    requestExamples: Object.values(data.requestExamples),
    requests: Object.values(data.requests),
    securitySchemes: Object.values(data.securitySchemes),
    servers: Object.values(data.servers),
    tags: Object.values(data.tags),
    workspaces: Object.values(data.workspaces)
  };
  return data;
};

// node_modules/@scalar/api-client/dist/libs/local-storage.js
var e6 = (o8, t7, s15) => o8.forEach((a18) => {
  const r12 = schemaModel(a18, t7, false);
  r12 && s15(r12);
});
var z4 = (o8) => {
  const {
    collectionMutators: t7,
    cookieMutators: s15,
    environmentMutators: a18,
    tagMutators: r12,
    requestExampleMutators: m30,
    requestMutators: d24,
    serverMutators: u15,
    securitySchemeMutators: i17,
    workspaceMutators: l6
  } = o8;
  try {
    const {
      collections: c14,
      cookies: n8,
      environments: S8,
      requestExamples: h21,
      requests: p25,
      servers: A3,
      securitySchemes: w13,
      tags: M9,
      workspaces: f19
    } = migrator();
    e6(c14, collectionSchema, t7.rawAdd), e6(n8, cookieSchema, s15.add), e6(S8, environmentSchema, a18.add), e6(h21, requestExampleSchema, m30.rawAdd), e6(p25, requestSchema, d24.rawAdd), e6(A3, serverSchema, u15.rawAdd), e6(w13, securitySchemeSchema, i17.rawAdd), e6(M9, tagSchema, r12.rawAdd), e6(f19, workspaceSchema, l6.rawAdd), localStorage.setItem(DATA_VERSION_LS_LEY, DATA_VERSION);
  } catch (c14) {
    console.error(c14);
  }
};

// node_modules/@scalar/api-client/dist/libs/create-client.js
var xe2 = ({
  el: L5,
  appComponent: b10,
  configuration: y10 = {},
  isReadOnly: n8 = false,
  store: E11,
  persistData: k13 = true,
  mountOnInitialize: I7 = true,
  layout: m30 = "desktop",
  router: u15
}) => {
  const s15 = ref(apiClientConfigurationSchema.parse(y10)), a18 = E11 || ge({
    proxyUrl: s15.value.proxyUrl,
    theme: s15.value.theme,
    showSidebar: s15.value.showSidebar ?? true,
    hideClientButton: s15.value.hideClientButton ?? false,
    _integration: s15.value._integration,
    useLocalStorage: k13
  }), f19 = Y({ ...a18, router: u15 }), q10 = O({ layout: m30 }), B8 = u({
    plugins: s15.value.plugins ?? []
  }), S8 = () => {
    try {
      return typeof window < "u" && window.localStorage !== void 0;
    } catch {
      return false;
    }
  };
  if (S8() && localStorage.getItem(LS_KEYS.WORKSPACE) && !n8)
    try {
      const e16 = {};
      let t7 = 0, r12 = 0, o8 = "";
      for (o8 in localStorage)
        Object.prototype.hasOwnProperty.call(localStorage, o8) && (r12 = (localStorage[o8].length + o8.length) * 2, t7 += r12, e16[o8] = (r12 / 1024).toFixed(2) + " KB");
      e16.Total = (t7 / 1024).toFixed(2) + " KB", console.table(e16), z4(a18);
    } catch (e16) {
      console.warn("Failed to load from localStorage:", e16);
    }
  else if (!n8 && !s15.value.url && !s15.value.content) {
    if (a18.workspaceMutators.add({
      uid: "default",
      name: "Workspace",
      proxyUrl: s15.value.proxyUrl
    }), S8())
      try {
        localStorage.setItem(DATA_VERSION_LS_LEY, DATA_VERSION);
      } catch (e16) {
        console.warn("Failed to set localStorage version:", e16);
      }
  } else {
    const e16 = workspaceSchema.parse({
      uid: "default",
      name: "Workspace",
      proxyUrl: s15.value.proxyUrl
    });
    a18.workspaceMutators.rawAdd(e16);
  }
  const i17 = createApp(b10);
  i17.use(u15), i17.provide(qe, a18), i17.provide(t, m30), i17.provide(P, f19), i17.provide(p, q10), i17.provide(e, s15), i17.provide(t2, B8), i17.config.idPrefix = "scalar-client";
  const {
    collectionMutators: P10,
    importSpecFile: T9,
    importSpecFromUrl: R8,
    modalState: v13,
    requests: h21,
    securitySchemes: Y5,
    securitySchemeMutators: N10,
    servers: g6,
    workspaceMutators: F4,
    requestExampleMutators: j10
  } = a18, { activeCollection: p25, activeWorkspace: d24 } = f19, w13 = (e16 = L5) => {
    if (!e16) {
      console.error(
        "[@scalar/api-client-modal] Could not create the API client.",
        "Invalid HTML element provided.",
        "Read more: https://github.com/scalar/scalar/tree/main/packages/api-client"
      );
      return;
    }
    i17.mount(e16);
  };
  I7 && w13();
  const M9 = (e16) => {
    const t7 = u4(h21, e16);
    t7 ? u15.push({
      name: "request",
      query: e16 != null && e16._source ? { source: e16._source } : {},
      params: {
        workspace: "default",
        request: t7
      }
    }) : console.warn("[@scalar/api-client] Could not find request for path and method", e16);
  }, A3 = () => {
    var e16;
    a18.collectionMutators.reset(), a18.requestMutators.reset(), a18.requestExampleMutators.reset(), a18.securitySchemeMutators.reset(), a18.serverMutators.reset(), a18.tagMutators.reset(), F4.edit((e16 = d24.value) == null ? void 0 : e16.uid, "collections", []);
  };
  return {
    /** The vue app instance for the modal, be careful with this */
    app: i17,
    resetStore: A3,
    /**
     * Update the API client config
     *
     * Deletes the current store before importing again for now, in the future will Diff and only update what is needed
     */
    updateConfig: async (e16) => {
      var r12, o8;
      const t7 = apiClientConfigurationSchema.parse(e16);
      if (t7.url || t7.content || t7.servers || t7.authentication || t7.slug || t7.title || t7.baseServerURL || t7.proxyUrl || t7.showSidebar) {
        A3();
        const c14 = {
          ...t7,
          useCollectionSecurity: n8
        };
        s15.value = c14, t7.url ? await R8(t7.url, ((r12 = d24.value) == null ? void 0 : r12.uid) ?? "default", c14) : t7.content ? await T9(t7.content, ((o8 = d24.value) == null ? void 0 : o8.uid) ?? "default", c14) : console.error(
          "[@scalar/api-client-modal] Could not create the API client.",
          'Please provide an OpenAPI document: { url: "…" }',
          "Read more: https://github.com/scalar/scalar/tree/main/packages/api-client"
        );
      }
    },
    /** Update the currently selected server via URL */
    updateServer: (e16) => {
      var r12;
      const t7 = Object.values(g6).find((o8) => o8.url === e16);
      t7 && p25.value && P10.edit((r12 = p25.value) == null ? void 0 : r12.uid, "selectedServerUid", t7.uid);
    },
    /** Update the currently selected server via URL */
    onUpdateServer: (e16) => {
      watch(
        () => {
          var t7;
          return (t7 = p25.value) == null ? void 0 : t7.selectedServerUid;
        },
        (t7) => {
          const r12 = Object.values(g6).find((o8) => o8.uid === t7);
          r12 != null && r12.url && e16(r12.url);
        }
      );
    },
    /**
     * Update the auth values, we currently don't change the auth selection
     */
    updateAuth: ({
      nameKey: e16,
      propertyKey: t7,
      value: r12
    }) => {
      const c14 = Object.values(Y5).find((l6) => l6.nameKey === e16);
      c14 && N10.edit(c14.uid, t7, r12);
    },
    /** Route to a method + path */
    route: M9,
    /** Open the API client modal and optionally route to a request */
    open: (e16) => {
      const { method: t7, path: r12, requestUid: o8 } = e16 ?? {};
      (t7 && r12 || o8) && M9(e16), v13.open = true;
    },
    /** Mount the references to a given element */
    mount: w13,
    /** State for controlling the modal */
    modalState: v13,
    /* The workspace store */
    store: a18,
    /** Update the currently selected example */
    updateExample: (e16, t7) => {
      var l6, _22, O11, U6, x12;
      if (!e16 || !t7)
        return;
      const r12 = Object.values(h21).find(
        ({ operationId: W10, path: K6 }) => W10 === t7 || K6 === t7
      );
      if (!r12)
        return;
      const o8 = Object.keys(((l6 = r12.requestBody) == null ? void 0 : l6.content) || {})[0] || "", c14 = (x12 = (U6 = (O11 = (_22 = r12.requestBody) == null ? void 0 : _22.content) == null ? void 0 : O11[o8]) == null ? void 0 : U6.examples) == null ? void 0 : x12[e16];
      c14 && j10.edit(r12.examples[0], "body.raw.value", prettyPrintJson(c14.value));
    }
  };
};

// node_modules/@scalar/api-client/dist/layouts/Modal/create-api-client-modal.js
var y7 = async ({
  el: l6 = null,
  configuration: e16 = {},
  mountOnInitialize: r12 = true,
  store: t7
}) => {
  const n8 = {
    ...e16
  }, o8 = xe2({
    el: l6,
    appComponent: a5,
    configuration: n8,
    persistData: false,
    isReadOnly: true,
    store: t7,
    mountOnInitialize: r12,
    router: u3(),
    layout: "modal"
  }), { importSpecFile: s15, importSpecFromUrl: u15 } = o8.store;
  return t7 || (e16.url ? await u15(e16.url, "default", {
    proxyUrl: e16.proxyUrl,
    useCollectionSecurity: true,
    ...e16
  }) : e16.content && await s15(e16.content, "default", {
    useCollectionSecurity: true,
    ...e16
  })), o8;
};

// node_modules/@scalar/api-reference/dist/features/api-client-modal/useApiClient.js
var n4 = ref(null);
var a7 = () => ({
  client: n4,
  init: async (i17) => {
    const t7 = await y7(i17);
    return n4.value = t7, t7;
  }
});

// node_modules/@scalar/api-reference/dist/features/Search/components/SearchButton.vue.js
var O4 = defineComponent({
  __name: "SearchButton",
  props: {
    searchHotKey: { default: "k" },
    hideModels: { type: Boolean, default: false }
  },
  setup(y10) {
    const d24 = ref(), t7 = W(), { client: c14 } = a7(), i17 = (o8) => {
      var e16;
      (isMacOS() ? o8.metaKey : o8.ctrlKey) && o8.key === y10.searchHotKey && !((e16 = c14.value) != null && e16.modalState.open) && (o8.preventDefault(), o8.stopPropagation(), t7.open ? t7.hide() : t7.show());
    };
    watch(
      () => t7.open,
      (o8, e16) => {
        !o8 && e16 && nextTick(() => {
          var p25;
          (p25 = d24.value) == null || p25.$el.focus();
        });
      }
    ), onMounted(() => window.addEventListener("keydown", i17)), onBeforeUnmount(() => window.removeEventListener("keydown", i17));
    function h21() {
      t7.show();
    }
    return (o8, e16) => (openBlock(), createElementBlock(Fragment, null, [
      createVNode(unref(_8), {
        ref_key: "button",
        ref: d24,
        class: normalizeClass(["w-full", o8.$attrs.class]),
        onClick: h21
      }, {
        shortcut: withCtx(() => [
          unref(isMacOS)() ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
            e16[0] || (e16[0] = createBaseVNode("span", { class: "sr-only" }, "Command", -1)),
            e16[1] || (e16[1] = createBaseVNode("span", { "aria-hidden": "true" }, "⌘", -1))
          ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
            e16[2] || (e16[2] = createBaseVNode("span", { class: "sr-only" }, "CTRL", -1)),
            e16[3] || (e16[3] = createBaseVNode("span", { "aria-hidden": "true" }, "⌃", -1))
          ], 64)),
          createTextVNode(" " + toDisplayString(o8.searchHotKey), 1)
        ]),
        default: withCtx(() => [
          e16[4] || (e16[4] = createBaseVNode("span", { class: "sr-only" }, "Open Search", -1)),
          e16[5] || (e16[5] = createBaseVNode("span", {
            "aria-hidden": "true",
            class: "sidebar-search-placeholder"
          }, " Search ", -1))
        ]),
        _: 1,
        __: [4, 5]
      }, 8, ["class"]),
      createVNode(m11, {
        modalState: unref(t7),
        hideModels: o8.hideModels
      }, null, 8, ["modalState", "hideModels"])
    ], 64));
  }
});

// node_modules/@scalar/api-reference/dist/v2/blocks/scalar-request-example-block/helpers/generate-client-options.js
var y8 = (t7) => `custom/${t7.lang}`;
var m13 = (t7) => t7 === true ? [] : snippetz().clients().flatMap((e16) => {
  const n8 = e16.clients.flatMap((r12) => {
    const c14 = `${e16.key}/${r12.client}`;
    if (Array.isArray(t7) && t7.includes(r12.client))
      return [];
    if (typeof t7 == "object" && t7 !== null) {
      const i17 = t7[e16.key];
      if (i17 === true)
        return [];
      if (Array.isArray(i17) && i17.includes(r12.client))
        return [];
    }
    return {
      id: c14,
      lang: r12.client === "curl" ? "curl" : e16.key,
      title: `${capitalize(e16.title)} ${r12.title}`,
      label: r12.title,
      targetKey: e16.key,
      targetTitle: e16.title,
      clientKey: r12.client
    };
  });
  return n8.length === 0 ? [] : {
    label: e16.title,
    options: n8
  };
});

// node_modules/@scalar/api-reference/dist/components/SectionFlare/SectionFlare.vue.js
var s7 = {};
var d6 = { class: "section-flare" };
function o2(v13, a18) {
  return openBlock(), createElementBlock("div", d6, a18[0] || (a18[0] = [
    createStaticVNode('<div class="section-flare-item" data-v-2a9c8c02></div><div class="section-flare-item" data-v-2a9c8c02></div><div class="section-flare-item" data-v-2a9c8c02></div><div class="section-flare-item" data-v-2a9c8c02></div><div class="section-flare-item" data-v-2a9c8c02></div><div class="section-flare-item" data-v-2a9c8c02></div><div class="section-flare-item" data-v-2a9c8c02></div><div class="section-flare-item" data-v-2a9c8c02></div>', 8)
  ]));
}
var f5 = s4(s7, [["render", o2], ["__scopeId", "data-v-2a9c8c02"]]);

// node_modules/@scalar/api-reference/dist/components/IntersectionObserver.vue.js
var x7 = defineComponent({
  __name: "IntersectionObserver",
  props: {
    id: {},
    is: {}
  },
  emits: ["intersecting"],
  setup(o8, { emit: r12 }) {
    const i17 = o8, s15 = r12, n8 = ref(), c14 = (e16) => {
      const t7 = e16.offsetHeight;
      return `${t7 / 2}px 0px ${t7 / 2}px 0px`;
    }, a18 = (e16) => e16.offsetHeight < window.innerHeight ? 0.8 : 0.5;
    return onMounted(() => {
      if (n8.value) {
        const e16 = {
          rootMargin: c14(n8.value),
          threshold: a18(n8.value)
        };
        useIntersectionObserver(
          n8,
          ([{ isIntersecting: t7 }]) => {
            t7 && i17.id && s15("intersecting");
          },
          e16
        );
      }
    }), (e16, t7) => (openBlock(), createBlock(resolveDynamicComponent(e16.is ?? "div"), {
      id: e16.id,
      ref_key: "intersectionObserverRef",
      ref: n8
    }, {
      default: withCtx(() => [
        renderSlot(e16.$slots, "default")
      ]),
      _: 3
    }, 8, ["id"]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Introduction/Description.vue2.js
var F2 = {
  key: 0,
  class: "introduction-description"
};
var U3 = defineComponent({
  __name: "Description",
  props: {
    value: {}
  },
  setup(m30) {
    const o8 = m30, p25 = computed(() => {
      if (!o8.value)
        return [];
      const e16 = new BananaSlug();
      return splitContent(o8.value).map((t7) => {
        const [r12] = getHeadings(t7);
        return {
          id: r12 ? l6({
            ...r12,
            slug: e16.slug(r12.value)
          }) : void 0,
          content: t7
        };
      });
    }), { getHeadingId: l6, getFullHash: g6, isIntersectionEnabled: f19, replaceUrlState: v13 } = T();
    function h21(e16 = "") {
      f19.value && v13(e16);
    }
    const _22 = new BananaSlug(), k13 = (e16) => (e16.data = {
      hProperties: {
        id: l6({
          depth: e16.depth,
          value: e16.children[0].value,
          slug: _22.slug(e16.children[0].value)
        })
      }
    }, e16);
    return (e16, y10) => e16.value ? (openBlock(), createElementBlock("div", F2, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(p25.value, (t7) => (openBlock(), createElementBlock(Fragment, {
        key: t7.id
      }, [
        t7.id ? (openBlock(), createBlock(x7, {
          key: 0,
          id: unref(g6)(t7.id),
          class: "introduction-description-heading",
          onIntersecting: () => h21(t7.id)
        }, {
          default: withCtx(() => [
            createVNode(unref(C3), {
              transform: k13,
              transformType: "heading",
              value: t7.content
            }, null, 8, ["value"])
          ]),
          _: 2
        }, 1032, ["id", "onIntersecting"])) : (openBlock(), createBlock(unref(C3), {
          key: 1,
          value: t7.content,
          withImages: ""
        }, null, 8, ["value"]))
      ], 64))), 128))
    ])) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Introduction/Description.vue.js
var i7 = s4(U3, [["__scopeId", "data-v-d2a06436"]]);

// node_modules/@scalar/api-reference/dist/components/Section/SectionContainer.vue2.js
var s8 = {
  key: 1,
  class: "section-container"
};
var c6 = defineComponent({
  __name: "SectionContainer",
  props: {
    omit: { type: Boolean }
  },
  setup(i17) {
    return (e16, a18) => e16.omit ? renderSlot(e16.$slots, "default", { key: 0 }, void 0, true) : (openBlock(), createElementBlock("div", s8, [
      renderSlot(e16.$slots, "default", {}, void 0, true)
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Section/SectionContainer.vue.js
var i8 = s4(c6, [["__scopeId", "data-v-20a1472a"]]);

// node_modules/@scalar/api-reference/dist/components/Section/Section.vue2.js
var v6 = defineComponent({
  __name: "Section",
  props: {
    id: {},
    label: {}
  },
  setup(i17) {
    const e16 = i17, { getSectionId: r12, isIntersectionEnabled: n8, replaceUrlState: s15 } = T(), { setCollapsedSidebarItem: a18 } = l3();
    function l6() {
      var t7, o8;
      !e16.label || !n8.value || (s15(e16.id ?? ""), ((t7 = e16.id) != null && t7.startsWith("model") || (o8 = e16.id) != null && o8.startsWith("webhook")) && a18(r12(e16.id), true));
    }
    return (t7, o8) => (openBlock(), createBlock(x7, {
      is: "section",
      id: t7.id,
      class: "section",
      onIntersecting: l6
    }, {
      default: withCtx(() => [
        renderSlot(t7.$slots, "default", {}, void 0, true)
      ]),
      _: 3
    }, 8, ["id"]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Section/Section.vue.js
var p7 = s4(v6, [["__scopeId", "data-v-393971a5"]]);

// node_modules/@scalar/api-reference/dist/components/LoadingSkeleton.vue2.js
var m14 = defineComponent({
  __name: "LoadingSkeleton",
  props: {
    lines: { default: 1 }
  },
  setup(i17) {
    return (e16, p25) => (openBlock(true), createElementBlock(Fragment, null, renderList([...Array(e16.lines).keys()], (r12) => (openBlock(), createElementBlock("div", {
      key: r12,
      class: normalizeClass(["loading", { "single-line": e16.lines === 1 }])
    }, null, 2))), 128));
  }
});

// node_modules/@scalar/api-reference/dist/components/LoadingSkeleton.vue.js
var m15 = s4(m14, [["__scopeId", "data-v-8e0226d7"]]);

// node_modules/@scalar/api-reference/dist/components/Section/SectionContent.vue2.js
var s9 = { class: "section-content" };
var f6 = defineComponent({
  __name: "SectionContent",
  props: {
    loading: { type: Boolean, default: false }
  },
  setup(c14) {
    return (e16, i17) => (openBlock(), createElementBlock("div", s9, [
      e16.loading ? (openBlock(), createBlock(m15, {
        key: 1,
        lines: 8
      })) : renderSlot(e16.$slots, "default", { key: 0 }, void 0, true)
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Section/SectionContent.vue.js
var p8 = s4(f6, [["__scopeId", "data-v-9735459e"]]);

// node_modules/@scalar/api-reference/dist/components/Badge/Badge.vue2.js
var u5 = defineComponent({
  __name: "Badge",
  props: {
    color: {}
  },
  setup(e16) {
    const o8 = computed(
      () => e16.color ? {
        "--badge-background-color": e16.color,
        "--badge-text-color": `color-mix(in srgb, ${e16.color}, black 40%)`
      } : {}
    );
    return (l6, s15) => (openBlock(), createElementBlock("div", {
      class: "badge",
      style: normalizeStyle(o8.value)
    }, [
      renderSlot(l6.$slots, "default", {}, void 0, true)
    ], 4));
  }
});

// node_modules/@scalar/api-reference/dist/components/Badge/Badge.vue.js
var d7 = s4(u5, [["__scopeId", "data-v-3dedb7e4"]]);

// node_modules/@scalar/api-reference/dist/components/Section/SectionHeader.vue2.js
var d8 = { class: "section-header-wrapper xl:gap-12" };
var u6 = defineComponent({
  __name: "SectionHeader",
  props: {
    loading: { type: Boolean },
    tight: { type: Boolean }
  },
  setup(p25) {
    return (e16, c14) => (openBlock(), createElementBlock("div", d8, [
      e16.loading ? (openBlock(), createBlock(m15, { key: 0 })) : (openBlock(), createElementBlock("div", {
        key: 1,
        class: normalizeClass(["section-header", { tight: e16.tight }])
      }, [
        renderSlot(e16.$slots, "default", {}, void 0, true)
      ], 2)),
      e16.$slots.links ? renderSlot(e16.$slots, "links", { key: 2 }, void 0, true) : createCommentVNode("", true)
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Section/SectionHeader.vue.js
var m16 = s4(u6, [["__scopeId", "data-v-465a7a78"]]);

// node_modules/@scalar/api-reference/dist/components/Section/SectionHeaderTag.vue2.js
var d9 = defineComponent({
  __name: "SectionHeaderTag",
  props: {
    level: { default: 1 }
  },
  setup(s15) {
    return (e16, c14) => (openBlock(), createBlock(resolveDynamicComponent(`h${e16.level}`), { class: "section-header-label" }, {
      default: withCtx(() => [
        renderSlot(e16.$slots, "default", {}, void 0, true)
      ]),
      _: 3
    }));
  }
});

// node_modules/@scalar/api-reference/dist/components/Section/SectionHeaderTag.vue.js
var e7 = s4(d9, [["__scopeId", "data-v-f1ac6c38"]]);

// node_modules/@scalar/api-reference/dist/components/LinkList/LinkList.vue2.js
var w4 = defineComponent({
  __name: "LinkList",
  setup(v13) {
    const e16 = ref(), r12 = ref(false), n8 = () => {
      if (!e16.value)
        return;
      const { scrollWidth: o8, clientWidth: l6 } = e16.value;
      r12.value = o8 > l6;
    };
    let t7 = null;
    return onMounted(() => {
      n8(), window.addEventListener("resize", n8), e16.value && (t7 = new MutationObserver(() => {
        n8();
      }), t7.observe(e16.value, {
        childList: true,
        subtree: true
      }));
    }), onUnmounted(() => {
      window.removeEventListener("resize", n8), t7 && (t7.disconnect(), t7 = null);
    }), (o8, l6) => (openBlock(), createElementBlock("div", {
      ref_key: "containerRef",
      ref: e16,
      class: normalizeClass([{ "icons-only": r12.value }, "custom-scroll mb-3 flex h-auto min-h-8 max-w-full items-center gap-2 overflow-x-auto text-xs whitespace-nowrap xl:mb-1.5"])
    }, [
      renderSlot(o8.$slots, "default", {}, void 0, true)
    ], 2));
  }
});

// node_modules/@scalar/api-reference/dist/components/LinkList/LinkList.vue.js
var p9 = s4(w4, [["__scopeId", "data-v-0939d4d9"]]);

// node_modules/@scalar/api-reference/dist/features/external-docs/ExternalDocs.vue.js
var d10 = {
  key: 0,
  class: "group flex items-center last:border-r-0 xl:border-r xl:first:ml-auto"
};
var m17 = ["href"];
var p10 = {
  key: 0,
  class: "ml-1 empty:hidden"
};
var u7 = {
  key: 1,
  class: "ml-1 empty:hidden"
};
var v7 = defineComponent({
  __name: "ExternalDocs",
  props: {
    value: {}
  },
  setup(f19) {
    return (e16, h21) => e16.value ? (openBlock(), createElementBlock("div", d10, [
      createBaseVNode("a", {
        href: e16.value.url,
        class: "text-c-1 hover:bg-b-2 mr-2 flex min-h-7 min-w-7 items-center rounded-lg border px-2 py-1 no-underline group-last:mr-0 xl:border-none",
        target: "_blank",
        rel: "noopener noreferrer"
      }, [
        createVNode(unref(_), {
          weight: "bold",
          class: "size-3 text-current"
        }),
        e16.value.description ? (openBlock(), createElementBlock("span", p10, toDisplayString(e16.value.description), 1)) : (openBlock(), createElementBlock("span", u7, toDisplayString(e16.value.url), 1))
      ], 8, m17)
    ])) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/features/info-object/Contact.vue.js
var h9 = {
  key: 0,
  class: "group flex items-center last:border-r-0 xl:border-r xl:first:ml-auto"
};
var b3 = ["href"];
var k7 = { class: "ml-1 empty:hidden" };
var E4 = defineComponent({
  __name: "Contact",
  props: {
    value: {}
  },
  setup(_22) {
    const n8 = cva({
      base: "text-c-1 mr-2 flex min-h-7 min-w-7 items-center rounded-lg border px-2 py-1 group-last:mr-0 xl:border-none",
      variants: {
        link: {
          true: "no-underline hover:bg-b-2"
        }
      }
    });
    return (e16, g6) => {
      var o8, l6, s15;
      return e16.value ? (openBlock(), createElementBlock("div", h9, [
        (o8 = e16.value) != null && o8.email ? (openBlock(), createElementBlock("a", {
          key: 0,
          class: normalizeClass(unref(n8)({ link: true })),
          href: `mailto:${(l6 = e16.value) == null ? void 0 : l6.email}`
        }, [
          createVNode(unref(y), {
            weight: "bold",
            class: "size-3 text-current"
          }),
          createBaseVNode("span", k7, toDisplayString(e16.value.name), 1)
        ], 10, b3)) : (s15 = e16.value) != null && s15.name ? (openBlock(), createElementBlock("span", {
          key: 1,
          class: normalizeClass(unref(n8)({ link: false }))
        }, toDisplayString(e16.value.name), 3)) : createCommentVNode("", true)
      ])) : createCommentVNode("", true);
    };
  }
});

// node_modules/@scalar/api-reference/dist/features/info-object/License.vue.js
var p11 = { class: "group flex h-fit items-center last:border-r-0 xl:border-r xl:first:ml-auto" };
var f7 = ["href"];
var h10 = { class: "ml-1 empty:hidden" };
var _12 = { class: "ml-1 empty:hidden" };
var k8 = defineComponent({
  __name: "License",
  props: {
    value: {}
  },
  setup(v13) {
    return (e16, b10) => {
      var n8, o8, l6;
      return openBlock(), createElementBlock("div", p11, [
        (n8 = e16.value) != null && n8.url ? (openBlock(), createElementBlock("a", {
          key: 0,
          class: "text-c-1 hover:bg-b-2 mr-2 flex min-h-7 min-w-7 items-center rounded-lg border px-2 py-1 no-underline group-last:mr-0 xl:border-none",
          href: e16.value.url,
          target: "_blank",
          rel: "noopener noreferrer"
        }, [
          createVNode(unref(v), {
            weight: "bold",
            class: "size-3 text-current"
          }),
          createBaseVNode("span", h10, toDisplayString(((o8 = e16.value) == null ? void 0 : o8.name) || e16.value.identifier || e16.value.url), 1)
        ], 8, f7)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
          createVNode(unref(v), {
            weight: "bold",
            class: "size-3 text-current"
          }),
          createBaseVNode("span", _12, toDisplayString((l6 = e16.value) == null ? void 0 : l6.name), 1)
        ], 64))
      ]);
    };
  }
});

// node_modules/@scalar/api-reference/dist/features/info-object/TermsOfService.vue.js
var d11 = {
  key: 0,
  class: "group flex items-center last:border-r-0 xl:border-r xl:first:ml-auto"
};
var i9 = ["href"];
var _13 = defineComponent({
  __name: "TermsOfService",
  props: {
    value: {}
  },
  setup(p25) {
    return (e16, r12) => e16.value ? (openBlock(), createElementBlock("div", d11, [
      createBaseVNode("a", {
        class: "text-c-1 hover:bg-b-2 mr-2 flex min-h-7 min-w-7 items-center rounded-lg border px-2 py-1 no-underline group-last:mr-0 xl:border-none",
        href: e16.value,
        target: "_blank",
        rel: "noopener noreferrer"
      }, [
        createVNode(unref(w), {
          weight: "bold",
          class: "size-3 text-current"
        }),
        r12[0] || (r12[0] = createBaseVNode("span", { class: "ml-1 empty:hidden" }, "Terms of Service", -1))
      ], 8, i9)
    ])) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/components/Section/SectionColumns.vue.js
var r6 = {};
var s10 = { class: "section-columns" };
function d12(e16, _22) {
  return openBlock(), createElementBlock("div", s10, [
    renderSlot(e16.$slots, "default", {}, void 0, true)
  ]);
}
var a8 = s4(r6, [["render", d12], ["__scopeId", "data-v-8b9602bf"]]);

// node_modules/@scalar/api-reference/dist/components/Section/SectionColumn.vue.js
var r7 = {};
var s11 = { class: "section-column" };
function d13(e16, _22) {
  return openBlock(), createElementBlock("div", s11, [
    renderSlot(e16.$slots, "default", {}, void 0, true)
  ]);
}
var f8 = s4(r7, [["render", d13], ["__scopeId", "data-v-699c28e3"]]);

// node_modules/@scalar/api-reference/dist/features/download-link/DownloadLink.vue2.js
var $4 = defineComponent({
  __name: "DownloadLink",
  props: {
    title: {}
  },
  setup(v13) {
    const e16 = f4(), k13 = new BananaSlug(), x12 = computed(() => k13.slug(v13.title ?? "")), r12 = (a18) => {
      L2.emit({ id: "", filename: x12.value, format: a18 });
    };
    return (a18, o8) => {
      var u15, s15, i17, m30, p25, f19;
      return ((u15 = unref(e16)) == null ? void 0 : u15.documentDownloadType) !== "none" ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass([{
          "download-both": ((s15 = unref(e16)) == null ? void 0 : s15.documentDownloadType) === "both"
        }, "download-container group"])
      }, [
        ((i17 = unref(e16)) == null ? void 0 : i17.documentDownloadType) === "json" || ((m30 = unref(e16)) == null ? void 0 : m30.documentDownloadType) === "both" ? (openBlock(), createElementBlock("button", {
          key: 0,
          type: "button",
          class: "download-button",
          onClick: o8[0] || (o8[0] = withModifiers((C12) => r12("json"), ["prevent"])),
          variant: "ghost"
        }, [
          o8[3] || (o8[3] = createBaseVNode("span", null, " Download OpenAPI Document ", -1)),
          createVNode(d7, { class: "extension hidden group-hover:flex" }, {
            default: withCtx(() => o8[2] || (o8[2] = [
              createTextVNode("json")
            ])),
            _: 1,
            __: [2]
          })
        ])) : createCommentVNode("", true),
        ((p25 = unref(e16)) == null ? void 0 : p25.documentDownloadType) === "yaml" || ((f19 = unref(e16)) == null ? void 0 : f19.documentDownloadType) === "both" ? (openBlock(), createElementBlock("button", {
          key: 1,
          type: "button",
          class: "download-button",
          onClick: o8[1] || (o8[1] = withModifiers((C12) => r12("yaml"), ["prevent"])),
          variant: "ghost"
        }, [
          o8[5] || (o8[5] = createBaseVNode("span", null, " Download OpenAPI Document ", -1)),
          createVNode(d7, { class: "extension hidden group-hover:flex" }, {
            default: withCtx(() => o8[4] || (o8[4] = [
              createTextVNode("yaml")
            ])),
            _: 1,
            __: [4]
          })
        ])) : createCommentVNode("", true)
      ], 2)) : createCommentVNode("", true);
    };
  }
});

// node_modules/@scalar/api-reference/dist/features/download-link/DownloadLink.vue.js
var p12 = s4($4, [["__scopeId", "data-v-876232c8"]]);

// node_modules/@scalar/api-reference/dist/features/specification-extension/SpecificationExtension.vue.js
var N2 = {
  key: 0,
  class: "text-base"
};
var O5 = defineComponent({
  __name: "SpecificationExtension",
  props: {
    value: {}
  },
  setup(i17) {
    const { getSpecificationExtensions: f19 } = i6();
    function d24(t7) {
      return Object.keys(t7 ?? {}).filter(
        (n8) => n8.startsWith("x-")
      );
    }
    function v13(t7) {
      return t7.flatMap((n8) => f19(n8)).filter((n8) => n8.component);
    }
    const g6 = computed(() => d24(i17.value)), a18 = computed(
      () => v13(g6.value)
    );
    return (t7, n8) => typeof t7.value == "object" && a18.value.length ? (openBlock(), createElementBlock("div", N2, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(a18.value, (e16) => (openBlock(), createBlock(unref(E), null, {
        default: withCtx(() => {
          var u15, m30;
          return [
            e16.renderer ? (openBlock(), createBlock(resolveDynamicComponent(e16.renderer), mergeProps({
              key: 0,
              ref_for: true
            }, {
              [e16.name]: (u15 = t7.value) == null ? void 0 : u15[e16.name],
              component: e16.component
            }), null, 16)) : (openBlock(), createBlock(resolveDynamicComponent(e16.component), mergeProps({
              key: 1,
              ref_for: true
            }, { [e16.name]: (m30 = t7.value) == null ? void 0 : m30[e16.name] }), null, 16))
          ];
        }),
        _: 2
      }, 1024))), 256))
    ])) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Introduction/IntroductionSection.vue2.js
var X2 = { class: "flex gap-1.5" };
var Z2 = { class: "links" };
var x8 = { class: "sticky-cards" };
var $e = defineComponent({
  __name: "IntroductionSection",
  props: {
    document: {},
    config: {}
  },
  setup(l6) {
    const { getHeadingId: T9 } = T(), v13 = inject(o), p25 = computed(() => {
      var e16, m30;
      return typeof ((e16 = l6.document.info) == null ? void 0 : e16.version) == "string" ? l6.document.info.version.toString().match(/^\d/) ? `v${l6.document.info.version}` : l6.document.info.version : typeof ((m30 = l6.document.info) == null ? void 0 : m30.version) == "number" ? `v${l6.document.info.version}` : void 0;
    });
    return onMounted(() => {
      var e16, m30;
      return (m30 = (e16 = l6.config) == null ? void 0 : e16.onLoaded) == null ? void 0 : m30.call(e16);
    }), (e16, m30) => (openBlock(), createBlock(unref(i8), null, {
      default: withCtx(() => [
        createVNode(unref(p7), {
          class: "introduction-section z-1 gap-12",
          id: unref(T9)({
            slug: unref(f3),
            depth: 1,
            value: "Introduction"
          })
        }, {
          default: withCtx(() => {
            var g6, S8, k13, y10, $6;
            return [
              createVNode(unref(p8), {
                loading: ((g6 = e16.config) == null ? void 0 : g6.isLoading) ?? (!((k13 = (S8 = e16.document) == null ? void 0 : S8.info) != null && k13.description) && !(($6 = (y10 = e16.document) == null ? void 0 : y10.info) != null && $6.title))
              }, {
                default: withCtx(() => {
                  var N10;
                  return [
                    createBaseVNode("div", X2, [
                      p25.value ? (openBlock(), createBlock(unref(d7), { key: 0 }, {
                        default: withCtx(() => [
                          createTextVNode(toDisplayString(p25.value), 1)
                        ]),
                        _: 1
                      })) : createCommentVNode("", true),
                      unref(v13) ? (openBlock(), createBlock(unref(d7), { key: 1 }, {
                        default: withCtx(() => [
                          createTextVNode("OAS " + toDisplayString(unref(v13)), 1)
                        ]),
                        _: 1
                      })) : createCommentVNode("", true)
                    ]),
                    createVNode(unref(m16), {
                      loading: !((N10 = e16.document.info) != null && N10.title),
                      tight: ""
                    }, {
                      links: withCtx(() => [
                        createVNode(unref(p9), null, {
                          default: withCtx(() => {
                            var i17, a18, h21, C12, L5, O11;
                            return [
                              createVNode(unref(v7), {
                                value: e16.document.externalDocs
                              }, null, 8, ["value"]),
                              (i17 = e16.document.info) != null && i17.contact ? (openBlock(), createBlock(unref(E4), {
                                key: 0,
                                value: (a18 = e16.document.info) == null ? void 0 : a18.contact
                              }, null, 8, ["value"])) : createCommentVNode("", true),
                              (h21 = e16.document.info) != null && h21.license ? (openBlock(), createBlock(unref(k8), {
                                key: 1,
                                value: (C12 = e16.document.info) == null ? void 0 : C12.license
                              }, null, 8, ["value"])) : createCommentVNode("", true),
                              (L5 = e16.document.info) != null && L5.termsOfService ? (openBlock(), createBlock(unref(_13), {
                                key: 2,
                                value: (O11 = e16.document.info) == null ? void 0 : O11.termsOfService
                              }, null, 8, ["value"])) : createCommentVNode("", true)
                            ];
                          }),
                          _: 1
                        })
                      ]),
                      default: withCtx(() => [
                        createVNode(unref(e7), { level: 1 }, {
                          default: withCtx(() => {
                            var i17;
                            return [
                              createTextVNode(toDisplayString((i17 = e16.document.info) == null ? void 0 : i17.title), 1)
                            ];
                          }),
                          _: 1
                        })
                      ]),
                      _: 1
                    }, 8, ["loading"]),
                    createVNode(unref(a8), null, {
                      default: withCtx(() => [
                        createVNode(unref(f8), null, {
                          default: withCtx(() => {
                            var i17, a18;
                            return [
                              createBaseVNode("div", Z2, [
                                createVNode(unref(p12), {
                                  title: (i17 = e16.document.info) == null ? void 0 : i17.title
                                }, null, 8, ["title"])
                              ]),
                              createVNode(i7, {
                                value: (a18 = e16.document.info) == null ? void 0 : a18.description
                              }, null, 8, ["value"])
                            ];
                          }),
                          _: 1
                        }),
                        e16.$slots.aside ? (openBlock(), createBlock(unref(f8), { key: 0 }, {
                          default: withCtx(() => [
                            createBaseVNode("div", x8, [
                              renderSlot(e16.$slots, "aside", {}, void 0, true)
                            ])
                          ]),
                          _: 3
                        })) : createCommentVNode("", true)
                      ]),
                      _: 3
                    }),
                    createVNode(unref(O5), { value: e16.document }, null, 8, ["value"]),
                    createVNode(unref(O5), {
                      value: e16.document.info
                    }, null, 8, ["value"])
                  ];
                }),
                _: 3
              }, 8, ["loading"]),
              renderSlot(e16.$slots, "after", {}, void 0, true)
            ];
          }),
          _: 3
        }, 8, ["id"])
      ]),
      _: 3
    }));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Introduction/IntroductionSection.vue.js
var f9 = s4($e, [["__scopeId", "data-v-a9f2213d"]]);

// node_modules/@scalar/api-reference/dist/components/Lazy/Lazy.vue2.js
var T2 = defineComponent({
  __name: "Lazy",
  props: {
    id: {},
    isLazy: { type: Boolean, default: true },
    lazyTimeout: { default: 0 },
    prev: { type: Boolean, default: false }
  },
  setup(e16) {
    const i17 = e16.prev || !e16.isLazy, n8 = (t7) => {
      typeof window > "u" || ("requestIdleCallback" in window ? setTimeout(() => window.requestIdleCallback(t7), e16.lazyTimeout) : setTimeout(() => {
        nextTick(() => {
          t7();
        }), e16.lazyTimeout;
      }));
    }, l6 = ref(!e16.isLazy);
    return r.emit({ loading: e16.id, save: i17 }), e16.isLazy ? n8(() => {
      l6.value = true, e16.id && nextTick(() => r.emit({ loaded: e16.id, save: i17 }));
    }) : e16.id && nextTick(() => r.emit({ loaded: e16.id, save: i17 })), (t7, y10) => l6.value ? renderSlot(t7.$slots, "default", { key: 0 }) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-client/dist/components/Server/ServerSelector.vue.js
var W3 = { class: "overflow-x-auto" };
var z5 = {
  key: 1,
  class: "text-c-1 flex h-auto w-full items-center gap-0.75 rounded-b-lg px-3 py-1.5 text-base leading-[20px] whitespace-nowrap"
};
var C7 = { class: "overflow-x-auto" };
var I = defineComponent({
  __name: "ServerSelector",
  props: {
    collection: {},
    server: {},
    target: {}
  },
  emits: ["updateServer"],
  setup(o8, { emit: x12 }) {
    const u15 = x12, { servers: l6, collectionMutators: c14 } = je(), a18 = computed(
      () => {
        var t7;
        return (t7 = o8.collection) == null ? void 0 : t7.servers.map((e16) => {
          var r12;
          return {
            id: e16,
            label: ((r12 = l6[e16]) == null ? void 0 : r12.url) ?? "Unknown server"
          };
        });
      }
    ), d24 = computed({
      get: () => o8.server ? a18.value.find((t7) => t7.id === o8.server.uid) : void 0,
      set: (t7) => {
        var r12;
        if (!t7)
          return;
        c14.edit(
          o8.collection.uid,
          "selectedServerUid",
          t7.id
        );
        const e16 = (r12 = l6[t7.id]) == null ? void 0 : r12.url;
        e16 && u15("updateServer", e16);
      }
    });
    watch(
      () => o8.collection,
      (t7) => {
        var r12, f19;
        if (!t7 || t7.selectedServerUid)
          return;
        const e16 = (r12 = o8.collection.servers) == null ? void 0 : r12[0];
        e16 && (c14.edit(o8.collection.uid, "selectedServerUid", e16), (f19 = l6[e16]) != null && f19.url && u15("updateServer", l6[e16].url));
      }
    );
    const v13 = computed(() => {
      var t7, e16, r12;
      return (e16 = (t7 = o8.server) == null ? void 0 : t7.url) != null && e16.endsWith("/") ? o8.server.url.slice(0, -1) : ((r12 = o8.server) == null ? void 0 : r12.url) || "";
    });
    return (t7, e16) => a18.value.length > 1 ? (openBlock(), createBlock(unref(D), {
      key: 0,
      modelValue: d24.value,
      "onUpdate:modelValue": e16[0] || (e16[0] = (r12) => d24.value = r12),
      options: a18.value,
      placement: "bottom-start",
      resize: "",
      target: t7.target,
      teleport: `#${t7.target}`,
      class: "group"
    }, {
      default: withCtx(() => [
        createVNode(unref($), {
          class: "bg-b-1 text-c-1 h-auto w-full justify-start gap-1.5 overflow-x-auto rounded-t-none rounded-b-lg px-3 py-1.5 text-base font-normal whitespace-nowrap -outline-offset-1",
          variant: "ghost"
        }, {
          default: withCtx(() => [
            e16[1] || (e16[1] = createBaseVNode("span", { class: "sr-only" }, "Server:", -1)),
            createBaseVNode("span", W3, toDisplayString(v13.value), 1),
            createVNode(unref(C), {
              weight: "bold",
              class: "text-c-2 ui-open:rotate-180 mt-0.25 size-3 transition-transform duration-100"
            })
          ]),
          _: 1,
          __: [1]
        })
      ]),
      _: 1
    }, 8, ["modelValue", "options", "target", "teleport"])) : (openBlock(), createElementBlock("div", z5, [
      e16[2] || (e16[2] = createBaseVNode("span", { class: "sr-only" }, "Server:", -1)),
      createBaseVNode("span", C7, toDisplayString(v13.value), 1)
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/features/base-url/BaseUrl.vue.js
var w5 = ["id"];
var A = defineComponent({
  __name: "BaseUrl",
  props: {
    collection: {},
    server: {}
  },
  setup(l6) {
    const { serverMutators: p25 } = je(), s15 = useId(), f19 = f4(), g6 = (e16, o8) => {
      if (!l6.server)
        return;
      const r12 = l6.server.variables || {};
      r12[e16] = { ...r12[e16], default: o8 }, p25.edit(l6.server.uid, "variables", r12);
    }, S8 = (e16) => {
      var o8, r12;
      (r12 = (o8 = f19.value).onServerChange) == null || r12.call(o8, e16);
    };
    return (e16, o8) => {
      var r12, n8, i17, d24, v13, c14;
      return openBlock(), createElementBlock(Fragment, null, [
        o8[0] || (o8[0] = createBaseVNode("label", { class: "bg-b-2 flex h-8 items-center rounded-t-lg border border-b-0 px-3 py-2.5 font-medium" }, " Server ", -1)),
        createBaseVNode("div", {
          id: unref(s15),
          class: normalizeClass(["border", {
            "rounded-b-lg": !((r12 = e16.server) != null && r12.description) && !((n8 = e16.server) != null && n8.variables)
          }])
        }, [
          (d24 = (i17 = e16.collection) == null ? void 0 : i17.servers) != null && d24.length ? (openBlock(), createBlock(unref(I), {
            key: 0,
            collection: e16.collection,
            server: e16.server,
            target: unref(s15),
            onUpdateServer: S8
          }, null, 8, ["collection", "server", "target"])) : createCommentVNode("", true)
        ], 10, w5),
        createVNode(unref(O2), {
          variables: (v13 = e16.server) == null ? void 0 : v13.variables,
          layout: "reference",
          "onUpdate:variable": g6
        }, null, 8, ["variables"]),
        (c14 = e16.server) != null && c14.description ? (openBlock(), createBlock(unref(C3), {
          key: 0,
          class: "text-c-3 rounded-b-lg border border-t-0 px-3 py-1.5",
          value: e16.server.description
        }, null, 8, ["value"])) : createCommentVNode("", true)
      ], 64);
    };
  }
});

// node_modules/@scalar/api-reference/dist/v2/blocks/scalar-request-example-block/helpers/find-client.js
var d14 = "shell/curl";
var u8 = (o8) => AVAILABLE_CLIENTS.includes(o8);
var e8 = (o8, r12) => {
  var f19;
  const n8 = (f19 = o8[0]) == null ? void 0 : f19.options[0];
  if (r12)
    for (const i17 of o8) {
      const t7 = i17.options.find((s15) => s15.id === r12);
      if (t7)
        return t7;
    }
  if (!(n8 != null && n8.id.startsWith("custom")))
    for (const i17 of o8) {
      const t7 = i17.options.find((s15) => s15.id === d14);
      if (t7)
        return t7;
    }
  return n8;
};

// node_modules/@scalar/api-reference/dist/v2/events/definitions.js
function o3(e16, t7, n8) {
  const c14 = new CustomEvent(t7, { detail: n8, bubbles: true, composed: true, cancelable: true });
  e16.dispatchEvent(c14);
}

// node_modules/@scalar/helpers/dist/dom/freeze-element.js
var freezeElement = (element) => {
  if (!element) {
    return () => null;
  }
  const rect = element.getBoundingClientRect();
  const initialViewportTop = rect.top;
  let rafId = null;
  const observer = new MutationObserver((mutations) => {
    const shouldProcess = mutations.some(
      (mutation) => mutation.type === "childList" || mutation.type === "attributes" && (mutation.attributeName === "style" || mutation.attributeName === "class")
    );
    if (!shouldProcess) {
      return;
    }
    if (rafId !== null) {
      cancelAnimationFrame(rafId);
    }
    rafId = requestAnimationFrame(() => {
      const newRect = element.getBoundingClientRect();
      const currentViewportTop = newRect.top;
      if (currentViewportTop !== initialViewportTop) {
        const diff3 = currentViewportTop - initialViewportTop;
        window.scrollBy(0, diff3);
      }
      rafId = null;
    });
  });
  observer.observe(document.body, {
    childList: true,
    subtree: true,
    attributes: true,
    attributeFilter: ["style", "class"],
    characterData: false
  });
  return () => {
    if (rafId !== null) {
      cancelAnimationFrame(rafId);
    }
    observer.disconnect();
  };
};

// node_modules/@scalar/api-reference/dist/components/Content/ClientLibraries/featured-clients.js
var c7 = [
  "shell/curl",
  "ruby/native",
  "node/undici",
  "php/guzzle",
  "python/python3"
];
var i10 = (t7, n8 = c7) => !!(t7 && n8.includes(t7));
var r8 = (t7, n8 = c7) => {
  const s15 = /* @__PURE__ */ new Map();
  for (const o8 of t7)
    for (const e16 of o8.options)
      s15.set(e16.id, e16);
  return n8.flatMap((o8) => s15.get(o8) ?? []);
};

// node_modules/@scalar/api-reference/dist/components/Content/ClientLibraries/ClientSelector.vue2.js
var M2 = { class: "client-libraries-text" };
var O6 = {
  "aria-hidden": "true",
  class: "client-libraries-icon__more"
};
var T3 = {
  key: 1,
  class: "client-libraries-icon",
  height: "50",
  role: "presentation",
  viewBox: "0 0 50 50",
  width: "50",
  xmlns: "http://www.w3.org/2000/svg"
};
var N3 = {
  key: 0,
  class: "client-libraries-text client-libraries-text-more"
};
var P5 = defineComponent({
  __name: "ClientSelector",
  props: {
    clientOptions: {},
    selectedClient: {},
    featuredClients: {},
    morePanel: {}
  },
  setup(v13) {
    const o8 = ref(), d24 = (e16) => `programming-language-${e16 === "js" ? "javascript" : e16}`, C12 = (e16) => {
      if (!o8.value)
        return;
      const t7 = freezeElement(o8.value);
      setTimeout(() => {
        t7();
      }, 300), o3(
        o8.value,
        "scalar-update-selected-client",
        e16.id
      );
    }, c14 = computed(
      () => {
        var e16;
        return (e16 = v13.selectedClient) == null ? void 0 : e16.split("/")[0];
      }
    );
    return (e16, t7) => (openBlock(), createElementBlock("div", {
      ref_key: "containerRef",
      ref: o8,
      class: "client-libraries-content"
    }, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(e16.featuredClients, (l6) => (openBlock(), createBlock(unref(xe), {
        key: l6.clientKey,
        class: normalizeClass(["client-libraries rendered-code-sdks", {
          "client-libraries__active": l6.id === e16.selectedClient
        }])
      }, {
        default: withCtx(() => [
          createBaseVNode("div", {
            class: normalizeClass(`client-libraries-icon__${l6.targetKey}`)
          }, [
            createVNode(unref(m2), {
              class: "client-libraries-icon",
              icon: d24(l6.targetKey)
            }, null, 8, ["icon"])
          ], 2),
          createBaseVNode("span", M2, toDisplayString(l6.targetTitle), 1)
        ]),
        _: 2
      }, 1032, ["class"]))), 128)),
      createVNode(unref(w2), {
        options: e16.clientOptions,
        modelValue: unref(e8)(e16.clientOptions, e16.selectedClient),
        "onUpdate:modelValue": t7[0] || (t7[0] = (l6) => C12(l6)),
        placement: "bottom-end",
        teleport: ""
      }, {
        default: withCtx(() => [
          createBaseVNode("button", {
            class: normalizeClass(["client-libraries client-libraries__select", {
              "client-libraries__active": e16.selectedClient && !unref(i10)(e16.selectedClient)
            }])
          }, [
            createBaseVNode("div", O6, [
              e16.selectedClient && !unref(i10)(e16.selectedClient) ? (openBlock(), createElementBlock("div", {
                key: 0,
                class: normalizeClass(`client-libraries-icon__${c14.value}`)
              }, [
                c14.value ? (openBlock(), createBlock(unref(m2), {
                  key: 0,
                  class: "client-libraries-icon",
                  icon: d24(c14.value)
                }, null, 8, ["icon"])) : createCommentVNode("", true)
              ], 2)) : (openBlock(), createElementBlock("svg", T3, t7[1] || (t7[1] = [
                createBaseVNode("g", {
                  fill: "currentColor",
                  "fill-rule": "nonzero"
                }, [
                  createBaseVNode("path", { d: "M10.71 25.3a3.87 3.87 0 1 0 7.74 0 3.87 3.87 0 0 0-7.74 0M21.13 25.3a3.87 3.87 0 1 0 7.74 0 3.87 3.87 0 0 0-7.74 0M31.55 25.3a3.87 3.87 0 1 0 7.74 0 3.87 3.87 0 0 0-7.74 0" })
                ], -1)
              ])))
            ]),
            e16.clientOptions.length ? (openBlock(), createElementBlock("span", N3, " More ")) : createCommentVNode("", true),
            t7[2] || (t7[2] = createBaseVNode("span", { class: "sr-only" }, "Select from all clients", -1))
          ], 2)
        ]),
        _: 1
      }, 8, ["options", "modelValue"])
    ], 512));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/ClientLibraries/ClientSelector.vue.js
var m18 = s4(P5, [["__scopeId", "data-v-691dcb64"]]);

// node_modules/@scalar/api-reference/dist/components/Content/ClientLibraries/ClientLibraries.vue2.js
var U4 = {
  key: 0,
  ref: "wrapper"
};
var j3 = ["id"];
var q6 = {
  key: 1,
  class: "selected-client card-footer border-t-0 p-0",
  role: "tabpanel",
  tabindex: "1"
};
var H4 = ["id"];
var ee = defineComponent({
  __name: "ClientLibraries",
  props: {
    document: {},
    clientOptions: {},
    selectedClient: { default: () => d14 }
  },
  setup(o8) {
    const v13 = useId(), b10 = useId(), x12 = computed(
      () => o8.clientOptions.flatMap(
        (e16) => e16.options.find((n8) => n8.id === o8.selectedClient) ?? []
      )[0]
    ), d24 = computed(() => r8(o8.clientOptions)), T9 = computed(
      () => d24.value.findIndex(
        (e16) => o8.selectedClient === e16.id
      )
    ), y10 = useTemplateRef("wrapper"), L5 = (e16) => {
      const n8 = d24.value[e16];
      !n8 || !y10.value || o3(y10.value, "scalar-update-selected-client", n8.id);
    }, l6 = computed(() => {
      const e16 = o8.document.info["x-scalar-sdk-installation"];
      if (!Array.isArray(e16) || !(e16 != null && e16.length))
        return;
      const n8 = e16.find((u15) => {
        var s15, c14;
        const f19 = (c14 = (s15 = o8.selectedClient) == null ? void 0 : s15.split("/")[0]) == null ? void 0 : c14.toLowerCase();
        return u15.lang.toLowerCase() === f19;
      });
      if (n8)
        return n8;
    });
    return (e16, n8) => e16.clientOptions.length ? (openBlock(), createElementBlock("div", U4, [
      createVNode(unref(me), {
        manual: "",
        selectedIndex: T9.value,
        onChange: L5
      }, {
        default: withCtx(() => [
          createBaseVNode("div", {
            id: unref(v13),
            class: "client-libraries-heading"
          }, " Client Libraries ", 8, j3),
          createVNode(unref(pe), {
            "aria-labelledby": unref(v13),
            class: "client-libraries-list"
          }, {
            default: withCtx(() => [
              createVNode(m18, {
                clientOptions: e16.clientOptions,
                featuredClients: d24.value,
                selectedClient: e16.selectedClient,
                morePanel: unref(b10)
              }, null, 8, ["clientOptions", "featuredClients", "selectedClient", "morePanel"])
            ]),
            _: 1
          }, 8, ["aria-labelledby"]),
          createVNode(unref(Ie), null, {
            default: withCtx(() => {
              var u15, f19, s15;
              return [
                (u15 = l6.value) != null && u15.source || (f19 = l6.value) != null && f19.description ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
                  l6.value.description ? (openBlock(), createElementBlock("div", {
                    key: 0,
                    class: normalizeClass(["selected-client card-footer -outline-offset-2", l6.value.source && "rounded-b-none"]),
                    role: "tabpanel",
                    tabindex: "0"
                  }, [
                    createVNode(unref(C3), {
                      value: l6.value.description
                    }, null, 8, ["value"])
                  ], 2)) : createCommentVNode("", true),
                  l6.value.source ? (openBlock(), createElementBlock("div", q6, [
                    createVNode(unref(H3), {
                      lang: "shell",
                      content: l6.value.source,
                      copy: true,
                      class: "rounded-t-none rounded-b-lg px-3 py-2 -outline-offset-1 has-focus:outline"
                    }, null, 8, ["content"])
                  ])) : createCommentVNode("", true)
                ], 64)) : unref(i10)(e16.selectedClient) ? (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(d24.value, (c14) => (openBlock(), createBlock(unref(ye), {
                  key: c14.id,
                  class: "selected-client card-footer -outline-offset-2"
                }, {
                  default: withCtx(() => [
                    createTextVNode(toDisplayString(c14.title), 1)
                  ]),
                  _: 2
                }, 1024))), 128)) : (openBlock(), createElementBlock("div", {
                  key: 2,
                  id: unref(b10),
                  class: "selected-client card-footer -outline-offset-2",
                  role: "tabpanel",
                  tabindex: "0"
                }, toDisplayString((s15 = x12.value) == null ? void 0 : s15.title), 9, H4))
              ];
            }),
            _: 1
          })
        ]),
        _: 1
      }, 8, ["selectedIndex"])
    ], 512)) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/ClientLibraries/ClientLibraries.vue.js
var e9 = s4(ee, [["__scopeId", "data-v-8021c330"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Introduction/Introduction.vue2.js
var F3 = {
  key: 0,
  class: "scalar-reference-intro-server scalar-client introduction-card-item text-base leading-normal [--scalar-address-bar-height:0px]"
};
var G2 = {
  key: 1,
  class: "scalar-reference-intro-auth scalar-client introduction-card-item leading-normal"
};
var x9 = defineComponent({
  __name: "Introduction",
  props: {
    document: {},
    config: {},
    clientOptions: {},
    store: {}
  },
  setup(n8) {
    const { collections: b10, securitySchemes: w13, servers: u15 } = je(), {
      activeCollection: A3,
      activeEnvVariables: E11,
      activeEnvironment: O11,
      activeWorkspace: d24
    } = z(), r12 = computed(() => {
      var e16;
      if ((e16 = n8.config) != null && e16.slug) {
        const c14 = b10[getSlugUid(n8.config.slug)];
        if (c14)
          return c14;
      }
      return A3.value;
    }), m30 = computed(() => {
      if (r12.value) {
        if (r12.value.selectedServerUid) {
          const e16 = u15[r12.value.selectedServerUid];
          if (e16)
            return e16;
        }
        return u15[r12.value.servers[0]];
      }
    }), U6 = computed(
      () => {
        var e16;
        return ((e16 = n8.config) == null ? void 0 : e16.layout) === "classic" ? "after" : "aside";
      }
    ), { hash: v13 } = T();
    return (e16, c14) => (openBlock(), createBlock(unref(T2), {
      id: "introduction-card",
      prev: "",
      isLazy: !!unref(v13) && !unref(v13).startsWith("description")
    }, {
      default: withCtx(() => [
        createVNode(f9, {
          document: e16.document,
          config: e16.config
        }, {
          [U6.value]: withCtx(() => [
            createVNode(unref(E), null, {
              default: withCtx(() => {
                var f19, p25, h21, g6, S8, k13;
                return [
                  createBaseVNode("div", {
                    class: normalizeClass(["introduction-card", { "introduction-card-row": ((f19 = e16.config) == null ? void 0 : f19.layout) === "classic" }])
                  }, [
                    (h21 = (p25 = r12.value) == null ? void 0 : p25.servers) != null && h21.length ? (openBlock(), createElementBlock("div", F3, [
                      createVNode(unref(A), {
                        collection: r12.value,
                        server: m30.value
                      }, null, 8, ["collection", "server"])
                    ])) : createCommentVNode("", true),
                    r12.value && unref(d24) && Object.keys(unref(w13) ?? {}).length ? (openBlock(), createElementBlock("div", G2, [
                      createVNode(unref(f2), {
                        collection: r12.value,
                        envVariables: unref(E11),
                        environment: unref(O11),
                        layout: "reference",
                        persistAuth: (g6 = e16.config) == null ? void 0 : g6.persistAuth,
                        selectedSecuritySchemeUids: ((S8 = r12.value) == null ? void 0 : S8.selectedSecuritySchemeUids) ?? [],
                        server: m30.value,
                        title: "Authentication",
                        workspace: unref(d24)
                      }, null, 8, ["collection", "envVariables", "environment", "persistAuth", "selectedSecuritySchemeUids", "server", "workspace"])
                    ])) : createCommentVNode("", true),
                    ((k13 = e16.config) == null ? void 0 : k13.hiddenClients) !== true && e16.clientOptions.length && e16.store.workspace.activeDocument ? (openBlock(), createBlock(unref(e9), {
                      key: 2,
                      clientOptions: e16.clientOptions,
                      document: e16.store.workspace.activeDocument,
                      selectedClient: e16.store.workspace["x-scalar-default-client"],
                      class: "introduction-card-item scalar-reference-intro-clients"
                    }, null, 8, ["clientOptions", "document", "selectedClient"])) : createCommentVNode("", true)
                  ], 2)
                ];
              }),
              _: 1
            })
          ]),
          _: 2
        }, 1032, ["document", "config"])
      ]),
      _: 1
    }, 8, ["isLazy"]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Introduction/Introduction.vue.js
var p13 = s4(x9, [["__scopeId", "data-v-e808708e"]]);

// node_modules/@scalar/helpers/dist/dom/freeze-at-top.js
var freezeAtTop = (id) => {
  if (!id) {
    return () => null;
  }
  let rafId = null;
  let element = document.getElementById(id);
  const observer = new MutationObserver(() => {
    element ||= document.getElementById(id);
    if (!element) {
      return;
    }
    if (rafId !== null) {
      cancelAnimationFrame(rafId);
    }
    rafId = requestAnimationFrame(() => {
      element?.scrollIntoView();
      rafId = null;
    });
  });
  observer.observe(document.body, {
    childList: true,
    subtree: true
  });
  return () => {
    if (rafId !== null) {
      cancelAnimationFrame(rafId);
    }
    observer.disconnect();
  };
};

// node_modules/@scalar/api-reference/dist/components/Content/Operations/get-current-index.js
var d15 = /^.*?(?=\.query|\.path|\.headers|\.cookies|\.body)/;
var i11 = (t7) => {
  if (t7.startsWith("model"))
    return "models";
  if (t7.includes(".")) {
    const e16 = t7.match(d15);
    if (e16 != null && e16[0])
      return e16[0];
  }
  return t7;
};
var o4 = (t7, e16) => {
  const n8 = i11(t7);
  return e16.findIndex((r12) => "tag" in r12 ? n8.startsWith(r12.id) : n8 === r12.id);
};

// node_modules/@scalar/api-client/dist/views/Request/RequestSection/helpers/filter-security-requirements.js
var m19 = (s15, f19 = [], a18 = {}) => {
  if (!s15 || s15.length === 0)
    return [];
  const r12 = s15.filter((n8) => Object.keys(n8).length > 0);
  if (r12.length === 0)
    return [];
  if (f19.length === 0) {
    const n8 = r12[0], i17 = n8 ? Object.keys(n8)[0] : void 0, t7 = Object.values(a18).find((e16) => e16.nameKey === i17);
    return t7 ? [t7] : [];
  }
  const l6 = new Set(
    r12.map((n8) => Object.keys(n8).sort().join(","))
  ), h21 = [];
  for (const n8 of f19) {
    const i17 = Array.isArray(n8) ? n8 : [n8], t7 = [], e16 = [];
    for (const c14 of i17) {
      const o8 = a18[c14];
      o8 != null && o8.nameKey && (t7.push(o8), e16.push(o8.nameKey));
    }
    if (e16.length > 0) {
      const c14 = e16.sort().join(",");
      l6.has(c14) && h21.push(...t7);
    }
  }
  return h21;
};

// node_modules/@scalar/api-reference/dist/features/Operation/helpers/combine-params.js
var c8 = (o8 = [], a18 = []) => {
  const m30 = [...o8, ...a18].map((e16) => getResolvedRef(e16)).filter(isDefined), r12 = /* @__PURE__ */ new Map();
  for (const e16 of m30) {
    const n8 = `${e16.in}:${e16.name}`;
    r12.set(n8, e16);
  }
  return Array.from(r12.values());
};

// node_modules/@scalar/api-reference/dist/helpers/convert-security-scheme.js
var e10 = (r12) => r12.type === "apiKey" ? {
  ...r12,
  "x-scalar-secret-token": r12.value
} : r12.type === "http" ? {
  ...r12,
  "x-scalar-secret-token": r12.token,
  "x-scalar-secret-username": r12.username,
  "x-scalar-secret-password": r12.password
} : r12.type === "oauth2" ? {
  ...r12,
  flows: Object.fromEntries(
    Object.entries(r12.flows).map(([a18, t7]) => [
      a18,
      t7 && {
        ...t7,
        "x-scalar-secret-token": t7.token
      }
    ])
  )
} : r12;

// node_modules/@scalar/api-reference/dist/hooks/useDiscriminator.js
var V4 = Symbol("discriminator-context");
var w6 = Symbol("example-context");
function j4(r12) {
  var e16;
  if ((e16 = r12 == null ? void 0 : r12.discriminator) != null && e16.mapping)
    return r12.discriminator.mapping;
}
function E5(r12) {
  var e16;
  return (e16 = r12 == null ? void 0 : r12.discriminator) == null ? void 0 : e16.propertyName;
}
function D2(r12) {
  return (r12 == null ? void 0 : r12.discriminator) !== void 0;
}
function I2(r12, e16) {
  var o8;
  if (!r12 || !e16 || r12.type !== "object" || !r12.properties)
    return null;
  for (const [p25, i17] of Object.entries(e16))
    if (typeof i17 == "object" && i17 !== null && "discriminator" in i17 && ((o8 = i17.discriminator) != null && o8.propertyName)) {
      const n8 = i17.discriminator.propertyName;
      if (r12.properties[n8])
        return p25;
    }
  return null;
}
function x10(r12) {
  if (r12)
    return r12.type === "array" && r12.items && typeof r12.items == "object" && !("$ref" in r12.items) ? r12.items : r12;
}
function T4(r12, e16, o8) {
  var l6;
  if (!((l6 = r12.discriminator) != null && l6.mapping) || !e16)
    return;
  const p25 = r12.discriminator.mapping[e16];
  if (!p25)
    return;
  const i17 = p25.split("/").pop();
  if (!i17 || !o8[i17])
    return;
  const n8 = o8[i17];
  if (n8.allOf) {
    const d24 = {
      type: n8.type || "object",
      properties: {},
      required: [],
      ...r12.title ? { title: r12.title } : {},
      ...r12.name ? { name: r12.name } : {}
    }, y10 = {}, a18 = /* @__PURE__ */ new Set();
    r12.required && r12.required.forEach((u15) => a18.add(u15));
    for (const u15 of n8.allOf)
      if ("$ref" in u15) {
        const s15 = u15.$ref.split("/").pop();
        if (s15 && o8[s15]) {
          const t7 = o8[s15];
          t7.properties && Object.assign(y10, t7.properties), t7.required && t7.required.forEach((f19) => a18.add(f19));
        }
      } else "properties" in u15 && (Object.assign(y10, u15.properties), "required" in u15 && Array.isArray(u15.required) && u15.required.forEach((s15) => a18.add(s15)));
    return d24.properties = y10, d24.required = Array.from(a18), d24;
  }
  return {
    type: n8.type || r12.type,
    properties: {
      ...r12.properties || {},
      ...n8.properties || {}
    },
    required: [...r12.required || [], ...n8.required || []],
    // Preserve discriminator
    discriminator: r12.discriminator,
    // Preserve title and name from base schema
    ...r12.title ? { title: r12.title } : {},
    ...r12.name ? { name: r12.name } : {}
  };
}
function X3({ schema: r12, schemas: e16, onSchemaChange: o8 }) {
  const p25 = computed(() => x10(r12)), i17 = computed(() => j4(p25.value)), n8 = computed(() => i17.value && Object.keys(i17.value)[0] || ""), l6 = ref(n8.value);
  watch(
    n8,
    (t7) => {
      t7 && !l6.value && (l6.value = t7);
    },
    { immediate: true }
  );
  const d24 = computed(() => E5(p25.value)), y10 = computed(() => D2(p25.value)), a18 = computed(() => {
    if (!p25.value || !e16 || !l6.value)
      return r12;
    const t7 = T4(
      p25.value,
      l6.value,
      e16
    );
    if (!t7)
      return r12;
    const f19 = (r12 == null ? void 0 : r12.type) === "array" ? {
      type: "array",
      items: t7,
      ...r12.title ? { title: r12.title } : {},
      ...r12.name ? { name: r12.name } : {}
    } : t7;
    return o8 == null || o8(f19), f19;
  }), u15 = (t7) => {
    if ("default" in t7)
      return t7.default;
    if ("example" in t7)
      return t7.example;
    switch (t7.type) {
      case "string":
        return "";
      case "integer":
      case "number":
        return t7.nullable ? null : 0;
      case "boolean":
        return false;
      case "array":
        return [];
      case "object":
        return {};
      default:
        return null;
    }
  };
  return {
    selectedType: l6,
    discriminatorMapping: i17,
    defaultType: n8,
    discriminatorPropertyName: d24,
    hasDiscriminator: y10,
    mergedSchema: a18,
    generateExampleValue: (t7 = false) => {
      if (!a18.value)
        return t7 ? [] : {};
      const f19 = {}, v13 = a18.value.type === "array" ? a18.value.items : a18.value;
      return "properties" in v13 && v13.properties && Object.entries(v13.properties).forEach(([g6, N10]) => {
        const m30 = N10;
        m30 !== null && (f19[g6] = u15(m30));
      }), d24.value && l6.value && (f19[d24.value] = l6.value), JSON.parse(JSON.stringify(t7 ? [f19] : f19));
    }
  };
}

// node_modules/@scalar/api-reference/dist/hooks/useOperationDiscriminator.js
function E6(e16) {
  return e16 ? !!(e16.discriminator || e16.type === "array" && e16.items && typeof e16.items == "object" && "discriminator" in e16.items) : false;
}
function j5(e16, f19) {
  var c14, m30, o8;
  const n8 = (o8 = (m30 = (c14 = e16 == null ? void 0 : e16.requestBody) == null ? void 0 : c14.content) == null ? void 0 : m30["application/json"]) == null ? void 0 : o8.schema, a18 = computed(() => E6(n8)), h21 = a18.value ? X3({
    schema: n8,
    schemas: f19,
    onSchemaChange: (r12) => {
      var u15, l6;
      (l6 = (u15 = e16 == null ? void 0 : e16.requestBody) == null ? void 0 : u15.content) != null && l6["application/json"] && (e16.requestBody.content["application/json"].schema = r12);
    }
  }) : {
    selectedType: ref(""),
    discriminatorMapping: computed(() => ({})),
    discriminatorPropertyName: computed(() => ""),
    hasDiscriminator: computed(() => false),
    mergedSchema: computed(() => n8),
    generateExampleValue: () => ({})
  }, {
    selectedType: s15,
    discriminatorMapping: y10,
    discriminatorPropertyName: g6,
    hasDiscriminator: v13,
    mergedSchema: D7,
    generateExampleValue: S8
  } = h21;
  if (a18.value) {
    const r12 = computed(() => ({
      selectedType: s15.value || void 0,
      discriminatorMapping: y10.value || {},
      discriminatorPropertyName: g6.value || "",
      hasDiscriminator: v13.value,
      mergedSchema: D7.value
    }));
    provide(V4, r12), provide(w6, {
      generateExampleValue: S8
    });
  } else
    provide(
      V4,
      computed(() => null)
    ), provide(w6, {
      generateExampleValue: () => ({})
    });
  return {
    hasSchemaDiscriminator: a18,
    handleDiscriminatorChange: (r12) => {
      a18.value && (s15.value = r12);
    }
  };
}

// node_modules/@scalar/api-reference/dist/components/OperationPath.vue2.js
var k9 = { key: 0 };
var B3 = defineComponent({
  __name: "OperationPath",
  props: {
    path: {},
    deprecated: { type: Boolean }
  },
  setup(s15) {
    const p25 = s15, c14 = (a18) => a18.startsWith("{") && a18.endsWith("}"), i17 = computed(() => p25.path.split(/({[^}]+})/));
    return (a18, y10) => (openBlock(), createElementBlock("span", {
      class: normalizeClass(["operation-path", { deprecated: a18.deprecated }])
    }, [
      (openBlock(true), createElementBlock(Fragment, null, renderList(i17.value, (n8, l6) => (openBlock(), createElementBlock(Fragment, { key: l6 }, [
        c14(n8) ? (openBlock(), createElementBlock("em", k9, toDisplayString(n8), 1)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
          createTextVNode(toDisplayString(n8), 1)
        ], 64))
      ], 64))), 128))
    ], 2));
  }
});

// node_modules/@scalar/api-reference/dist/components/OperationPath.vue.js
var c9 = s4(B3, [["__scopeId", "data-v-ec6c8861"]]);

// node_modules/@scalar/api-reference/dist/components/ScreenReader.vue2.js
var s12 = {
  key: 0,
  class: "screenreader-only"
};
var d16 = defineComponent({
  __name: "ScreenReader",
  props: {
    if: { type: Boolean, default: true }
  },
  setup(a18) {
    return (e16, l6) => e16.$props.if ? (openBlock(), createElementBlock("span", s12, [
      renderSlot(e16.$slots, "default", {}, void 0, true)
    ])) : renderSlot(e16.$slots, "default", { key: 1 }, void 0, true);
  }
});

// node_modules/@scalar/api-reference/dist/components/ScreenReader.vue.js
var f10 = s4(d16, [["__scopeId", "data-v-df2e1026"]]);

// node_modules/@scalar/api-reference/dist/features/Operation/components/ContentTypeSelect.vue.js
var j6 = defineComponent({
  __name: "ContentTypeSelect",
  props: {
    requestBody: {},
    defaultValue: {}
  },
  emits: ["selectContentType"],
  setup(v13, { emit: x12 }) {
    const t7 = v13, b10 = x12, C12 = (e16) => {
      e16 != null && e16.id && b10("selectContentType", { contentType: e16.id });
    }, a18 = computed(() => {
      var e16;
      return (e16 = t7.requestBody) != null && e16.content ? Object.keys(t7.requestBody.content) : [];
    }), o8 = ref(
      t7.defaultValue || a18.value[0]
    ), d24 = computed({
      get: () => u15.value.find((e16) => e16.id === o8.value),
      set: (e16) => {
        e16 && (o8.value = e16.id);
      }
    }), u15 = computed(() => a18.value.map((e16) => ({
      id: e16,
      label: e16
    }))), i17 = cva({
      base: "font-normal text-c-2 bg-b-2 py-0.75 flex cursor-pointer items-center gap-1 rounded-full text-xs",
      variants: {
        dropdown: {
          true: "border hover:text-c-1 pl-2 pr-1.5",
          false: "px-2"
        }
      }
    });
    return (e16, l6) => t7 != null && t7.requestBody && a18.value.length > 1 ? (openBlock(), createBlock(unref(D), {
      key: 0,
      modelValue: d24.value,
      "onUpdate:modelValue": [
        l6[0] || (l6[0] = (T9) => d24.value = T9),
        C12
      ],
      options: u15.value,
      placement: "bottom-end"
    }, {
      default: withCtx(() => [
        createVNode(unref($), {
          class: normalizeClass(["h-fit", unref(i17)({ dropdown: true })]),
          variant: "ghost"
        }, {
          default: withCtx(() => [
            createVNode(f10, null, {
              default: withCtx(() => l6[1] || (l6[1] = [
                createTextVNode("Selected Content Type:")
              ])),
              _: 1,
              __: [1]
            }),
            createBaseVNode("span", null, toDisplayString(o8.value), 1),
            createVNode(unref(C), {
              weight: "bold",
              class: "ui-open:rotate-180 size-2.75 transition-transform duration-100"
            })
          ]),
          _: 1
        }, 8, ["class"])
      ]),
      _: 1
    }, 8, ["modelValue", "options"])) : (openBlock(), createElementBlock("div", {
      key: 1,
      class: normalizeClass([unref(i17)({ dropdown: false }), "selected-content-type"]),
      tabindex: "0"
    }, [
      createBaseVNode("span", null, toDisplayString(o8.value), 1)
    ], 2));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/helpers/is-type-object.js
var s13 = (t7) => {
  if (t7 === null || typeof t7 != "object" || Array.isArray(t7) || "oneOf" in t7 || "anyOf" in t7 || "allOf" in t7 || "not" in t7)
    return false;
  const r12 = "type" in t7;
  if (r12 && Array.isArray(t7.type))
    return t7.type.includes("object");
  const n8 = r12 && t7.type === "object";
  if (n8)
    return true;
  if (r12 && !n8)
    return false;
  const i17 = "properties" in t7, o8 = "additionalProperties" in t7, e16 = "patternProperties" in t7;
  return i17 || o8 || e16;
};

// node_modules/@scalar/api-reference/dist/components/Content/Schema/helpers/merge-all-of-schemas.js
function n5(f19, i17, p25 = 0) {
  if (p25 >= 20 || !Array.isArray(f19) || f19.length === 0)
    return i17 || {};
  const e16 = f19.reduce((t7, r12) => {
    if (!r12 || typeof r12 != "object")
      return t7;
    if (r12.allOf) {
      const s15 = n5(r12.allOf, void 0, p25 + 1);
      return n5([t7, s15], void 0, p25 + 1);
    }
    const o8 = typeof t7 == "object" ? { ...t7 } : {};
    if (r12.properties && (o8.properties = l5(o8.properties || {}, r12.properties, p25 + 1)), r12.items) {
      if (r12.type === "array")
        o8.items = d17(o8.items || {}, r12.items, p25 + 1);
      else if (typeof r12.type == "string" && ["object", "string"].includes(r12.type) && r12.items.allOf) {
        const s15 = n5(r12.items.allOf, void 0, p25 + 1);
        o8.properties = l5(
          o8.properties || {},
          s15.properties || {},
          p25 + 1
        );
      }
    }
    return O7(o8, r12, p25 + 1);
  }, {});
  return i17 ? O7(e16, i17, p25 + 1) : e16;
}
function l5(f19, i17, p25 = 0) {
  if (p25 >= 20)
    return f19;
  const e16 = typeof f19 == "object" ? { ...f19 } : {};
  return Object.entries(i17).forEach(([t7, r12]) => {
    var o8;
    if (!r12 || typeof r12 != "object") {
      e16[t7] = r12;
      return;
    }
    if (!e16[t7]) {
      r12.type === "array" && ((o8 = r12.items) != null && o8.allOf) ? e16[t7] = {
        ...r12,
        items: n5(r12.items.allOf, void 0, p25 + 1)
      } : r12.allOf ? e16[t7] = n5(r12.allOf, void 0, p25 + 1) : e16[t7] = r12;
      return;
    }
    if (r12.allOf)
      e16[t7] = n5([e16[t7], ...r12.allOf], void 0, p25 + 1);
    else if (r12.type === "array" && r12.items)
      e16[t7] = {
        ...e16[t7],
        type: "array",
        items: d17(e16[t7].items || {}, r12.items, p25 + 1)
      };
    else {
      const s15 = e16[t7].properties || r12.properties ? l5(e16[t7].properties || {}, r12.properties || {}, p25 + 1) : void 0;
      e16[t7] = {
        ...e16[t7],
        ...r12
      }, s15 && (e16[t7].properties = s15);
    }
  }), e16;
}
function d17(f19, i17, p25 = 0) {
  if (p25 >= 20)
    return f19;
  if (f19.allOf || i17.allOf) {
    const t7 = [...f19.allOf || [f19], ...i17.allOf || [i17]];
    return n5(t7, void 0, p25 + 1);
  }
  const e16 = {
    ...f19,
    ...i17
  };
  return f19.properties && i17.properties && (e16.properties = l5(f19.properties, i17.properties, p25 + 1)), e16;
}
var O7 = (f19, i17, p25 = 0) => {
  if (p25 >= 20)
    return f19;
  const e16 = typeof f19 == "object" ? { ...f19 } : {};
  if (i17.required && Array.isArray(i17.required)) {
    const t7 = f19.required || [], r12 = i17.required;
    e16.required = [.../* @__PURE__ */ new Set([...t7, ...r12])];
  }
  return i17.type && !f19.type && (e16.type = i17.type), i17.title && !f19.title && (e16.title = i17.title), i17.name && !f19.name && (e16.name = i17.name), i17.description && !f19.description && (e16.description = i17.description), i17.properties && (e16.properties = l5(e16.properties || {}, i17.properties, p25 + 1)), ["oneOf", "anyOf"].forEach((t7) => {
    const r12 = i17[t7];
    r12 && r12.forEach((o8) => {
      o8.properties && (e16.properties = l5(e16.properties || {}, o8.properties, p25 + 1));
    });
  }), e16;
};

// node_modules/@scalar/api-reference/dist/components/Content/Schema/helpers/optimize-value-for-display.js
var d18 = ["oneOf", "anyOf", "allOf", "not"];
function b4(e16) {
  var O11;
  if (!e16 || typeof e16 != "object")
    return e16;
  let r12 = { ...e16 };
  const o8 = d18.find((t7) => r12 == null ? void 0 : r12[t7]);
  if (!o8 || o8 === "not")
    return r12;
  const s15 = r12 == null ? void 0 : r12[o8];
  if (!Array.isArray(s15))
    return r12;
  const i17 = { ...r12 };
  delete i17[o8], delete i17.nullable;
  const u15 = Object.keys(i17).length > 0, c14 = (o8 === "oneOf" || o8 === "anyOf") && (s15.some((t7) => t7.allOf) || u15), p25 = s15.map((t7) => {
    if (t7.allOf && Array.isArray(t7.allOf)) {
      let l6 = n5(t7.allOf);
      return c14 && (l6 = n5(t7.allOf, i17)), Object.keys(t7).forEach((n8) => {
        !d18.includes(n8) && !(n8 in l6) && (l6[n8] = t7[n8]);
      }), l6;
    }
    return c14 && !t7.allOf ? { ...i17, ...t7 } : t7;
  });
  p25.some((t7) => t7.type === "null") && (r12.nullable = true);
  const f19 = p25.filter((t7) => t7.type !== "null");
  return f19.length === 1 && (r12 != null && r12[o8]) ? (r12 = { ...r12, ...f19[0] }, r12 == null || delete r12[o8], r12) : c14 ? (r12 = {
    [o8]: f19
  }, r12.nullable && (r12.nullable = true), r12) : (Array.isArray(r12 == null ? void 0 : r12[o8]) && ((O11 = r12 == null ? void 0 : r12[o8]) == null ? void 0 : O11.length) > 1 && (r12[o8] = f19), r12);
}

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaHeading.vue2.js
var p14 = {
  key: 0,
  class: "schema-type"
};
var v8 = ["title"];
var d19 = defineComponent({
  __name: "SchemaHeading",
  props: {
    value: { type: [Object, Boolean] },
    name: {}
  },
  setup(t7) {
    const i17 = computed(() => t7.value.type ? t7.value.type : t7.value.enum ? "enum" : "items" in t7.value && t7.value.items === "object" ? "array" : t7.value.properties || t7.value.additionalProperties ? "object" : "unknown");
    return (e16, c14) => typeof e16.value == "object" ? (openBlock(), createElementBlock("span", p14, [
      createBaseVNode("span", {
        class: "schema-type-icon",
        title: typeof e16.value.type == "string" ? e16.value.type : Array.isArray(e16.value.type) ? e16.value.type.join(" | ") : "unkown type"
      }, [
        e16.value.type === "object" ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
          createTextVNode(" {} ")
        ], 64)) : createCommentVNode("", true),
        e16.value.type === "array" ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
          createTextVNode(" [] ")
        ], 64)) : createCommentVNode("", true),
        e16.value.enum ? (openBlock(), createElementBlock(Fragment, { key: 2 }, [
          createTextVNode(" enum ")
        ], 64)) : createCommentVNode("", true)
      ], 8, v8),
      e16.name ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
        createTextVNode(toDisplayString(e16.name), 1)
      ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
        createTextVNode(toDisplayString(i17.value), 1)
      ], 64))
    ])) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaHeading.vue.js
var e11 = s4(d19, [["__scopeId", "data-v-77d7b9bf"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaObjectProperties.vue.js
var B4 = defineComponent({
  __name: "SchemaObjectProperties",
  props: {
    schema: { type: [Object, Boolean] },
    compact: { type: Boolean },
    hideHeading: { type: Boolean },
    level: {},
    hideModelNames: { type: Boolean },
    schemas: {},
    discriminator: {},
    discriminatorMapping: {},
    discriminatorPropertyName: {},
    orderSchemaPropertiesBy: { default: "alpha" },
    orderRequiredPropertiesFirst: { default: true },
    hasDiscriminator: { type: Boolean },
    breadcrumb: {}
  },
  emits: ["update:modelValue"],
  setup(i17, { emit: v13 }) {
    const P10 = v13, f19 = computed(() => {
      if (!i17.schema.properties)
        return [];
      const e16 = Object.keys(i17.schema.properties), t7 = new Set(i17.schema.required || []);
      return e16.sort((r12, m30) => {
        const o8 = t7.has(r12), s15 = t7.has(m30);
        if (i17.orderRequiredPropertiesFirst) {
          if (o8 && !s15)
            return -1;
          if (!o8 && s15)
            return 1;
        }
        return i17.orderSchemaPropertiesBy === "alpha" ? r12.localeCompare(m30) : 0;
      });
    }), n8 = (e16) => {
      P10("update:modelValue", e16);
    }, M9 = (e16) => typeof e16 == "object" && typeof e16["x-additionalPropertiesName"] == "string" && e16["x-additionalPropertiesName"].trim().length > 0 ? `${e16["x-additionalPropertiesName"].trim()}*` : "propertyName*", u15 = (e16) => e16 === true || typeof e16 == "object" && Object.keys(e16).length === 0 || typeof e16 != "object" || !("type" in e16) ? {
      type: "anything",
      ...typeof e16 == "object" ? e16 : {}
    } : e16;
    return (e16, t7) => (openBlock(), createElementBlock(Fragment, null, [
      e16.schema.properties ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(f19.value, (r12) => {
        var m30, o8, s15, N10, b10, y10;
        return openBlock(), createBlock(p15, {
          key: r12,
          breadcrumb: e16.breadcrumb,
          compact: e16.compact,
          discriminatorMapping: ((m30 = e16.schema.discriminator) == null ? void 0 : m30.mapping) || e16.discriminatorMapping,
          discriminatorPropertyName: ((o8 = e16.schema.discriminator) == null ? void 0 : o8.propertyName) || e16.discriminatorPropertyName,
          hideHeading: e16.hideHeading,
          hideModelNames: e16.hideModelNames,
          isDiscriminator: r12 === (((s15 = e16.schema.discriminator) == null ? void 0 : s15.propertyName) || e16.discriminatorPropertyName),
          level: e16.level,
          modelValue: e16.discriminator,
          name: r12,
          required: ((N10 = e16.schema.required) == null ? void 0 : N10.includes(r12)) || ((b10 = e16.schema.properties[r12]) == null ? void 0 : b10.required) === true,
          resolvedSchema: e16.schema.properties[r12],
          schemas: e16.schemas,
          value: {
            ...e16.schema.properties[r12],
            parent: e16.schema,
            isDiscriminator: r12 === e16.discriminatorPropertyName || ((y10 = e16.schema.discriminator) == null ? void 0 : y10.propertyName) === r12
          },
          "onUpdate:modelValue": n8
        }, null, 8, ["breadcrumb", "compact", "discriminatorMapping", "discriminatorPropertyName", "hideHeading", "hideModelNames", "isDiscriminator", "level", "modelValue", "name", "required", "resolvedSchema", "schemas", "value"]);
      }), 128)) : createCommentVNode("", true),
      e16.schema.patternProperties ? (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(Object.keys(e16.schema.patternProperties), (r12) => (openBlock(), createBlock(p15, {
        key: r12,
        breadcrumb: e16.breadcrumb,
        compact: e16.compact,
        discriminatorMapping: e16.discriminatorMapping,
        discriminatorPropertyName: e16.discriminatorPropertyName,
        hideHeading: e16.hideHeading,
        hideModelNames: e16.hideModelNames,
        isDiscriminator: false,
        level: e16.level,
        modelValue: e16.discriminator,
        name: r12,
        resolvedSchema: e16.schema.patternProperties[r12],
        schemas: e16.schemas,
        value: {
          ...e16.schema.patternProperties[r12]
        },
        variant: "patternProperties",
        "onUpdate:modelValue": n8
      }, null, 8, ["breadcrumb", "compact", "discriminatorMapping", "discriminatorPropertyName", "hideHeading", "hideModelNames", "level", "modelValue", "name", "resolvedSchema", "schemas", "value"]))), 128)) : createCommentVNode("", true),
      e16.schema.additionalProperties ? (openBlock(), createBlock(p15, {
        key: 2,
        breadcrumb: e16.breadcrumb,
        compact: e16.compact,
        discriminatorMapping: e16.discriminatorMapping,
        discriminatorPropertyName: e16.discriminatorPropertyName,
        hideHeading: e16.hideHeading,
        hideModelNames: e16.hideModelNames,
        isDiscriminator: false,
        level: e16.level,
        modelValue: e16.discriminator,
        name: M9(e16.schema.additionalProperties),
        noncollapsible: "",
        resolvedSchema: u15(e16.schema.additionalProperties),
        schemas: e16.schemas,
        value: u15(e16.schema.additionalProperties),
        variant: "additionalProperties",
        "onUpdate:modelValue": n8
      }, null, 8, ["breadcrumb", "compact", "discriminatorMapping", "discriminatorPropertyName", "hideHeading", "hideModelNames", "level", "modelValue", "name", "resolvedSchema", "schemas", "value"])) : createCommentVNode("", true)
    ], 64));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/Schema.vue2.js
var Z3 = {
  key: 0,
  class: "schema-card-description"
};
var W4 = {
  key: 0,
  class: "schema-properties"
};
var ne = defineComponent({
  __name: "Schema",
  props: {
    value: { type: [Object, Boolean] },
    level: { default: 0 },
    name: {},
    compact: { type: Boolean },
    noncollapsible: { type: Boolean, default: false },
    hideHeading: { type: Boolean },
    additionalProperties: { type: Boolean },
    hideModelNames: { type: Boolean, default: false },
    schemas: {},
    discriminator: {},
    discriminatorMapping: {},
    discriminatorPropertyName: {},
    hasDiscriminator: { type: Boolean },
    breadcrumb: {}
  },
  emits: ["update:modelValue"],
  setup(z9, { emit: q10 }) {
    const l6 = z9, F4 = q10, k13 = f4(), o8 = inject(V4, null), N10 = computed(
      () => {
        var e16;
        return ((e16 = o8 == null ? void 0 : o8.value) == null ? void 0 : e16.discriminatorMapping) || l6.discriminatorMapping || {};
      }
    ), S8 = computed(
      () => {
        var e16;
        return ((e16 = o8 == null ? void 0 : o8.value) == null ? void 0 : e16.discriminatorPropertyName) || l6.discriminatorPropertyName || "";
      }
    ), M9 = computed(
      () => {
        var e16;
        return ((e16 = o8 == null ? void 0 : o8.value) == null ? void 0 : e16.selectedType) || l6.discriminator;
      }
    ), a18 = computed(() => {
      var r12;
      const e16 = (r12 = o8 == null ? void 0 : o8.value) == null ? void 0 : r12.mergedSchema, n8 = l6.value;
      return e16 && l6.level === 0 && l6.hasDiscriminator && s13(n8) && s13(e16) ? e16 : l6.value;
    }), B8 = computed(() => !(l6.noncollapsible || l6.level === 0)), D7 = computed(() => {
      var e16, n8;
      if ((e16 = a18.value) != null && e16.allOf && Array.isArray(a18.value.allOf) && // Because we don't want it to show in models
      l6.name === "Request Body") {
        if (a18.value.description)
          return a18.value.description;
        const r12 = a18.value.allOf.find(
          (t7) => t7.description && typeof t7.description == "string"
        );
        if (r12 != null && r12.description)
          return r12.description;
      }
      return !((n8 = a18.value) != null && n8.description) || typeof a18.value.description != "string" || a18.value.oneOf || a18.value.anyOf || a18.value.enum || !a18.value.properties && !a18.value.patternProperties && !a18.value.additionalProperties || l6.level === 0 ? null : a18.value.description;
    }), O11 = (e16) => l6.noncollapsible && e16.stopPropagation(), H7 = (e16) => {
      F4("update:modelValue", e16);
    };
    return (e16, n8) => typeof e16.value == "object" && Object.keys(e16.value).length ? (openBlock(), createBlock(unref(N), {
      key: 0,
      defaultOpen: e16.noncollapsible
    }, {
      default: withCtx(({ open: r12 }) => [
        createBaseVNode("div", {
          class: normalizeClass(["schema-card", [
            `schema-card--level-${e16.level}`,
            { "schema-card--compact": e16.compact, "schema-card--open": r12 },
            { "border-t": e16.additionalProperties && r12 }
          ]])
        }, [
          D7.value ? (openBlock(), createElementBlock("div", Z3, [
            createVNode(unref(C3), { value: D7.value }, null, 8, ["value"])
          ])) : createCommentVNode("", true),
          createBaseVNode("div", {
            class: normalizeClass(["schema-properties", {
              "schema-properties-open": r12
            }])
          }, [
            e16.additionalProperties ? withDirectives((openBlock(), createElementBlock("div", W4, [
              createVNode(unref(Q), {
                as: "button",
                class: "schema-card-title schema-card-title--compact",
                onClickCapture: O11
              }, {
                default: withCtx(() => [
                  createVNode(unref(m2), {
                    class: "schema-card-title-icon",
                    icon: "Add",
                    size: "sm"
                  }),
                  n8[0] || (n8[0] = createTextVNode(" Show additional properties ")),
                  e16.name ? (openBlock(), createBlock(f10, { key: 0 }, {
                    default: withCtx(() => [
                      createTextVNode("for " + toDisplayString(e16.name), 1)
                    ]),
                    _: 1
                  })) : createCommentVNode("", true)
                ]),
                _: 1,
                __: [0]
              })
            ], 512)), [
              [vShow, !r12]
            ]) : B8.value ? withDirectives((openBlock(), createBlock(unref(Q), {
              key: 1,
              as: e16.noncollapsible ? "div" : "button",
              class: normalizeClass(["schema-card-title", { "schema-card-title--compact": e16.compact }]),
              style: normalizeStyle({
                top: `calc(var(--refs-header-height) +  calc(var(--schema-title-height) * ${e16.level}))`
              }),
              onClickCapture: O11
            }, {
              default: withCtx(() => {
                var t7, V8, A3;
                return [
                  e16.compact ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
                    createVNode(unref(m2), {
                      class: normalizeClass(["schema-card-title-icon", { "schema-card-title-icon--open": r12 }]),
                      icon: "Add",
                      size: "sm"
                    }, null, 8, ["class"]),
                    r12 ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
                      createTextVNode(" Hide " + toDisplayString(((t7 = e16.value) == null ? void 0 : t7.title) ?? "Child Attributes"), 1)
                    ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                      createTextVNode(" Show " + toDisplayString(((V8 = e16.value) == null ? void 0 : V8.title) ?? "Child Attributes"), 1)
                    ], 64)),
                    e16.name ? (openBlock(), createBlock(f10, { key: 2 }, {
                      default: withCtx(() => [
                        createTextVNode("for " + toDisplayString(e16.name), 1)
                      ]),
                      _: 1
                    })) : createCommentVNode("", true)
                  ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                    createVNode(unref(m2), {
                      class: normalizeClass(["schema-card-title-icon", { "schema-card-title-icon--open": r12 }]),
                      icon: "Add",
                      size: "sm"
                    }, null, 8, ["class"]),
                    createVNode(e11, {
                      name: ((A3 = e16.value) == null ? void 0 : A3.title) ?? e16.name,
                      value: e16.value
                    }, null, 8, ["name", "value"])
                  ], 64))
                ];
              }),
              _: 2
            }, 1032, ["as", "class", "style"])), [
              [vShow, !e16.hideHeading && !(e16.noncollapsible && e16.compact)]
            ]) : createCommentVNode("", true),
            !e16.additionalProperties || r12 ? (openBlock(), createBlock(unref(V), {
              key: 2,
              as: "ul",
              static: !B8.value
            }, {
              default: withCtx(() => {
                var t7;
                return [
                  unref(s13)(a18.value) ? (openBlock(), createBlock(B4, {
                    key: 0,
                    breadcrumb: e16.breadcrumb,
                    compact: e16.compact,
                    discriminator: M9.value,
                    discriminatorMapping: N10.value,
                    discriminatorPropertyName: S8.value,
                    hasDiscriminator: e16.hasDiscriminator,
                    hideHeading: e16.hideHeading,
                    hideModelNames: e16.hideModelNames,
                    level: e16.level + 1,
                    orderRequiredPropertiesFirst: unref(k13).orderRequiredPropertiesFirst,
                    orderSchemaPropertiesBy: unref(k13).orderSchemaPropertiesBy,
                    schema: a18.value,
                    schemas: e16.schemas,
                    "onUpdate:modelValue": H7
                  }, null, 8, ["breadcrumb", "compact", "discriminator", "discriminatorMapping", "discriminatorPropertyName", "hasDiscriminator", "hideHeading", "hideModelNames", "level", "orderRequiredPropertiesFirst", "orderSchemaPropertiesBy", "schema", "schemas"])) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                    a18.value ? (openBlock(), createBlock(p15, {
                      key: 0,
                      breadcrumb: e16.breadcrumb,
                      compact: e16.compact,
                      discriminatorMapping: N10.value,
                      discriminatorPropertyName: S8.value,
                      hideHeading: e16.hideHeading,
                      hideModelNames: e16.hideModelNames,
                      level: e16.level,
                      modelValue: M9.value,
                      name: a18.value.name,
                      schemas: e16.schemas,
                      value: ((t7 = e16.value.discriminator) == null ? void 0 : t7.propertyName) === e16.name ? e16.value : a18.value,
                      "onUpdate:modelValue": H7
                    }, null, 8, ["breadcrumb", "compact", "discriminatorMapping", "discriminatorPropertyName", "hideHeading", "hideModelNames", "level", "modelValue", "name", "schemas", "value"])) : createCommentVNode("", true)
                  ], 64))
                ];
              }),
              _: 1
            }, 8, ["static"])) : createCommentVNode("", true)
          ], 2)
        ], 2)
      ]),
      _: 1
    }, 8, ["defaultOpen"])) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/Schema.vue.js
var f11 = s4(ne, [["__scopeId", "data-v-227f4a34"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Schema/helpers/get-schema-type.js
var o5 = (t7) => {
  var s15;
  if ((t7 == null ? void 0 : t7.const) !== void 0)
    return "const";
  if (Array.isArray(t7 == null ? void 0 : t7.type)) {
    if (t7.type.includes("array") && t7.items) {
      const r12 = o5(t7.items), i17 = r12 != null && r12.includes(" | ") ? `(${r12})` : r12, n8 = r12 ? `array ${i17}[]` : "array", y10 = t7.type.filter((c14) => c14 !== "array");
      return y10.length > 0 ? `${n8} | ${y10.join(" | ")}` : n8;
    }
    return t7.type.join(" | ");
  }
  if ((t7 == null ? void 0 : t7.type) === "array" && t7.items) {
    const r12 = o5(t7.items), i17 = r12 != null && r12.includes(" | ") ? `(${r12})` : r12, n8 = r12 ? `array ${i17}[]` : "array";
    return t7.nullable ? `${n8} | null` : n8;
  }
  return t7 != null && t7.title ? t7.title : t7 != null && t7.name ? t7.name : (s15 = t7 == null ? void 0 : t7.xml) != null && s15.name ? t7.xml.name : t7 != null && t7.type && t7.contentEncoding ? `${t7.type} • ${t7.contentEncoding}` : (t7 == null ? void 0 : t7.type) ?? "";
};

// node_modules/@scalar/api-reference/dist/components/Content/Schema/helpers/schema-composition.js
var t4 = ["oneOf", "anyOf", "allOf", "not"];
function i12(o8) {
  return t4.some((n8) => o8[n8] !== void 0);
}

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaComposition.vue.js
var J2 = { class: "property-rule" };
var K = {
  class: "composition-selector bg-b-1.5 hover:bg-b-2 flex w-full cursor-pointer items-center gap-1 rounded-t-lg border border-b-0 px-2 py-1.25 pr-3 text-left",
  type: "button"
};
var M3 = { class: "text-c-2" };
var P6 = { class: "composition-selector-label text-c-1" };
var Q3 = { class: "composition-panel" };
var ae = defineComponent({
  __name: "SchemaComposition",
  props: {
    composition: {},
    schemas: {},
    name: {},
    value: {},
    level: {},
    compact: { type: Boolean },
    hideHeading: { type: Boolean },
    breadcrumb: {}
  },
  setup(r12) {
    const p25 = ref(0), w13 = computed(() => S8.value), g6 = computed(
      () => w13.value.map(
        (e16, o8) => ({
          id: String(o8),
          label: o5(e16) || "Schema"
        })
      )
    ), d24 = computed({
      get: () => g6.value.find(
        (e16) => e16.id === String(p25.value)
      ),
      set: (e16) => p25.value = Number(e16.id)
    }), B8 = computed(() => {
      var s15;
      const e16 = ["oneOf", "anyOf"].includes(r12.composition), o8 = r12.composition === "allOf" && ((s15 = r12.value[r12.composition]) == null ? void 0 : s15.some((a18) => i12(a18)));
      return e16 || o8;
    }), D7 = (e16) => e16.find((o8) => i12(o8)), I7 = (e16) => !e16.allOf || !Array.isArray(e16.allOf) ? false : e16.allOf.some(
      (o8) => o8.oneOf || o8.anyOf || o8.allOf
    ), C12 = (e16) => e16.allOf && Array.isArray(e16.allOf) ? I7(e16) ? e16 : n5(e16.allOf) : e16, S8 = computed(() => {
      const e16 = r12.value[r12.composition], o8 = D7(e16);
      return !o8 || r12.composition !== "allOf" && o8.allOf ? e16.map(C12) : (o8.oneOf || o8.anyOf || o8.allOf).map(C12);
    }), L5 = (e16) => {
      var o8, s15;
      if (e16 === "allOf") {
        const a18 = (s15 = (o8 = r12.value) == null ? void 0 : o8[e16]) == null ? void 0 : s15.find(
          (m30) => i12(m30)
        );
        if (a18 != null && a18.oneOf)
          return "One of";
        if (a18 != null && a18.anyOf)
          return "Any of";
      }
      return e16.replace(/([A-Z])/g, " $1").replace(/^./, (a18) => a18.toUpperCase()).toLowerCase().replace(/^(\w)/, (a18) => a18.toUpperCase());
    }, n8 = computed(
      () => S8.value[p25.value]
    ), f19 = computed(() => {
      var e16;
      return (e16 = n8.value) != null && e16.oneOf ? "oneOf" : "anyOf";
    }), T9 = computed(() => {
      var o8;
      const e16 = f19.value;
      return (o8 = n8.value) == null ? void 0 : o8[e16];
    }), U6 = computed(() => {
      const e16 = n8.value;
      return e16 ? !!(e16.properties || e16.type || e16.nullable || e16.const !== void 0 || e16.enum || e16.allOf || e16.oneOf || e16.anyOf || e16.items) : false;
    });
    return (e16, o8) => {
      var a18, m30, k13;
      const s15 = resolveComponent("SchemaComposition", true);
      return openBlock(), createElementBlock("div", J2, [
        e16.composition === "allOf" && e16.value[e16.composition].some((l6) => l6.oneOf || l6.anyOf) ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(e16.value[e16.composition].filter(
          (l6) => !l6.oneOf && !l6.anyOf
        ), (l6, q10) => (openBlock(), createBlock(f11, {
          key: q10,
          breadcrumb: e16.breadcrumb,
          compact: e16.compact,
          level: e16.level,
          name: e16.name,
          noncollapsible: e16.level == 0,
          schemas: e16.schemas,
          value: l6
        }, null, 8, ["breadcrumb", "compact", "level", "name", "noncollapsible", "schemas", "value"]))), 128)) : createCommentVNode("", true),
        B8.value ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
          createVNode(unref(D), {
            modelValue: d24.value,
            "onUpdate:modelValue": o8[0] || (o8[0] = (l6) => d24.value = l6),
            options: g6.value,
            resize: ""
          }, {
            default: withCtx(() => {
              var l6;
              return [
                createBaseVNode("button", K, [
                  createBaseVNode("span", M3, toDisplayString(L5(e16.composition)), 1),
                  createBaseVNode("span", P6, toDisplayString(((l6 = d24.value) == null ? void 0 : l6.label) || "Schema"), 1),
                  createVNode(unref(C))
                ])
              ];
            }),
            _: 1
          }, 8, ["modelValue", "options"]),
          createBaseVNode("div", Q3, [
            U6.value ? (openBlock(), createBlock(f11, {
              key: 0,
              breadcrumb: e16.breadcrumb,
              compact: e16.compact,
              level: e16.level + 1,
              hideHeading: e16.hideHeading,
              name: e16.name,
              noncollapsible: true,
              schemas: e16.schemas,
              value: (a18 = n8.value) != null && a18.properties ? {
                type: "object",
                properties: n8.value.properties,
                required: n8.value.required
              } : n8.value
            }, null, 8, ["breadcrumb", "compact", "level", "hideHeading", "name", "schemas", "value"])) : createCommentVNode("", true),
            (m30 = n8.value) != null && m30.oneOf || (k13 = n8.value) != null && k13.anyOf ? (openBlock(), createBlock(s15, {
              key: 1,
              breadcrumb: e16.breadcrumb,
              compact: e16.compact,
              composition: f19.value,
              hideHeading: e16.hideHeading,
              level: e16.level + 1,
              name: e16.name,
              noncollapsible: true,
              schemas: e16.schemas,
              value: {
                [f19.value]: T9.value
              }
            }, null, 8, ["breadcrumb", "compact", "composition", "hideHeading", "level", "name", "schemas", "value"])) : createCommentVNode("", true)
          ])
        ], 64)) : (openBlock(), createBlock(f11, {
          key: 2,
          breadcrumb: e16.breadcrumb,
          compact: e16.compact,
          level: e16.level,
          name: e16.name,
          noncollapsible: e16.level == 0,
          schemas: e16.schemas,
          value: unref(n5)(e16.value[e16.composition])
        }, null, 8, ["breadcrumb", "compact", "level", "name", "noncollapsible", "schemas", "value"]))
      ]);
    };
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaDiscriminator.vue.js
var S3 = {
  class: "bg-b-1.5 hover:bg-b-2 mt-2 flex w-full items-center gap-1 rounded border px-2 py-1.25",
  type: "button"
};
var _14 = { class: "composition-selector-label text-c-1 relative" };
var M4 = defineComponent({
  __name: "SchemaDiscriminator",
  props: {
    discriminatorMapping: {},
    discriminator: {}
  },
  emits: ["update:modelValue"],
  setup(i17, { emit: c14 }) {
    const m30 = ref(""), d24 = c14, u15 = (e16) => {
      m30.value = e16, d24("update:modelValue", e16);
    }, a18 = computed(() => i17.discriminatorMapping ? Object.keys(i17.discriminatorMapping).map((e16) => ({
      id: e16,
      label: e16
    })) : []), o8 = computed({
      get: () => a18.value.find(
        (e16) => e16.id === i17.discriminator
      ),
      set: (e16) => {
        e16 != null && e16.id && u15(e16.id);
      }
    });
    return (e16, r12) => (openBlock(), createBlock(unref(D), {
      modelValue: o8.value,
      "onUpdate:modelValue": r12[0] || (r12[0] = (t7) => o8.value = t7),
      options: a18.value,
      resize: ""
    }, {
      default: withCtx(() => {
        var t7;
        return [
          createBaseVNode("button", S3, [
            createBaseVNode("span", _14, toDisplayString(((t7 = o8.value) == null ? void 0 : t7.label) || "Schema"), 1),
            createVNode(unref(C), { class: "z-1" })
          ])
        ];
      }),
      _: 1
    }, 8, ["modelValue", "options"]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaEnumPropertyItem.vue2.js
var i13 = { class: "property-enum-value" };
var m20 = { class: "property-enum-value-content" };
var u9 = { class: "property-enum-value-label" };
var d20 = {
  key: 0,
  class: "property-enum-value-description"
};
var h11 = defineComponent({
  __name: "SchemaEnumPropertyItem",
  props: {
    label: {},
    description: {}
  },
  setup(_22) {
    return (e16, v13) => (openBlock(), createElementBlock("li", i13, [
      createBaseVNode("div", m20, [
        createBaseVNode("span", u9, toDisplayString(e16.label), 1),
        e16.description ? (openBlock(), createElementBlock("span", d20, [
          createVNode(unref(C3), { value: e16.description }, null, 8, ["value"])
        ])) : createCommentVNode("", true)
      ])
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaEnumPropertyItem.vue.js
var p16 = s4(h11, [["__scopeId", "data-v-7d21d96b"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaEnumValues.vue2.js
var M5 = {
  key: 0,
  class: "property-enum"
};
var W5 = {
  key: 0,
  class: "property-enum-values"
};
var Y2 = {
  key: 1,
  class: "property-enum-values"
};
var N4 = 9;
var q7 = 5;
var S4 = " ";
var X4 = defineComponent({
  __name: "SchemaEnumValues",
  props: {
    value: {},
    isDiscriminator: { type: Boolean }
  },
  setup(l6) {
    const I7 = (t7) => {
      var n8;
      return t7 ? t7.enum || ((n8 = t7.items) == null ? void 0 : n8.enum) || [] : [];
    }, g6 = (t7, n8) => {
      var r12, a18, b10, x12;
      const e16 = ((a18 = (r12 = l6.value) == null ? void 0 : r12["x-enum-varnames"]) == null ? void 0 : a18[n8]) ?? ((x12 = (b10 = l6.value) == null ? void 0 : b10["x-enumNames"]) == null ? void 0 : x12[n8]);
      return e16 ? `${t7}${S4}=${S4}${e16}` : String(t7);
    }, d24 = (t7) => {
      var r12, a18;
      const n8 = (r12 = l6.value) == null ? void 0 : r12["x-enum-descriptions"];
      if (Array.isArray(n8))
        return n8[t7];
      const e16 = (a18 = l6.value) == null ? void 0 : a18["x-enumDescriptions"];
      if (Array.isArray(e16))
        return e16[t7];
    }, C12 = (t7) => {
      var r12, a18;
      const n8 = (r12 = l6.value) == null ? void 0 : r12["x-enumDescriptions"];
      if (n8 && !Array.isArray(n8))
        return n8[t7];
      const e16 = (a18 = l6.value) == null ? void 0 : a18["x-enum-descriptions"];
      if (e16 && !Array.isArray(e16))
        return e16[t7];
    }, i17 = computed(() => I7(l6.value)), L5 = computed(() => i17.value.length > 0), h21 = computed(
      () => i17.value.length > N4
    ), m30 = computed(
      () => h21.value ? q7 : N4
    ), V8 = computed(
      () => i17.value.slice(0, m30.value)
    ), B8 = computed(
      () => i17.value.slice(m30.value)
    ), D7 = computed(() => {
      var n8, e16;
      const t7 = ((n8 = l6.value) == null ? void 0 : n8["x-enumDescriptions"]) ?? ((e16 = l6.value) == null ? void 0 : e16["x-enum-descriptions"]);
      return t7 && typeof t7 == "object" && !Array.isArray(t7);
    }), T9 = computed(() => L5.value && !l6.isDiscriminator), c14 = ref(false), H7 = () => {
      c14.value = !c14.value;
    };
    return (t7, n8) => T9.value ? (openBlock(), createElementBlock("div", M5, [
      D7.value ? (openBlock(), createElementBlock("ul", W5, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(i17.value, (e16, r12) => (openBlock(), createBlock(p16, {
          key: e16,
          label: e16,
          description: D7.value ? C12(e16) : d24(r12)
        }, null, 8, ["label", "description"]))), 128))
      ])) : (openBlock(), createElementBlock("ul", Y2, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(V8.value, (e16, r12) => (openBlock(), createBlock(p16, {
          key: e16,
          label: g6(e16, r12),
          description: d24(r12)
        }, null, 8, ["label", "description"]))), 128)),
        h21.value ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
          c14.value ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(B8.value, (e16, r12) => (openBlock(), createBlock(p16, {
            key: e16,
            label: g6(e16, m30.value + r12),
            description: d24(m30.value + r12)
          }, null, 8, ["label", "description"]))), 128)) : createCommentVNode("", true),
          createBaseVNode("li", null, [
            createVNode(unref($), {
              class: "enum-toggle-button my-2 flex h-fit gap-1 rounded-full border py-1.5 pr-2.5 pl-2 leading-none",
              variant: "ghost",
              onClick: H7
            }, {
              default: withCtx(() => [
                createVNode(unref(y2), {
                  weight: "bold",
                  class: normalizeClass({
                    "rotate-45": c14.value
                  })
                }, null, 8, ["class"]),
                createTextVNode(" " + toDisplayString(c14.value ? "Hide values" : "Show all values"), 1)
              ]),
              _: 1
            })
          ])
        ], 64)) : createCommentVNode("", true)
      ]))
    ])) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaEnumValues.vue.js
var r9 = s4(X4, [["__scopeId", "data-v-bf2bedb9"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Schema/helpers/schema-name.js
function o6(t7) {
  if (!t7)
    return null;
  if ("title" in t7 && t7.title)
    return t7.title;
  if ("name" in t7 && t7.name)
    return t7.name;
  if ("$ref" in t7) {
    const i17 = t7.$ref.match(/\/([^\/]+)$/);
    if (i17)
      return i17[1];
  }
  return null;
}
function e12(t7, n8) {
  return t7 === "array" ? `${t7} ${n8}[]` : `${t7} ${n8}`;
}
function p17(t7, n8, i17 = false, y10) {
  if (!(t7 != null && t7.type) || i17)
    return null;
  const r12 = o6(t7);
  if (r12 && (t7.title || t7.name))
    return t7.type === "array" ? `array ${r12}[]` : r12;
  if (t7.type === "array" && t7.items) {
    if (y10) {
      const m30 = y10(t7.items, n8);
      if (m30)
        return e12(t7.type, m30);
    }
    if (t7.items.title || t7.items.name)
      return e12(t7.type, t7.items.title || t7.items.name);
    const f19 = o6(t7.items);
    return f19 && f19 !== t7.items.type ? e12(t7.type, f19) : t7.items.type ? e12(t7.type, t7.items.type) : e12(t7.type, "object");
  }
  return r12 && r12 !== t7.type ? r12.startsWith("Array of ") ? `array ${r12.replace("Array of ", "")}[]` : r12 : null;
}

// node_modules/@scalar/api-reference/dist/components/Content/Schema/RenderString.vue.js
var f12 = defineComponent({
  __name: "RenderString",
  props: {
    value: {}
  },
  setup(e16) {
    const n8 = computed(() => e16.value === "" ? "''" : e16.value === null ? "null" : e16.value === void 0 ? "undefined" : e16.value);
    return (a18, l6) => toDisplayString(n8.value);
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaPropertyDetail.vue2.js
var d21 = {
  key: 0,
  class: "property-detail-prefix"
};
var i14 = {
  key: 1,
  class: "property-detail-value"
};
var u10 = {
  key: 2,
  class: "property-detail-value"
};
var m21 = defineComponent({
  __name: "SchemaPropertyDetail",
  props: {
    truncate: { type: Boolean },
    code: { type: Boolean }
  },
  setup(c14) {
    return (e16, s15) => (openBlock(), createElementBlock("span", {
      class: normalizeClass(["property-detail", { "property-detail-truncate": e16.truncate }])
    }, [
      e16.$slots.prefix ? (openBlock(), createElementBlock("div", d21, [
        renderSlot(e16.$slots, "prefix", {}, void 0, true),
        s15[0] || (s15[0] = createTextVNode("  "))
      ])) : createCommentVNode("", true),
      e16.code ? (openBlock(), createElementBlock("code", i14, [
        renderSlot(e16.$slots, "default", {}, void 0, true)
      ])) : (openBlock(), createElementBlock("span", u10, [
        renderSlot(e16.$slots, "default", {}, void 0, true)
      ]))
    ], 2));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaPropertyDetail.vue.js
var m22 = s4(m21, [["__scopeId", "data-v-827ea49d"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Schema/helpers/format-example.js
function t5(r12) {
  return Array.isArray(r12) ? `[${r12.map((n8) => typeof n8 == "string" ? `"${n8.toString().trim()}"` : typeof n8 == "object" ? JSON.stringify(n8) : n8 === void 0 ? "undefined" : n8 === null ? "null" : n8).join(", ")}]` : r12 === null ? "null" : typeof r12 == "object" ? "value" in r12 ? r12.value : "externalValue" in r12 ? r12.externalValue : JSON.stringify(r12) : r12 === void 0 ? "undefined" : typeof r12 == "string" ? r12.trim() : r12.toString().trim();
}

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaPropertyExamples.vue2.js
var f13 = {
  key: 0,
  class: "property-example"
};
var g2 = { class: "property-example-value-list" };
var h12 = {
  key: 1,
  class: "property-example"
};
var k10 = {
  type: "button",
  class: "property-example-label"
};
var C8 = { class: "property-example-value-list" };
var _15 = ["onClick"];
var z6 = defineComponent({
  __name: "SchemaPropertyExamples",
  props: {
    examples: {},
    example: {}
  },
  setup(E11) {
    const { copyToClipboard: m30 } = useClipboard();
    return (t7, s15) => (openBlock(), createElementBlock(Fragment, null, [
      t7.example ? (openBlock(), createElementBlock("div", f13, [
        s15[1] || (s15[1] = createBaseVNode("button", {
          type: "button",
          class: "property-example-label"
        }, [
          createBaseVNode("span", null, "Example")
        ], -1)),
        createBaseVNode("div", g2, [
          createBaseVNode("button", {
            type: "button",
            class: "property-example-value group",
            onClick: s15[0] || (s15[0] = (a18) => unref(m30)(String(unref(t5)(t7.example))))
          }, [
            createBaseVNode("span", null, toDisplayString(unref(t5)(t7.example)), 1),
            createVNode(unref(m2), {
              icon: "Clipboard",
              size: "xs",
              class: "group-hover:text-c-1 text-c-3 ml-auto min-h-3 min-w-3"
            })
          ])
        ])
      ])) : createCommentVNode("", true),
      t7.examples && typeof t7.examples == "object" && Object.keys(t7.examples).length > 0 ? (openBlock(), createElementBlock("div", h12, [
        createBaseVNode("button", k10, [
          createBaseVNode("span", null, toDisplayString(Object.keys(t7.examples).length === 1 ? "Example" : "Examples"), 1)
        ]),
        createBaseVNode("div", C8, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(t7.examples, (a18, d24) => (openBlock(), createElementBlock("button", {
            type: "button",
            key: d24,
            class: "property-example-value group",
            onClick: (S8) => unref(m30)(String(unref(t5)(a18)))
          }, [
            createBaseVNode("span", null, toDisplayString(unref(t5)(a18)), 1),
            createVNode(unref(m2), {
              icon: "Clipboard",
              size: "xs",
              class: "text-c-3 group-hover:text-c-1 ml-auto min-h-3 min-w-3"
            })
          ], 8, _15))), 128))
        ])
      ])) : createCommentVNode("", true)
    ], 64));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaPropertyExamples.vue.js
var a10 = s4(z6, [["__scopeId", "data-v-3f177f42"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaPropertyHeading.vue2.js
var R3 = { class: "property-heading" };
var j7 = {
  key: 1,
  class: "property-discriminator"
};
var G3 = {
  key: 3,
  class: "property-additional"
};
var K2 = {
  key: 4,
  class: "property-deprecated"
};
var Q4 = {
  key: 5,
  class: "property-const"
};
var U5 = {
  key: 7,
  class: "property-write-only"
};
var W6 = {
  key: 8,
  class: "property-read-only"
};
var X5 = {
  key: 9,
  class: "property-required"
};
var ae2 = defineComponent({
  __name: "SchemaPropertyHeading",
  props: {
    value: {},
    enum: { type: Boolean },
    required: { type: Boolean, default: false },
    additional: { type: Boolean },
    withExamples: { type: Boolean, default: true },
    hideModelNames: { type: Boolean, default: false },
    schemas: {}
  },
  setup(d24) {
    const E11 = (e16) => (e16 == null ? void 0 : e16.default) === null ? "null" : Array.isArray(e16 == null ? void 0 : e16.default) && e16.default.length === 1 ? e16.default[0] : typeof (e16 == null ? void 0 : e16.default) == "string" || Array.isArray(e16 == null ? void 0 : e16.default) ? JSON.stringify(e16.default) : e16 == null ? void 0 : e16.default, B8 = computed(() => {
      var e16, t7, v13, k13, g6, N10;
      if (((e16 = d24.value) == null ? void 0 : e16.const) !== void 0)
        return (t7 = d24.value) == null ? void 0 : t7.const;
      if (((k13 = (v13 = d24.value) == null ? void 0 : v13.enum) == null ? void 0 : k13.length) === 1)
        return d24.value.enum[0];
      if ((g6 = d24.value) != null && g6.items) {
        if (isDefined(d24.value.items.const))
          return d24.value.items.const;
        if (((N10 = d24.value.items.enum) == null ? void 0 : N10.length) === 1)
          return d24.value.items.enum[0];
      }
    }), D7 = computed(() => d24.value ? p17(
      d24.value,
      d24.schemas,
      d24.hideModelNames,
      I2
    ) : null);
    return (e16, t7) => {
      var v13, k13, g6, N10, M9, q10, w13, O11, P10, I7, V8, A3;
      return openBlock(), createElementBlock("div", R3, [
        e16.$slots.name ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(["property-name", { deprecated: (v13 = e16.value) == null ? void 0 : v13.deprecated }])
        }, [
          renderSlot(e16.$slots, "name", {}, void 0, true)
        ], 2)) : createCommentVNode("", true),
        (k13 = e16.value) != null && k13.isDiscriminator ? (openBlock(), createElementBlock("div", j7, " Discriminator ")) : createCommentVNode("", true),
        e16.value ? (openBlock(), createElementBlock(Fragment, { key: 2 }, [
          (g6 = e16.value) != null && g6.type ? (openBlock(), createBlock(m22, {
            key: 0,
            truncate: ""
          }, {
            default: withCtx(() => [
              createVNode(f10, null, {
                default: withCtx(() => t7[0] || (t7[0] = [
                  createTextVNode("Type: ")
                ])),
                _: 1,
                __: [0]
              }),
              D7.value ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
                createTextVNode(toDisplayString(D7.value), 1)
              ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                createTextVNode(toDisplayString(unref(o5)(e16.value)), 1)
              ], 64))
            ]),
            _: 1
          })) : createCommentVNode("", true),
          e16.value.minItems || e16.value.maxItems ? (openBlock(), createBlock(m22, { key: 1 }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString(e16.value.minItems) + "…" + toDisplayString(e16.value.maxItems), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true),
          e16.value.minLength ? (openBlock(), createBlock(m22, { key: 2 }, {
            prefix: withCtx(() => t7[1] || (t7[1] = [
              createTextVNode("min length: ")
            ])),
            default: withCtx(() => [
              createTextVNode(" " + toDisplayString(e16.value.minLength), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true),
          e16.value.maxLength ? (openBlock(), createBlock(m22, { key: 3 }, {
            prefix: withCtx(() => t7[2] || (t7[2] = [
              createTextVNode("max length: ")
            ])),
            default: withCtx(() => [
              createTextVNode(" " + toDisplayString(e16.value.maxLength), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true),
          e16.value.uniqueItems ? (openBlock(), createBlock(m22, { key: 4 }, {
            default: withCtx(() => t7[3] || (t7[3] = [
              createTextVNode(" unique! ")
            ])),
            _: 1,
            __: [3]
          })) : createCommentVNode("", true),
          e16.value.format ? (openBlock(), createBlock(m22, {
            key: 5,
            truncate: ""
          }, {
            default: withCtx(() => [
              createVNode(f10, null, {
                default: withCtx(() => t7[4] || (t7[4] = [
                  createTextVNode("Format:")
                ])),
                _: 1,
                __: [4]
              }),
              createTextVNode(" " + toDisplayString(e16.value.format), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true),
          unref(isDefined)(e16.value.exclusiveMinimum) ? (openBlock(), createBlock(m22, { key: 6 }, {
            prefix: withCtx(() => t7[5] || (t7[5] = [
              createTextVNode("greater than: ")
            ])),
            default: withCtx(() => [
              createTextVNode(" " + toDisplayString(e16.value.exclusiveMinimum), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true),
          unref(isDefined)(e16.value.minimum) ? (openBlock(), createBlock(m22, { key: 7 }, {
            prefix: withCtx(() => t7[6] || (t7[6] = [
              createTextVNode("min: ")
            ])),
            default: withCtx(() => [
              createTextVNode(" " + toDisplayString(e16.value.minimum), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true),
          unref(isDefined)(e16.value.exclusiveMaximum) ? (openBlock(), createBlock(m22, { key: 8 }, {
            prefix: withCtx(() => t7[7] || (t7[7] = [
              createTextVNode("less than: ")
            ])),
            default: withCtx(() => [
              createTextVNode(" " + toDisplayString(e16.value.exclusiveMaximum), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true),
          unref(isDefined)(e16.value.maximum) ? (openBlock(), createBlock(m22, { key: 9 }, {
            prefix: withCtx(() => t7[8] || (t7[8] = [
              createTextVNode("max: ")
            ])),
            default: withCtx(() => [
              createTextVNode(" " + toDisplayString(e16.value.maximum), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true),
          unref(isDefined)(e16.value.multipleOf) ? (openBlock(), createBlock(m22, { key: 10 }, {
            prefix: withCtx(() => t7[9] || (t7[9] = [
              createTextVNode("multiple of: ")
            ])),
            default: withCtx(() => [
              createTextVNode(" " + toDisplayString(e16.value.multipleOf), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true),
          e16.value.pattern ? (openBlock(), createBlock(m22, {
            key: 11,
            code: "",
            truncate: ""
          }, {
            default: withCtx(() => [
              createVNode(f10, null, {
                default: withCtx(() => t7[10] || (t7[10] = [
                  createTextVNode("Pattern:")
                ])),
                _: 1,
                __: [10]
              }),
              createTextVNode(" " + toDisplayString(e16.value.pattern), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true),
          e16.$props.enum ? (openBlock(), createBlock(m22, { key: 12 }, {
            default: withCtx(() => t7[11] || (t7[11] = [
              createTextVNode("enum")
            ])),
            _: 1,
            __: [11]
          })) : createCommentVNode("", true),
          e16.value.default !== void 0 ? (openBlock(), createBlock(m22, {
            key: 13,
            truncate: ""
          }, {
            prefix: withCtx(() => t7[12] || (t7[12] = [
              createTextVNode("default: ")
            ])),
            default: withCtx(() => [
              createTextVNode(" " + toDisplayString(E11(e16.value)), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true)
        ], 64)) : createCommentVNode("", true),
        e16.additional ? (openBlock(), createElementBlock("div", G3, [
          (N10 = e16.value) != null && N10["x-additionalPropertiesName"] ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
            createTextVNode(toDisplayString(e16.value["x-additionalPropertiesName"]), 1)
          ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
            createTextVNode("additional properties")
          ], 64))
        ])) : createCommentVNode("", true),
        (M9 = e16.value) != null && M9.deprecated ? (openBlock(), createElementBlock("div", K2, [
          createVNode(unref(d7), null, {
            default: withCtx(() => t7[13] || (t7[13] = [
              createTextVNode("deprecated")
            ])),
            _: 1,
            __: [13]
          })
        ])) : createCommentVNode("", true),
        B8.value !== void 0 ? (openBlock(), createElementBlock("div", Q4, [
          createVNode(m22, { truncate: "" }, {
            prefix: withCtx(() => t7[14] || (t7[14] = [
              createTextVNode("const: ")
            ])),
            default: withCtx(() => [
              createVNode(f12, { value: B8.value }, null, 8, ["value"])
            ]),
            _: 1
          })
        ])) : (openBlock(), createElementBlock(Fragment, { key: 6 }, [
          ((q10 = e16.value) == null ? void 0 : q10.nullable) === true ? (openBlock(), createBlock(m22, { key: 0 }, {
            default: withCtx(() => t7[15] || (t7[15] = [
              createTextVNode(" nullable ")
            ])),
            _: 1,
            __: [15]
          })) : createCommentVNode("", true)
        ], 64)),
        (w13 = e16.value) != null && w13.writeOnly ? (openBlock(), createElementBlock("div", U5, " write-only ")) : (O11 = e16.value) != null && O11.readOnly ? (openBlock(), createElementBlock("div", W6, " read-only ")) : createCommentVNode("", true),
        e16.required ? (openBlock(), createElementBlock("div", X5, " required ")) : createCommentVNode("", true),
        e16.withExamples ? (openBlock(), createBlock(a10, {
          key: 10,
          examples: (P10 = e16.value) == null ? void 0 : P10.examples,
          example: ((I7 = e16.value) == null ? void 0 : I7.example) || ((A3 = (V8 = e16.value) == null ? void 0 : V8.items) == null ? void 0 : A3.example)
        }, null, 8, ["examples", "example"])) : createCommentVNode("", true)
      ]);
    };
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaPropertyHeading.vue.js
var f14 = s4(ae2, [["__scopeId", "data-v-fe194f0c"]]);

// node_modules/@scalar/api-reference/dist/components/Anchor/WithBreadcrumb.vue2.js
var S5 = ["id"];
var $5 = { class: "sr-only" };
var _16 = defineComponent({
  __name: "WithBreadcrumb",
  props: {
    breadcrumb: {}
  },
  setup(a18) {
    const { copyToClipboard: c14 } = useClipboard(), { getHashedUrl: n8, isIntersectionEnabled: r12, replaceUrlState: i17 } = T(), t7 = computed(() => {
      var e16;
      return (e16 = a18.breadcrumb) == null ? void 0 : e16.join(".");
    }), u15 = async () => {
      t7.value && (c14(n8(t7.value)), r12.value = false, i17(t7.value), scrollToId(t7.value, true), await sleep(100), r12.value = true);
    };
    return (e16, l6) => e16.breadcrumb ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: "relative scroll-mt-24",
      id: t7.value
    }, [
      renderSlot(e16.$slots, "default"),
      createBaseVNode("button", {
        class: "text-c-3 hover:text-c-1 absolute -top-2 -left-4.5 flex h-[calc(100%+16px)] w-4.5 cursor-pointer items-center justify-center pr-1.5 opacity-0 group-hover:opacity-100 focus-visible:opacity-100",
        type: "button",
        onClick: u15
      }, [
        createVNode(unref(H2), {
          class: "size-3",
          weight: "bold"
        }),
        createBaseVNode("span", $5, [
          renderSlot(e16.$slots, "sr-label", {}, () => [
            l6[0] || (l6[0] = createTextVNode("Copy link to ")),
            renderSlot(e16.$slots, "default")
          ])
        ])
      ])
    ], 8, S5)) : renderSlot(e16.$slots, "default", { key: 1 });
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaProperty.vue2.js
var ae3 = {
  key: 0,
  class: "property-name-pattern-properties"
};
var ne2 = {
  key: 1,
  class: "property-name-additional-properties"
};
var oe2 = {
  key: 1,
  class: "property-description"
};
var te = {
  key: 2,
  class: "property-description"
};
var se = {
  key: 3,
  class: "children"
};
var me3 = {
  key: 0,
  class: "children"
};
var Ne = defineComponent({
  __name: "SchemaProperty",
  props: {
    is: {},
    value: {},
    noncollapsible: { type: Boolean },
    level: { default: 0 },
    name: {},
    required: { type: Boolean, default: false },
    compact: { type: Boolean, default: false },
    description: {},
    withExamples: { type: Boolean, default: true },
    hideModelNames: { type: Boolean, default: false },
    schemas: {},
    hideHeading: { type: Boolean },
    discriminatorMapping: {},
    discriminatorPropertyName: {},
    isDiscriminator: { type: Boolean },
    variant: {},
    breadcrumb: {}
  },
  emits: ["update:modelValue"],
  setup(T9, { emit: R8 }) {
    const c14 = T9, w13 = R8, k13 = {
      integer: {
        _default: "Integer numbers.",
        int32: "Signed 32-bit integers (commonly used integer type).",
        int64: "Signed 64-bit integers (long type)."
      },
      string: {
        date: "full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21",
        "date-time": "the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z",
        password: "a hint to UIs to mask the input",
        base64: "base64-encoded characters, for example, U3dhZ2dlciByb2Nrcw==",
        byte: "base64-encoded characters, for example, U3dhZ2dlciByb2Nrcw==",
        binary: "binary data, used to describe files"
      }
    }, g6 = (e16, r12) => r12 != null && r12.properties || r12 != null && r12.additionalProperties || r12 != null && r12.patternProperties || r12 != null && r12.allOf ? null : e16 || (r12 == null ? void 0 : r12.description) || null, N10 = (e16) => !e16 || !k13[e16.type] ? null : k13[e16.type][e16.format || e16.contentEncoding || "_default"], E11 = (e16) => {
      var r12;
      return (e16 == null ? void 0 : e16.enum) || ((r12 = e16 == null ? void 0 : e16.items) == null ? void 0 : r12.enum) || [];
    }, i17 = computed(() => b4(c14.value)), t7 = inject(V4, null), n8 = computed(() => {
      var e16;
      return c14.level > 0 ? i17.value : (e16 = t7 == null ? void 0 : t7.value) != null && e16.mergedSchema ? t7.value.mergedSchema : i17.value;
    }), I7 = computed(() => {
      var e16;
      return ((e16 = t7 == null ? void 0 : t7.value) == null ? void 0 : e16.selectedType) || (c14.discriminatorMapping ? Object.keys(c14.discriminatorMapping)[0] : "");
    }), U6 = (e16, r12, p25) => r12 || (e16 == null ? void 0 : e16.deprecated) || (e16 == null ? void 0 : e16.const) !== void 0 || (e16 == null ? void 0 : e16.enum) && e16.enum.length === 1 || (e16 == null ? void 0 : e16.type) || (e16 == null ? void 0 : e16.nullable) === true || (e16 == null ? void 0 : e16.writeOnly) || (e16 == null ? void 0 : e16.readOnly) || p25, v13 = (e16) => {
      w13("update:modelValue", e16);
    }, P10 = computed(() => {
      const e16 = i17.value;
      if (!(e16 != null && e16.items) || typeof e16.items != "object")
        return false;
      const r12 = e16.items;
      return "type" in r12 && ["object"].includes(r12.type) || "$ref" in r12 || "discriminator" in r12 || "allOf" in r12 || "oneOf" in r12 || "anyOf" in r12;
    }), $6 = (e16) => {
      const r12 = i17.value;
      return !(r12 != null && r12.items) || typeof r12.items != "object" || !(e16 in r12.items) ? false : !P10.value;
    }, q10 = computed(() => P10.value), F4 = computed(() => {
      if (!i17.value)
        return false;
      const e16 = i17.value, r12 = s13(e16), p25 = e16.properties || e16.additionalProperties;
      return r12 && p25;
    }), A3 = computed(() => c14.level <= 1);
    return (e16, r12) => {
      var p25;
      return openBlock(), createBlock(resolveDynamicComponent(e16.is ?? "li"), {
        class: normalizeClass(["property", [
          (g6(e16.description, i17.value), ""),
          `property--level-${e16.level}`,
          {
            "property--compact": e16.compact,
            "property--deprecated": (p25 = i17.value) == null ? void 0 : p25.deprecated
          }
        ]])
      }, {
        default: withCtx(() => {
          var M9, S8;
          return [
            U6(i17.value, e16.name, e16.required) ? (openBlock(), createBlock(f14, {
              key: 0,
              enum: E11(i17.value).length > 0,
              required: e16.required,
              value: i17.value,
              schemas: e16.schemas,
              hideModelNames: e16.hideModelNames,
              class: "group"
            }, createSlots({ _: 2 }, [
              e16.name ? {
                name: "name",
                fn: withCtx(() => [
                  createVNode(unref(_16), {
                    breadcrumb: A3.value && e16.breadcrumb ? [...e16.breadcrumb, e16.name] : void 0
                  }, {
                    default: withCtx(() => [
                      e16.variant === "patternProperties" ? (openBlock(), createElementBlock("span", ae3, toDisplayString(e16.name), 1)) : e16.variant === "additionalProperties" ? (openBlock(), createElementBlock("span", ne2, toDisplayString(e16.name), 1)) : (openBlock(), createElementBlock(Fragment, { key: 2 }, [
                        createTextVNode(toDisplayString(e16.name), 1)
                      ], 64))
                    ]),
                    _: 1
                  }, 8, ["breadcrumb"])
                ]),
                key: "0"
              } : void 0,
              (M9 = i17.value) != null && M9.example ? {
                name: "example",
                fn: withCtx(() => [
                  createTextVNode(" Example: " + toDisplayString(i17.value.example), 1)
                ]),
                key: "1"
              } : void 0
            ]), 1032, ["enum", "required", "value", "schemas", "hideModelNames"])) : createCommentVNode("", true),
            g6(e16.description, i17.value) ? (openBlock(), createElementBlock("div", oe2, [
              createVNode(unref(C3), {
                value: g6(e16.description, i17.value)
              }, null, 8, ["value"])
            ])) : N10(i17.value) ? (openBlock(), createElementBlock("div", te, [
              createVNode(unref(C3), {
                value: N10(i17.value) || ""
              }, null, 8, ["value"])
            ])) : createCommentVNode("", true),
            createVNode(r9, { value: i17.value }, null, 8, ["value"]),
            F4.value ? (openBlock(), createElementBlock("div", se, [
              createVNode(f11, {
                compact: e16.compact,
                breadcrumb: e16.breadcrumb && e16.name ? [...e16.breadcrumb, e16.name] : void 0,
                level: e16.level + 1,
                name: e16.name,
                noncollapsible: e16.noncollapsible,
                value: n8.value,
                resolvedSchema: n8.value,
                discriminatorMapping: e16.discriminatorMapping,
                discriminatorPropertyName: e16.discriminatorPropertyName,
                schemas: e16.schemas,
                "onUpdate:modelValue": v13
              }, null, 8, ["compact", "breadcrumb", "level", "name", "noncollapsible", "value", "resolvedSchema", "discriminatorMapping", "discriminatorPropertyName", "schemas"])
            ])) : createCommentVNode("", true),
            (S8 = i17.value) != null && S8.items && typeof i17.value.items == "object" ? (openBlock(), createElementBlock(Fragment, { key: 4 }, [
              q10.value ? (openBlock(), createElementBlock("div", me3, [
                createVNode(f11, {
                  compact: e16.compact,
                  level: e16.level + 1,
                  name: e16.name,
                  noncollapsible: e16.noncollapsible,
                  value: n8.value && typeof n8.value == "object" && "items" in n8.value ? n8.value.items : i17.value.items,
                  resolvedSchema: n8.value && typeof n8.value == "object" && "items" in n8.value ? n8.value.items : i17.value.items,
                  discriminatorMapping: e16.discriminatorMapping,
                  discriminatorPropertyName: e16.discriminatorPropertyName,
                  schemas: e16.schemas,
                  "onUpdate:modelValue": v13
                }, null, 8, ["compact", "level", "name", "noncollapsible", "value", "resolvedSchema", "discriminatorMapping", "discriminatorPropertyName", "schemas"])
              ])) : createCommentVNode("", true)
            ], 64)) : createCommentVNode("", true),
            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(d18), (s15) => {
              var O11, j10, B8;
              return openBlock(), createElementBlock(Fragment, { key: s15 }, [
                (O11 = i17.value) != null && O11[s15] && !((j10 = i17.value) != null && j10.items && typeof s15 == "string" && typeof i17.value.items == "object" && s15 in i17.value.items) ? (openBlock(), createBlock(ae, {
                  key: 0,
                  breadcrumb: e16.breadcrumb,
                  compact: e16.compact,
                  composition: s15,
                  hideHeading: e16.hideHeading,
                  level: e16.level,
                  name: e16.name,
                  noncollapsible: e16.noncollapsible,
                  schemas: e16.schemas,
                  value: i17.value
                }, null, 8, ["breadcrumb", "compact", "composition", "hideHeading", "level", "name", "noncollapsible", "schemas", "value"])) : $6(s15) ? (openBlock(), createBlock(ae, {
                  key: 1,
                  breadcrumb: e16.breadcrumb,
                  compact: e16.compact,
                  composition: s15,
                  hideHeading: e16.hideHeading,
                  level: e16.level,
                  name: e16.name,
                  noncollapsible: e16.noncollapsible,
                  schemas: e16.schemas,
                  value: (B8 = i17.value) == null ? void 0 : B8.items
                }, null, 8, ["breadcrumb", "compact", "composition", "hideHeading", "level", "name", "noncollapsible", "schemas", "value"])) : createCommentVNode("", true)
              ], 64);
            }), 128)),
            e16.isDiscriminator && e16.discriminatorMapping && e16.compact ? (openBlock(), createBlock(M4, {
              key: 5,
              "discriminator-mapping": e16.discriminatorMapping,
              discriminator: I7.value,
              "onUpdate:modelValue": v13
            }, null, 8, ["discriminator-mapping", "discriminator"])) : createCommentVNode("", true),
            createVNode(unref(O5), { value: i17.value }, null, 8, ["value"])
          ];
        }),
        _: 1
      }, 8, ["class"]);
    };
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Schema/SchemaProperty.vue.js
var p15 = s4(Ne, [["__scopeId", "data-v-705ef8bd"]]);

// node_modules/@scalar/api-reference/dist/features/Operation/components/ParameterHeaders.vue2.js
var V5 = defineComponent({
  __name: "ParameterHeaders",
  props: {
    headers: {},
    breadcrumb: {}
  },
  setup(S8) {
    function h21(e16) {
      return e16.schema !== void 0;
    }
    return (e16, y10) => (openBlock(), createBlock(unref(N), null, {
      default: withCtx(({ open: a18 }) => [
        createBaseVNode("div", {
          class: normalizeClass(["headers-card headers-card--compact", [{ "headers-card--open": a18 }]])
        }, [
          createBaseVNode("div", {
            class: normalizeClass(["headers-properties", { "headers-properties-open": a18 }])
          }, [
            createVNode(unref(Q), {
              class: "headers-card-title headers-card-title--compact",
              style: {
                top: "calc(var(--refs-header-height)))"
              }
            }, {
              default: withCtx(() => [
                createVNode(unref(m2), {
                  class: normalizeClass(["headers-card-title-icon", { "headers-card-title-icon--open": a18 }]),
                  icon: "Add",
                  size: "sm"
                }, null, 8, ["class"]),
                a18 ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
                  createTextVNode(" Hide Headers ")
                ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                  createTextVNode(" Show Headers ")
                ], 64))
              ]),
              _: 2
            }, 1024),
            createVNode(unref(V), null, {
              default: withCtx(() => [
                (openBlock(true), createElementBlock(Fragment, null, renderList(e16.headers, (t7, n8) => (openBlock(), createBlock(p15, {
                  breadcrumb: e16.breadcrumb ? [...e16.breadcrumb, "headers"] : void 0,
                  key: n8,
                  description: t7.description,
                  name: `${n8}`,
                  value: h21(t7) ? t7.schema : void 0
                }, null, 8, ["breadcrumb", "description", "name", "value"]))), 128))
              ]),
              _: 1
            })
          ], 2)
        ], 2)
      ]),
      _: 1
    }));
  }
});

// node_modules/@scalar/api-reference/dist/features/Operation/components/ParameterHeaders.vue.js
var m23 = s4(V5, [["__scopeId", "data-v-96f30d93"]]);

// node_modules/@scalar/api-reference/dist/features/Operation/components/ParameterListItem.vue2.js
var H5 = {
  key: 0,
  class: "parameter-item group/parameter-item relative"
};
var L3 = { class: "parameter-item-name" };
var M6 = { class: "parameter-item-type" };
var R4 = { class: "absolute top-3 right-0 opacity-0 group-focus-within/parameter-item:opacity-100 group-hover/parameter-item:opacity-100" };
var W7 = defineComponent({
  __name: "ParameterListItem",
  props: {
    parameter: {},
    showChildren: { type: Boolean, default: false },
    collapsableItems: { type: Boolean, default: false },
    withExamples: { type: Boolean, default: true },
    schemas: {},
    breadcrumb: {}
  },
  setup(w13) {
    const a18 = w13, g6 = computed(() => a18.parameter.content ? Object.keys(a18.parameter.content) : []), t7 = ref(g6.value[0]);
    a18.parameter.content && "application/json" in a18.parameter.content && (t7.value = "application/json");
    const m30 = computed(() => !!(a18.collapsableItems && (a18.parameter.content || a18.parameter.headers || a18.parameter.schema))), B8 = computed(() => a18.parameter.readOnly !== true);
    return (e16, d24) => B8.value ? (openBlock(), createElementBlock("li", H5, [
      createVNode(unref(N), null, {
        default: withCtx(({ open: n8 }) => [
          m30.value ? (openBlock(), createBlock(unref(Q), {
            key: 0,
            class: normalizeClass(["parameter-item-trigger", { "parameter-item-trigger-open": n8 }])
          }, {
            default: withCtx(() => [
              createBaseVNode("span", L3, [
                createVNode(unref(L), {
                  weight: "bold",
                  class: normalizeClass(["parameter-item-icon size-3 transition-transform duration-100", { "rotate-90": n8 }])
                }, null, 8, ["class"]),
                createBaseVNode("span", null, toDisplayString(e16.parameter.name), 1)
              ]),
              createBaseVNode("span", M6, [
                e16.parameter.description ? (openBlock(), createBlock(unref(C3), {
                  key: 0,
                  class: "markdown",
                  value: e16.parameter.description
                }, null, 8, ["value"])) : createCommentVNode("", true)
              ])
            ]),
            _: 2
          }, 1032, ["class"])) : createCommentVNode("", true),
          createVNode(unref(V), {
            class: "parameter-item-container parameter-item-container-markdown",
            static: !m30.value
          }, {
            default: withCtx(() => {
              var f19, h21, y10, b10, v13;
              return [
                e16.parameter.headers ? (openBlock(), createBlock(m23, {
                  key: 0,
                  breadcrumb: e16.breadcrumb,
                  headers: e16.parameter.headers
                }, null, 8, ["breadcrumb", "headers"])) : createCommentVNode("", true),
                createVNode(unref(p15), {
                  is: "div",
                  compact: "",
                  breadcrumb: e16.breadcrumb,
                  description: m30.value ? "" : e16.parameter.description,
                  name: m30.value ? "" : e16.parameter.name,
                  noncollapsible: true,
                  required: e16.parameter.required,
                  schemas: e16.schemas,
                  value: {
                    ...e16.parameter.content ? (h21 = (f19 = e16.parameter.content) == null ? void 0 : f19[t7.value]) == null ? void 0 : h21.schema : e16.parameter.schema,
                    deprecated: e16.parameter.deprecated,
                    ...unref(isDefined)(e16.parameter.example) && { example: e16.parameter.example },
                    examples: e16.parameter.content ? {
                      ...e16.parameter.examples,
                      ...(b10 = (y10 = e16.parameter.content) == null ? void 0 : y10[t7.value]) == null ? void 0 : b10.examples
                    } : e16.parameter.examples || ((v13 = e16.parameter.schema) == null ? void 0 : v13.examples)
                  },
                  withExamples: e16.withExamples
                }, null, 8, ["breadcrumb", "description", "name", "required", "schemas", "value", "withExamples"])
              ];
            }),
            _: 1
          }, 8, ["static"])
        ]),
        _: 1
      }),
      createBaseVNode("div", R4, [
        m30.value && a18.parameter.content ? (openBlock(), createBlock(j6, {
          key: 0,
          class: "parameter-item-content-type",
          defaultValue: t7.value,
          requestBody: a18.parameter,
          onSelectContentType: d24[0] || (d24[0] = ({ contentType: n8 }) => t7.value = n8)
        }, null, 8, ["defaultValue", "requestBody"])) : createCommentVNode("", true)
      ])
    ])) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/features/Operation/components/ParameterListItem.vue.js
var a11 = s4(W7, [["__scopeId", "data-v-f353e243"]]);

// node_modules/@scalar/api-reference/dist/features/Operation/components/ParameterList.vue2.js
var h13 = {
  key: 0,
  class: "parameter-list"
};
var u11 = { class: "parameter-list-title" };
var b5 = { class: "parameter-list-items" };
var E7 = defineComponent({
  __name: "ParameterList",
  props: {
    parameters: {},
    showChildren: { type: Boolean, default: false },
    collapsableItems: { type: Boolean, default: false },
    withExamples: { type: Boolean, default: true },
    schemas: {},
    breadcrumb: {}
  },
  setup(f19) {
    return (e16, w13) => {
      var t7;
      return (t7 = e16.parameters) != null && t7.length ? (openBlock(), createElementBlock("div", h13, [
        createBaseVNode("div", u11, [
          renderSlot(e16.$slots, "title", {}, void 0, true)
        ]),
        createBaseVNode("ul", b5, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(e16.parameters, (r12) => (openBlock(), createBlock(a11, {
            key: r12.name,
            breadcrumb: e16.breadcrumb,
            collapsableItems: e16.collapsableItems,
            parameter: r12,
            schemas: e16.schemas,
            showChildren: e16.showChildren,
            withExamples: e16.withExamples
          }, null, 8, ["breadcrumb", "collapsableItems", "parameter", "schemas", "showChildren", "withExamples"]))), 128))
        ])
      ])) : createCommentVNode("", true);
    };
  }
});

// node_modules/@scalar/api-reference/dist/features/Operation/components/ParameterList.vue.js
var e13 = s4(E7, [["__scopeId", "data-v-d28c9986"]]);

// node_modules/@scalar/api-reference/dist/features/Operation/components/RequestBody.vue2.js
var O8 = {
  key: 0,
  class: "request-body"
};
var T5 = { class: "request-body-header" };
var _17 = { class: "request-body-title" };
var g3 = {
  key: 0,
  class: "request-body-required"
};
var I3 = {
  key: 0,
  class: "request-body-description"
};
var M7 = {
  key: 0,
  class: "request-body-schema"
};
var N5 = {
  key: 1,
  class: "request-body-schema"
};
var y9 = 12;
var D3 = defineComponent({
  __name: "RequestBody",
  props: {
    breadcrumb: {},
    requestBody: {},
    schemas: {}
  },
  emits: ["update:modelValue"],
  setup(i17, { emit: k13 }) {
    var q10;
    const E11 = k13, v13 = computed(
      () => {
        var e16;
        return Object.keys(((e16 = i17.requestBody) == null ? void 0 : e16.content) ?? {});
      }
    ), t7 = ref("application/json");
    (q10 = i17.requestBody) != null && q10.content && v13.value.length > 0 && (t7.value = v13.value[0]);
    const m30 = computed(() => {
      var r12, n8, B8;
      const e16 = (B8 = (n8 = (r12 = i17.requestBody) == null ? void 0 : r12.content) == null ? void 0 : n8[t7.value]) == null ? void 0 : B8.schema;
      if ((e16 == null ? void 0 : e16.type) !== "object" || !e16.properties)
        return null;
      const s15 = Object.entries(e16.properties);
      if (s15.length <= y9)
        return null;
      const { properties: p25, ...o8 } = e16;
      return {
        visibleProperties: {
          ...o8,
          properties: Object.fromEntries(
            s15.slice(0, y9)
          )
        },
        collapsedProperties: {
          ...o8,
          properties: Object.fromEntries(
            s15.slice(y9)
          )
        }
      };
    }), h21 = (e16) => {
      E11("update:modelValue", e16);
    };
    return (e16, s15) => {
      var p25, o8, r12;
      return e16.requestBody ? (openBlock(), createElementBlock("div", O8, [
        createBaseVNode("div", T5, [
          createBaseVNode("span", _17, [
            renderSlot(e16.$slots, "title", {}, void 0, true),
            e16.requestBody.required ? (openBlock(), createElementBlock("div", g3, " required ")) : createCommentVNode("", true)
          ]),
          createVNode(j6, {
            defaultValue: t7.value,
            requestBody: e16.requestBody,
            onSelectContentType: s15[0] || (s15[0] = ({ contentType: n8 }) => t7.value = n8)
          }, null, 8, ["defaultValue", "requestBody"]),
          e16.requestBody.description ? (openBlock(), createElementBlock("div", I3, [
            createVNode(unref(C3), {
              value: e16.requestBody.description
            }, null, 8, ["value"])
          ])) : createCommentVNode("", true)
        ]),
        m30.value ? (openBlock(), createElementBlock("div", M7, [
          createVNode(unref(f11), {
            compact: "",
            name: "Request Body",
            noncollapsible: "",
            breadcrumb: e16.breadcrumb,
            schemas: e16.schemas,
            value: m30.value.visibleProperties,
            "onUpdate:modelValue": h21
          }, null, 8, ["breadcrumb", "schemas", "value"]),
          createVNode(unref(f11), {
            additionalProperties: "",
            compact: "",
            name: "Request Body",
            breadcrumb: e16.breadcrumb,
            schemas: e16.schemas,
            value: m30.value.collapsedProperties
          }, null, 8, ["breadcrumb", "schemas", "value"])
        ])) : (p25 = e16.requestBody.content) != null && p25[t7.value] ? (openBlock(), createElementBlock("div", N5, [
          createVNode(unref(f11), {
            breadcrumb: e16.breadcrumb,
            compact: "",
            name: "Request Body",
            noncollapsible: "",
            schemas: e16.schemas,
            value: (r12 = (o8 = e16.requestBody.content) == null ? void 0 : o8[t7.value]) == null ? void 0 : r12.schema,
            "onUpdate:modelValue": h21
          }, null, 8, ["breadcrumb", "schemas", "value"])
        ])) : createCommentVNode("", true)
      ])) : createCommentVNode("", true);
    };
  }
});

// node_modules/@scalar/api-reference/dist/features/Operation/components/RequestBody.vue.js
var p18 = s4(D3, [["__scopeId", "data-v-940125b5"]]);

// node_modules/@scalar/api-reference/dist/features/Operation/components/OperationParameters.vue.js
var V6 = defineComponent({
  __name: "OperationParameters",
  props: {
    breadcrumb: {},
    parameters: { default: () => [] },
    requestBody: {},
    schemas: {}
  },
  emits: ["update:modelValue"],
  setup(b10, { emit: u15 }) {
    const i17 = u15, p25 = (e16) => {
      i17("update:modelValue", e16);
    }, s15 = (e16) => {
      var r12;
      return ((r12 = b10.parameters) == null ? void 0 : r12.filter((l6) => l6.in === e16)) ?? [];
    };
    return (e16, r12) => (openBlock(), createElementBlock(Fragment, null, [
      createVNode(e13, {
        breadcrumb: e16.breadcrumb ? [...e16.breadcrumb, "path"] : void 0,
        parameters: s15("path"),
        schemas: e16.schemas
      }, {
        title: withCtx(() => r12[0] || (r12[0] = [
          createTextVNode("Path Parameters")
        ])),
        _: 1
      }, 8, ["breadcrumb", "parameters", "schemas"]),
      createVNode(e13, {
        breadcrumb: e16.breadcrumb ? [...e16.breadcrumb, "query"] : void 0,
        parameters: s15("query"),
        schemas: e16.schemas
      }, {
        title: withCtx(() => r12[1] || (r12[1] = [
          createTextVNode("Query Parameters")
        ])),
        _: 1
      }, 8, ["breadcrumb", "parameters", "schemas"]),
      createVNode(e13, {
        breadcrumb: e16.breadcrumb ? [...e16.breadcrumb, "headers"] : void 0,
        parameters: s15("header"),
        schemas: e16.schemas
      }, {
        title: withCtx(() => r12[2] || (r12[2] = [
          createTextVNode("Headers")
        ])),
        _: 1
      }, 8, ["breadcrumb", "parameters", "schemas"]),
      createVNode(e13, {
        breadcrumb: e16.breadcrumb ? [...e16.breadcrumb, "cookies"] : void 0,
        parameters: s15("cookie"),
        schemas: e16.schemas
      }, {
        title: withCtx(() => r12[3] || (r12[3] = [
          createTextVNode("Cookies")
        ])),
        _: 1
      }, 8, ["breadcrumb", "parameters", "schemas"]),
      e16.requestBody ? (openBlock(), createBlock(p18, {
        key: 0,
        breadcrumb: e16.breadcrumb ? [...e16.breadcrumb, "body"] : void 0,
        requestBody: e16.requestBody,
        schemas: e16.schemas,
        "onUpdate:modelValue": p25
      }, {
        title: withCtx(() => r12[4] || (r12[4] = [
          createTextVNode("Body")
        ])),
        _: 1
      }, 8, ["breadcrumb", "requestBody", "schemas"])) : createCommentVNode("", true)
    ], 64));
  }
});

// node_modules/@scalar/api-reference/dist/features/Operation/hooks/useResponses.js
function u12(n8) {
  return { responses: computed(() => {
    const e16 = [];
    return n8 && Object.entries(n8).forEach(([c14, t7]) => {
      var r12;
      e16.push({
        name: c14,
        description: t7.description,
        content: t7.content,
        headers: t7.headers,
        schema: (r12 = t7.content) == null ? void 0 : r12.schema
      });
    }), e16;
  }) };
}

// node_modules/@scalar/api-reference/dist/features/Operation/components/OperationResponses.vue.js
var h14 = defineComponent({
  __name: "OperationResponses",
  props: {
    responses: {},
    collapsableItems: { type: Boolean, default: true },
    schemas: {},
    breadcrumb: {}
  },
  setup(o8) {
    const t7 = o8, { responses: a18 } = u12(t7.responses);
    return (e16, s15) => (openBlock(), createBlock(e13, {
      collapsableItems: e16.collapsableItems,
      parameters: unref(a18),
      schemas: e16.schemas,
      withExamples: false
    }, {
      title: withCtx(() => s15[0] || (s15[0] = [
        createTextVNode("Responses")
      ])),
      _: 1
    }, 8, ["collapsableItems", "parameters", "schemas"]));
  }
});

// node_modules/@scalar/api-reference/dist/features/Operation/components/callbacks/Callback.vue2.js
var u13 = { class: "group callback-list-item" };
var f15 = { class: "font-code bg-b-1 callback-sticky-offset callback-list-item-title sticky flex cursor-pointer flex-row items-start gap-2 border-t py-3 text-sm group-open:flex-wrap" };
var h15 = { class: "text-c-1 min-w-0 flex-1 truncate leading-3 group-open:whitespace-normal" };
var b6 = { class: "text-c-2" };
var _18 = { class: "callback-operation-container flex flex-col gap-2" };
var v9 = defineComponent({
  __name: "Callback",
  props: {
    callback: {},
    method: {},
    path: {},
    operationMethod: {},
    name: {},
    schemas: {},
    url: {},
    breadcrumb: {}
  },
  setup(k13) {
    return (e16, g6) => (openBlock(), createElementBlock("details", u13, [
      createBaseVNode("summary", f15, [
        createVNode(unref(L), { class: "callback-list-item-icon text-c-3 group-hover:text-c-1 absolute top-3.5 -left-5 size-4 transition-transform duration-100 group-open:rotate-90" }),
        createVNode(unref(z2), {
          as: "span",
          class: "request-method py-0.75",
          method: e16.method
        }, null, 8, ["method"]),
        createBaseVNode("div", h15, [
          createTextVNode(toDisplayString(e16.name) + " ", 1),
          createBaseVNode("span", b6, toDisplayString(e16.url), 1)
        ])
      ]),
      createBaseVNode("div", _18, [
        createVNode(V6, {
          requestBody: e16.callback.requestBody,
          parameters: e16.callback.parameters,
          schemas: e16.schemas
        }, null, 8, ["requestBody", "parameters", "schemas"]),
        createVNode(h14, {
          collapsableItems: false,
          responses: e16.callback.responses,
          schemas: e16.schemas
        }, null, 8, ["responses", "schemas"])
      ])
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/features/Operation/components/callbacks/Callback.vue.js
var m24 = s4(v9, [["__scopeId", "data-v-a7c29633"]]);

// node_modules/@scalar/api-reference/dist/features/Operation/components/callbacks/Callbacks.vue.js
var v10 = { class: "callbacks-list gap-3" };
var N6 = defineComponent({
  __name: "Callbacks",
  props: {
    path: {},
    method: {},
    callbacks: {},
    schemas: {}
  },
  setup(m30) {
    return (a18, s15) => (openBlock(), createElementBlock("div", v10, [
      s15[0] || (s15[0] = createBaseVNode("div", { class: "callbacks-title text-c-1 my-3 text-lg font-medium" }, " Callbacks ", -1)),
      (openBlock(true), createElementBlock(Fragment, null, renderList(a18.callbacks, (u15, n8) => (openBlock(), createElementBlock(Fragment, { key: n8 }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(getResolvedRef)(u15), (p25, i17) => (openBlock(), createElementBlock(Fragment, null, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(p25, (d24, r12) => (openBlock(), createElementBlock(Fragment, { key: r12 }, [
            unref(isHttpMethod)(r12) ? (openBlock(), createBlock(m24, {
              key: 0,
              callback: d24,
              method: r12,
              operationMethod: m30.method,
              name: n8,
              path: a18.path,
              schemas: a18.schemas,
              url: i17
            }, null, 8, ["callback", "method", "operationMethod", "name", "path", "schemas", "url"])) : createCommentVNode("", true)
          ], 64))), 128))
        ], 64))), 256))
      ], 64))), 128))
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Section/SectionAccordion.vue2.js
var V7 = { class: "section-accordion-button-content" };
var z7 = {
  key: 0,
  class: "section-accordion-button-actions"
};
var H6 = {
  key: 0,
  class: "section-accordion-description"
};
var W8 = { class: "section-accordion-content-card" };
var G4 = defineComponent({
  __name: "SectionAccordion",
  props: {
    id: {},
    transparent: { type: Boolean }
  },
  setup(e16) {
    const a18 = ref(), p25 = useElementHover(a18), { getSectionId: v13, isIntersectionEnabled: h21, replaceUrlState: b10 } = T(), { setCollapsedSidebarItem: S8 } = l3(), k13 = () => {
      var t7, c14;
      !e16.id || !h21.value || (b10(e16.id), ((t7 = e16.id) != null && t7.startsWith("model") || (c14 = e16.id) != null && c14.startsWith("webhook")) && S8(v13(e16.id), true));
    };
    return (t7, c14) => (openBlock(), createBlock(x7, {
      id: t7.id,
      class: "section-wrapper",
      onIntersecting: k13
    }, {
      default: withCtx(() => [
        createVNode(unref(N), {
          as: "section",
          class: normalizeClass(["section-accordion", { "section-accordion-transparent": t7.transparent }])
        }, {
          default: withCtx(({ open: d24 }) => [
            createVNode(unref(Q), {
              ref_key: "button",
              ref: a18,
              class: "section-accordion-button"
            }, {
              default: withCtx(() => [
                createBaseVNode("div", V7, [
                  renderSlot(t7.$slots, "title", {}, void 0, true)
                ]),
                t7.$slots.actions ? (openBlock(), createElementBlock("div", z7, [
                  renderSlot(t7.$slots, "actions", {
                    active: unref(p25) || d24
                  }, void 0, true)
                ])) : createCommentVNode("", true),
                createVNode(unref(L), {
                  class: normalizeClass(["section-accordion-chevron size-4.5 transition-transform", { "rotate-90": d24 }])
                }, null, 8, ["class"])
              ]),
              _: 2
            }, 1536),
            createVNode(unref(V), { class: "section-accordion-content" }, {
              default: withCtx(() => [
                t7.$slots.description ? (openBlock(), createElementBlock("div", H6, [
                  renderSlot(t7.$slots, "description", {}, void 0, true)
                ])) : createCommentVNode("", true),
                createBaseVNode("div", W8, [
                  renderSlot(t7.$slots, "default", {}, void 0, true)
                ])
              ]),
              _: 3
            })
          ]),
          _: 3
        }, 8, ["class"])
      ]),
      _: 3
    }, 8, ["id"]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Section/SectionAccordion.vue.js
var e14 = s4(G4, [["__scopeId", "data-v-d3d6e381"]]);

// node_modules/@scalar/api-reference/dist/features/example-responses/helpers/get-resolved-ref-deep.js
var n6 = (a18) => {
  const o8 = /* @__PURE__ */ new WeakSet(), f19 = (e16) => {
    if (e16 == null || typeof e16 != "object")
      return e16;
    const t7 = getRaw(e16);
    if (o8.has(t7))
      return "[circular]";
    if (o8.add(t7), typeof e16 == "object" && e16 !== null && "$ref" in e16) {
      const l6 = e16["$ref-value"], s15 = f19(l6);
      return o8.delete(t7), s15;
    }
    if (Array.isArray(e16)) {
      const l6 = e16.map((s15) => f19(s15));
      return o8.delete(t7), l6;
    }
    if (typeof e16 == "object" && e16 !== null) {
      const l6 = {};
      for (const [s15, d24] of Object.entries(e16))
        l6[s15] = f19(d24);
      return o8.delete(t7), l6;
    }
    return o8.delete(t7), e16;
  };
  return f19(a18);
};

// node_modules/@scalar/api-reference/dist/features/example-responses/ExampleResponse.vue2.js
var i15 = {
  key: 2,
  class: "empty-state"
};
var v11 = defineComponent({
  __name: "ExampleResponse",
  props: {
    response: {},
    example: {}
  },
  setup(d24) {
    return (o8, u15) => {
      var n8, s15;
      return o8.example !== void 0 ? (openBlock(), createBlock(unref(H3), {
        key: 0,
        class: "bg-b-2 -outline-offset-2",
        content: (n8 = unref(n6)(o8.example)) == null ? void 0 : n8.value,
        lang: "json"
      }, null, 8, ["content"])) : (s15 = o8.response) != null && s15.schema ? (openBlock(), createBlock(unref(H3), {
        key: 1,
        class: "bg-b-2 -outline-offset-2",
        content: unref(getExampleFromSchema)(unref(getResolvedRef)(o8.response.schema), {
          emptyString: "string",
          mode: "read"
        }),
        lang: "json"
      }, null, 8, ["content"])) : (openBlock(), createElementBlock("div", i15, " No Body "));
    };
  }
});

// node_modules/@scalar/api-reference/dist/features/example-responses/ExampleResponse.vue.js
var m25 = s4(v11, [["__scopeId", "data-v-ba6859b3"]]);

// node_modules/@scalar/api-reference/dist/features/example-responses/ExampleResponseTab.vue2.js
var i16 = defineComponent({
  __name: "ExampleResponseTab",
  setup(c14) {
    return (t7, d24) => (openBlock(), createBlock(unref(xe), { as: "template" }, {
      default: withCtx(({ selected: a18 }) => [
        createBaseVNode("button", {
          class: normalizeClass(["tab", { "tab-selected": a18 }]),
          type: "button"
        }, [
          createBaseVNode("span", null, [
            renderSlot(t7.$slots, "default", {}, void 0, true)
          ])
        ], 2)
      ]),
      _: 3
    }));
  }
});

// node_modules/@scalar/api-reference/dist/features/example-responses/ExampleResponseTab.vue.js
var m26 = s4(i16, [["__scopeId", "data-v-c8207e48"]]);

// node_modules/@scalar/api-reference/dist/features/example-responses/ExampleResponseTabList.vue2.js
var C9 = defineComponent({
  __name: "ExampleResponseTabList",
  emits: ["change"],
  setup(f19, { emit: s15 }) {
    const c14 = s15, n8 = (e16) => {
      c14("change", e16);
    };
    return (e16, _22) => (openBlock(), createBlock(unref(H), { class: "scalar-card-header scalar-card-header-tabs" }, {
      actions: withCtx(() => [
        renderSlot(e16.$slots, "actions", {}, void 0, true)
      ]),
      default: withCtx(() => [
        createVNode(unref(me), { onChange: n8 }, {
          default: withCtx(() => [
            createVNode(unref(pe), { class: "tab-list custom-scroll" }, {
              default: withCtx(() => [
                renderSlot(e16.$slots, "default", {}, void 0, true)
              ]),
              _: 3
            })
          ]),
          _: 3
        })
      ]),
      _: 3
    }));
  }
});

// node_modules/@scalar/api-reference/dist/features/example-responses/ExampleResponseTabList.vue.js
var a12 = s4(C9, [["__scopeId", "data-v-fec8fbbb"]]);

// node_modules/@scalar/api-reference/dist/v2/blocks/scalar-request-example-block/components/ExamplePicker.vue2.js
var D4 = { class: "overflow-hidden text-ellipsis" };
var N7 = defineComponent({
  __name: "ExamplePicker",
  props: mergeModels({
    examples: {}
  }, {
    modelValue: {
      required: true
    },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(d24, { expose: f19 }) {
    const a18 = useModel(d24, "modelValue"), o8 = (e16) => {
      var n8, s15;
      return e16 ? ((s15 = (n8 = d24.examples) == null ? void 0 : n8[e16]) == null ? void 0 : s15.summary) ?? e16 : "Select an example";
    }, x12 = (e16) => {
      a18.value = e16;
    };
    return f19({
      getLabel: o8,
      selectedExampleKey: a18
    }), (e16, n8) => (openBlock(), createBlock(unref(k), { placement: "bottom-start" }, {
      items: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(e16.examples, (s15, l6) => (openBlock(), createBlock(unref(m3), {
          key: l6,
          onClick: (z9) => x12(l6)
        }, {
          default: withCtx(() => [
            createBaseVNode("div", {
              class: normalizeClass([
                "flex h-4 w-4 items-center justify-center rounded-full p-[3px]",
                a18.value === l6 ? "bg-c-accent text-b-1" : "shadow-border text-transparent"
              ])
            }, [
              createVNode(unref(m2), {
                class: "size-2.5",
                icon: "Checkmark",
                thickness: "3"
              })
            ], 2),
            createBaseVNode("span", D4, toDisplayString(o8(l6)), 1)
          ]),
          _: 2
        }, 1032, ["onClick"]))), 128))
      ]),
      default: withCtx(() => [
        createVNode(unref($), {
          "data-testid": "example-picker",
          class: "text-c-2 hover:text-c-1 flex h-full w-fit gap-1.5 px-1.5 py-0.75 text-base font-normal",
          fullWidth: "",
          variant: "ghost"
        }, {
          default: withCtx(() => [
            createBaseVNode("span", null, toDisplayString(o8(a18.value)), 1),
            createVNode(unref(C), {
              weight: "bold",
              class: "ui-open:rotate-180 mt-0.25 size-3 transition-transform duration-100"
            })
          ]),
          _: 1
        })
      ]),
      _: 1
    }));
  }
});

// node_modules/@scalar/api-reference/dist/features/example-responses/ExampleResponses.vue2.js
var se2 = {
  key: 1,
  class: "scalar-card-checkbox"
};
var ae4 = ["aria-controls"];
var le = {
  key: 0,
  class: "response-description"
};
var ve = defineComponent({
  __name: "ExampleResponses",
  props: {
    responses: {}
  },
  setup(g6) {
    var j10;
    const v13 = useId(), { copyToClipboard: w13 } = useClipboard(), y10 = computed(
      () => Object.keys(g6.responses ?? {}).sort()
    ), V8 = ref(0), f19 = computed(() => {
      var s15;
      const e16 = toValue(y10)[toValue(V8)];
      return getResolvedRef((s15 = g6.responses) == null ? void 0 : s15[e16]);
    }), t7 = computed(() => {
      var p25;
      const e16 = normalizeMimeTypeObject(
        (p25 = f19.value) == null ? void 0 : p25.content
      ), s15 = objectKeys(e16 ?? {});
      return (
        // OpenAPI 3.x
        (e16 == null ? void 0 : e16["application/json"]) ?? (e16 == null ? void 0 : e16["application/xml"]) ?? (e16 == null ? void 0 : e16["text/plain"]) ?? (e16 == null ? void 0 : e16["text/html"]) ?? (e16 == null ? void 0 : e16["*/*"]) ?? // Take the first key - in the future we may want to use the selected content type
        (e16 == null ? void 0 : e16[s15[0]]) ?? void 0
      );
    }), b10 = computed(
      () => {
        var e16, s15;
        return !!((e16 = t7.value) != null && e16.examples) && Object.keys(((s15 = t7.value) == null ? void 0 : s15.examples) ?? {}).length > 1;
      }
    ), i17 = ref(
      Object.keys(((j10 = t7.value) == null ? void 0 : j10.examples) ?? {})[0] ?? ""
    ), O11 = () => {
      var a18;
      const e16 = toValue(t7);
      if (!e16)
        return;
      if (Array.isArray(e16.examples))
        return e16.examples[0];
      const s15 = Object.keys(e16.examples ?? {})[0];
      return (a18 = e16.examples) == null ? void 0 : a18[s15];
    }, T9 = computed(
      () => {
        var e16, s15;
        return b10.value && i17.value ? (s15 = (e16 = t7.value) == null ? void 0 : e16.examples) == null ? void 0 : s15[i17.value] : O11();
      }
    ), B8 = (e16) => {
      V8.value = e16, i17.value = "";
    }, S8 = ref(false);
    return (e16, s15) => y10.value.length ? (openBlock(), createBlock(unref(h2), {
      key: 0,
      "aria-label": "Example Responses",
      role: "region",
      class: "response-card"
    }, {
      default: withCtx(() => {
        var p25;
        return [
          createVNode(a12, { onChange: B8 }, {
            actions: withCtx(() => {
              var a18, r12;
              return [
                (a18 = t7.value) != null && a18.example ? (openBlock(), createElementBlock("button", {
                  key: 0,
                  class: "code-copy",
                  type: "button",
                  onClick: s15[0] || (s15[0] = () => {
                    var n8;
                    return unref(w13)((n8 = t7.value) == null ? void 0 : n8.example);
                  })
                }, [
                  createVNode(unref(m2), {
                    icon: "Clipboard",
                    width: "12px"
                  })
                ])) : createCommentVNode("", true),
                (r12 = t7.value) != null && r12.schema ? (openBlock(), createElementBlock("label", se2, [
                  s15[4] || (s15[4] = createTextVNode(" Show Schema ")),
                  withDirectives(createBaseVNode("input", {
                    "onUpdate:modelValue": s15[1] || (s15[1] = (n8) => S8.value = n8),
                    "aria-controls": unref(v13),
                    class: "scalar-card-checkbox-input",
                    type: "checkbox"
                  }, null, 8, ae4), [
                    [vModelCheckbox, S8.value]
                  ]),
                  s15[5] || (s15[5] = createBaseVNode("span", { class: "scalar-card-checkbox-checkmark" }, null, -1))
                ])) : createCommentVNode("", true)
              ];
            }),
            default: withCtx(() => [
              (openBlock(true), createElementBlock(Fragment, null, renderList(y10.value, (a18) => (openBlock(), createBlock(m26, {
                key: a18,
                "aria-controls": unref(v13)
              }, {
                default: withCtx(() => [
                  createVNode(f10, null, {
                    default: withCtx(() => s15[3] || (s15[3] = [
                      createTextVNode("Status:")
                    ])),
                    _: 1,
                    __: [3]
                  }),
                  createTextVNode(" " + toDisplayString(a18), 1)
                ]),
                _: 2
              }, 1032, ["aria-controls"]))), 128))
            ]),
            _: 1
          }),
          createVNode(unref(m), { class: "grid flex-1" }, {
            default: withCtx(() => {
              var a18, r12;
              return [
                S8.value && ((a18 = t7.value) != null && a18.schema) ? (openBlock(), createBlock(unref(H3), {
                  key: 0,
                  id: unref(v13),
                  class: "-outline-offset-2",
                  content: unref(n6)((r12 = t7.value) == null ? void 0 : r12.schema),
                  lang: "json"
                }, null, 8, ["id", "content"])) : (openBlock(), createBlock(m25, {
                  key: 1,
                  id: unref(v13),
                  response: t7.value,
                  example: T9.value
                }, null, 8, ["id", "response", "example"]))
              ];
            }),
            _: 1
          }),
          (p25 = f19.value) != null && p25.description || b10.value ? (openBlock(), createBlock(unref(h3), {
            key: 0,
            class: "response-card-footer"
          }, {
            default: withCtx(() => {
              var a18, r12;
              return [
                (a18 = f19.value) != null && a18.description ? (openBlock(), createElementBlock("div", le, [
                  createVNode(unref(C3), {
                    class: "markdown",
                    value: f19.value.description
                  }, null, 8, ["value"])
                ])) : createCommentVNode("", true),
                b10.value ? (openBlock(), createBlock(unref(N7), {
                  key: 1,
                  class: "response-example-selector",
                  examples: (r12 = t7.value) == null ? void 0 : r12.examples,
                  modelValue: i17.value,
                  "onUpdate:modelValue": s15[2] || (s15[2] = (n8) => i17.value = n8)
                }, null, 8, ["examples", "modelValue"])) : createCommentVNode("", true)
              ];
            }),
            _: 1
          })) : createCommentVNode("", true)
        ];
      }),
      _: 1
    })) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/features/example-responses/ExampleResponses.vue.js
var m27 = s4(ve, [["__scopeId", "data-v-63898be9"]]);

// node_modules/@scalar/oas-utils/dist/helpers/operation-to-har/process-server-url.js
var processServerUrl = (server, path) => {
  if (!server.url) {
    return path;
  }
  const serverUrl = server.url;
  if (server.variables) {
    const variables = Object.entries(server.variables);
    const defaultValues = variables.reduce(
      (defaults, [variableName, variableConfig]) => {
        if (variableConfig.default !== void 0) {
          defaults[variableName] = variableConfig.default;
        }
        return defaults;
      },
      {}
    );
    const serverUrlWithVars = replaceVariables(serverUrl, defaultValues);
    return mergeUrls(serverUrlWithVars, path);
  }
  return mergeUrls(serverUrl, path);
};

// node_modules/@scalar/oas-utils/dist/helpers/operation-to-har/process-parameters.js
var deReferenceParams = (params) => (params ?? []).map((param) => getResolvedRef(param));
var getParameterStyleAndExplode = (param) => {
  if (param.in === "header") {
    const explode2 = "explode" in param && param.explode !== void 0 ? param.explode : false;
    return { style: "simple", explode: explode2 };
  }
  if (param.in === "cookie") {
    const explode2 = "explode" in param && param.explode !== void 0 ? param.explode : true;
    return { style: "form", explode: explode2 };
  }
  const defaultStyle = {
    path: "simple",
    query: "form",
    header: "simple",
    cookie: "form"
  }[param.in];
  const style = "style" in param && param.style ? param.style : defaultStyle;
  const explode = "explode" in param && param.explode !== void 0 ? param.explode : style === "form";
  return { style, explode };
};
var getParameterValue = (param, example) => {
  if (example && typeof example === "object" && param.name) {
    const exampleValue = example[param.name];
    if (exampleValue !== void 0) {
      return exampleValue;
    }
  }
  if ("example" in param && param.example) {
    return param.example;
  }
  if ("examples" in param && param.examples) {
    const examples = param.examples;
    return examples[param.name] || Object.values(examples)[0]?.value;
  }
  if ("schema" in param && param.schema) {
    const options = param.in === "path" ? { emptyString: `{${param.name}}` } : {};
    return getExampleFromSchema(getResolvedRef(param.schema), options);
  }
  return void 0;
};
var processParameters = (harRequest, parameters, example) => {
  const newHeaders = [...harRequest.headers];
  const newQueryString = [...harRequest.queryString];
  let newUrl = harRequest.url;
  const deReferencedParams = deReferenceParams(parameters);
  for (const param of deReferencedParams) {
    if (!param.in || !param.name) {
      continue;
    }
    const paramValue = getParameterValue(param, example);
    if (paramValue === void 0) {
      continue;
    }
    const { style, explode } = getParameterStyleAndExplode(param);
    switch (param.in) {
      case "path": {
        newUrl = processPathParameters(newUrl, param, paramValue, style, explode);
        break;
      }
      case "query": {
        switch (style) {
          case "form": {
            if (explode) {
              if (Array.isArray(paramValue)) {
                for (const value of paramValue) {
                  newQueryString.push({ name: param.name, value: String(value) });
                }
              } else if (typeof paramValue === "object" && paramValue !== null) {
                for (const [key, value] of Object.entries(paramValue)) {
                  newQueryString.push({ name: key, value: String(value) });
                }
              } else {
                newQueryString.push({ name: param.name, value: String(paramValue) });
              }
            } else {
              if (Array.isArray(paramValue)) {
                newQueryString.push({ name: param.name, value: paramValue.join(",") });
              } else if (typeof paramValue === "object" && paramValue !== null) {
                const values = Object.entries(paramValue).map(([k13, v13]) => `${k13},${v13}`).join(",");
                newQueryString.push({ name: param.name, value: values });
              } else {
                newQueryString.push({ name: param.name, value: String(paramValue) });
              }
            }
            break;
          }
          case "spaceDelimited": {
            if (Array.isArray(paramValue)) {
              newQueryString.push({ name: param.name, value: paramValue.join(" ") });
            } else if (typeof paramValue === "object" && paramValue !== null) {
              const values = Object.entries(paramValue).map(([k13, v13]) => `${k13} ${v13}`).join(" ");
              newQueryString.push({ name: param.name, value: values });
            }
            break;
          }
          case "pipeDelimited": {
            if (Array.isArray(paramValue)) {
              newQueryString.push({ name: param.name, value: paramValue.join("|") });
            } else if (typeof paramValue === "object" && paramValue !== null) {
              const values = Object.entries(paramValue).flat().join("|");
              newQueryString.push({ name: param.name, value: values });
            }
            break;
          }
          case "deepObject": {
            if (explode && typeof paramValue === "object" && paramValue !== null) {
              for (const [key, value] of Object.entries(paramValue)) {
                newQueryString.push({ name: `${param.name}[${key}]`, value: String(value) });
              }
            }
            break;
          }
          // Default to form style
          default:
            newQueryString.push({ name: param.name, value: String(paramValue) });
        }
        break;
      }
      case "header":
        if (explode) {
          if (Array.isArray(paramValue)) {
            for (const value of paramValue) {
              newHeaders.push({ name: param.name, value: String(value) });
            }
          } else if (typeof paramValue === "object" && paramValue !== null) {
            const values = Object.entries(paramValue).map(([k13, v13]) => `${k13}=${v13}`).join(",");
            newHeaders.push({ name: param.name, value: values });
          } else {
            newHeaders.push({ name: param.name, value: String(paramValue) });
          }
        } else {
          if (Array.isArray(paramValue)) {
            newHeaders.push({ name: param.name, value: paramValue.join(",") });
          } else if (typeof paramValue === "object" && paramValue !== null) {
            const values = Object.entries(paramValue).map(([k13, v13]) => `${k13},${v13}`).join(",");
            newHeaders.push({ name: param.name, value: values });
          } else {
            newHeaders.push({ name: param.name, value: String(paramValue) });
          }
        }
        break;
      case "cookie":
        if (explode) {
          if (Array.isArray(paramValue)) {
            for (const value of paramValue) {
              harRequest.cookies.push({ name: param.name, value: value === null ? "null" : String(value) });
            }
          } else if (typeof paramValue === "object" && paramValue !== null) {
            for (const [key, value] of Object.entries(paramValue)) {
              harRequest.cookies.push({ name: key, value: value === null ? "null" : String(value) });
            }
          } else {
            harRequest.cookies.push({ name: param.name, value: paramValue === null ? "null" : String(paramValue) });
          }
        } else {
          if (Array.isArray(paramValue)) {
            const serializedValues = paramValue.map((v13) => v13 === null ? "null" : String(v13)).join(",");
            harRequest.cookies.push({ name: param.name, value: serializedValues });
          } else if (typeof paramValue === "object" && paramValue !== null) {
            const flattenObject = (obj) => {
              const result = [];
              for (const [key, value] of Object.entries(obj)) {
                if (typeof value === "object" && value !== null && !Array.isArray(value)) {
                  result.push(key, ...flattenObject(value));
                } else {
                  result.push(key, value === null ? "null" : String(value));
                }
              }
              return result;
            };
            const values = flattenObject(paramValue).join(",");
            harRequest.cookies.push({ name: param.name, value: values });
          } else {
            harRequest.cookies.push({ name: param.name, value: paramValue === null ? "null" : String(paramValue) });
          }
        }
        break;
    }
  }
  return {
    url: newUrl,
    headers: newHeaders,
    queryString: newQueryString,
    cookies: harRequest.cookies
  };
};
var processPathParameters = (url, param, paramValue, style, explode) => {
  switch (style) {
    case "matrix": {
      if (explode) {
        if (Array.isArray(paramValue)) {
          const values = paramValue.map((v13) => `${param.name}=${v13}`).join(";");
          return url.replace(`{;${param.name}}`, `;${values}`);
        }
        if (typeof paramValue === "object" && paramValue !== null) {
          const values = Object.entries(paramValue).map(([k13, v13]) => `${k13}=${v13}`).join(";");
          return url.replace(`{;${param.name}}`, `;${values}`);
        }
        return url.replace(`{;${param.name}}`, `;${param.name}=${paramValue}`);
      }
      if (Array.isArray(paramValue)) {
        return url.replace(`{;${param.name}}`, `;${param.name}=${paramValue.join(",")}`);
      }
      if (typeof paramValue === "object" && paramValue !== null) {
        const values = Object.entries(paramValue).map(([k13, v13]) => `${k13},${v13}`).join(",");
        return url.replace(`{;${param.name}}`, `;${param.name}=${values}`);
      }
      return url.replace(`{;${param.name}}`, `;${param.name}=${paramValue}`);
    }
    case "label": {
      if (explode) {
        if (Array.isArray(paramValue)) {
          return url.replace(`{.${param.name}}`, `.${paramValue.join(".")}`);
        }
        if (typeof paramValue === "object" && paramValue !== null) {
          const values = Object.entries(paramValue).map(([k13, v13]) => `${k13}=${v13}`).join(".");
          return url.replace(`{.${param.name}}`, `.${values}`);
        }
        return url.replace(`{.${param.name}}`, `.${paramValue}`);
      }
      if (Array.isArray(paramValue)) {
        return url.replace(`{.${param.name}}`, `.${paramValue.join(",")}`);
      }
      if (typeof paramValue === "object" && paramValue !== null) {
        const values = Object.entries(paramValue).map(([k13, v13]) => `${k13},${v13}`).join(",");
        return url.replace(`{.${param.name}}`, `.${values}`);
      }
      return url.replace(`{.${param.name}}`, `.${paramValue}`);
    }
    case "simple": {
      if (explode) {
        if (Array.isArray(paramValue)) {
          return url.replace(`{${param.name}}`, paramValue.join(","));
        }
        if (typeof paramValue === "object" && paramValue !== null) {
          const values = Object.entries(paramValue).map(([k13, v13]) => `${k13}=${v13}`).join(",");
          return url.replace(`{${param.name}}`, values);
        }
        return url.replace(`{${param.name}}`, String(paramValue));
      }
      if (Array.isArray(paramValue)) {
        return url.replace(`{${param.name}}`, paramValue.join(","));
      }
      if (typeof paramValue === "object" && paramValue !== null) {
        const values = Object.entries(paramValue).map(([k13, v13]) => `${k13},${v13}`).join(",");
        return url.replace(`{${param.name}}`, values);
      }
      return url.replace(`{${param.name}}`, String(paramValue));
    }
    // Default to simple style
    default:
      return url.replace(`{${param.name}}`, String(paramValue));
  }
};

// node_modules/@scalar/oas-utils/dist/helpers/operation-to-har/process-body.js
var objectToFormParams = (obj) => {
  const params = [];
  for (const [key, value] of Object.entries(obj)) {
    if (value === void 0 || value === null) {
      continue;
    }
    if (Array.isArray(value)) {
      for (const item of value) {
        params.push({ name: key, value: String(item) });
      }
    } else if (typeof value === "object") {
      const nestedParams = objectToFormParams(value);
      for (const param of nestedParams) {
        params.push({ name: `${key}.${param.name}`, value: param.value });
      }
    } else {
      params.push({ name: key, value: String(value) });
    }
  }
  return params;
};
var processBody = ({ content, contentType, example }) => {
  const _contentType = (contentType || Object.keys(content)[0]) ?? "";
  const isFormData = _contentType === "multipart/form-data" || _contentType === "application/x-www-form-urlencoded";
  if (example) {
    if (isFormData && typeof example === "object" && example !== null) {
      return {
        mimeType: _contentType,
        params: objectToFormParams(example)
      };
    }
    return {
      mimeType: _contentType,
      text: JSON.stringify(example)
    };
  }
  const contentSchema = getResolvedRef(content[_contentType]?.schema);
  if (contentSchema) {
    const extractedExample = getExampleFromSchema(contentSchema, { mode: "write" });
    if (extractedExample !== void 0) {
      if (isFormData && typeof extractedExample === "object" && extractedExample !== null) {
        return {
          mimeType: _contentType,
          params: objectToFormParams(extractedExample)
        };
      }
      return {
        mimeType: _contentType,
        text: JSON.stringify(extractedExample)
      };
    }
  }
  return {
    mimeType: _contentType,
    text: "null"
  };
};

// node_modules/@scalar/oas-utils/dist/helpers/operation-to-har/process-security-schemes.js
var processSecuritySchemes = (securitySchemes) => {
  const result = {
    headers: [],
    queryString: [],
    cookies: []
  };
  for (const scheme of securitySchemes) {
    if (scheme.type === "apiKey") {
      const value = scheme["x-scalar-secret-token"] || "YOUR_SECRET_TOKEN";
      if (!scheme.name) {
        continue;
      }
      const param = { name: scheme.name, value };
      switch (scheme.in) {
        case "header":
          result.headers.push(param);
          break;
        case "query":
          result.queryString.push(param);
          break;
        case "cookie":
          result.cookies.push(param);
          break;
      }
      continue;
    }
    if (scheme.type === "http") {
      if (scheme.scheme === "basic") {
        const username = scheme["x-scalar-secret-username"] || "";
        const password = scheme["x-scalar-secret-password"] || "";
        const value = `${username}:${password}`;
        const auth = value === ":" ? "username:password" : btoa(value);
        result.headers.push({
          name: "Authorization",
          value: `Basic ${auth}`
        });
      } else if (scheme.scheme === "bearer") {
        const token = scheme["x-scalar-secret-token"] || "YOUR_SECRET_TOKEN";
        result.headers.push({
          name: "Authorization",
          value: `Bearer ${token}`
        });
      }
      continue;
    }
    if (scheme.type === "oauth2" && scheme.flows) {
      const flows = Object.values(scheme.flows);
      const flow = flows.find((f19) => f19["x-scalar-secret-token"]);
      const token = flow?.["x-scalar-secret-token"] || "YOUR_SECRET_TOKEN";
      result.headers.push({
        name: "Authorization",
        value: `Bearer ${token}`
      });
    }
  }
  return result;
};

// node_modules/@scalar/oas-utils/dist/helpers/operation-to-har/operation-to-har.js
var operationToHar = ({
  operation,
  contentType,
  method,
  path,
  server,
  securitySchemes,
  example
}) => {
  const harRequest = {
    method,
    url: path,
    headers: [],
    queryString: [],
    postData: void 0,
    httpVersion: "HTTP/1.1",
    cookies: [],
    headersSize: -1,
    bodySize: -1
  };
  if (server?.url) {
    harRequest.url = processServerUrl(server, path);
  }
  if (operation.parameters) {
    const { url, headers, queryString, cookies } = processParameters(harRequest, operation.parameters, example);
    harRequest.url = url;
    harRequest.headers = headers;
    harRequest.queryString = queryString;
    harRequest.cookies = cookies;
  }
  const body = getResolvedRef(operation.requestBody);
  if (body?.content) {
    const postData = processBody({ content: body.content, contentType, example });
    harRequest.postData = postData;
    harRequest.bodySize = postData.text?.length ?? -1;
    if (postData.mimeType) {
      const existingContentTypeHeader = harRequest.headers.find(
        (header) => header.name.toLowerCase() === "content-type"
      );
      if (existingContentTypeHeader && !existingContentTypeHeader.value) {
        existingContentTypeHeader.value = postData.mimeType;
      } else {
        harRequest.headers.push({
          name: "Content-Type",
          value: postData.mimeType
        });
      }
    }
  }
  if (securitySchemes) {
    const { headers, queryString, cookies } = processSecuritySchemes(securitySchemes);
    harRequest.headers.push(...headers);
    harRequest.queryString.push(...queryString);
    harRequest.cookies.push(...cookies);
  }
  const headerText = harRequest.headers.map((h21) => `${h21.name}: ${h21.value}`).join("\r\n");
  harRequest.headersSize = headerText.length;
  return harRequest;
};

// node_modules/@scalar/api-reference/dist/v2/blocks/scalar-request-example-block/helpers/generate-code-snippet.js
var K3 = ({
  clientId: r12,
  operation: t7,
  method: o8,
  path: n8,
  example: p25,
  contentType: i17,
  server: a18,
  securitySchemes: s15
}) => {
  const c14 = operationToHar({
    operation: t7,
    contentType: i17,
    method: o8,
    path: n8,
    server: a18,
    securitySchemes: s15,
    example: p25
  }), [g6, m30] = r12.split("/"), [e16, d24] = c2(g6, m30, c14);
  return e16 ? e16.message ?? "Error generating code snippet" : d24;
};

// node_modules/@scalar/api-reference/dist/v2/blocks/scalar-request-example-block/helpers/get-secrets.js
var e15 = (t7) => t7.flatMap((r12) => r12.type === "apiKey" ? r12["x-scalar-secret-token"] : (r12 == null ? void 0 : r12.type) === "http" ? [
  r12["x-scalar-secret-token"],
  r12["x-scalar-secret-username"],
  r12["x-scalar-secret-password"],
  btoa(`${r12["x-scalar-secret-username"]}:${r12["x-scalar-secret-password"]}`)
] : r12.type === "oauth2" ? Object.values(r12.flows).map((a18) => a18["x-scalar-secret-token"]) : []).filter(isDefined);

// node_modules/@scalar/api-reference/dist/v2/blocks/scalar-request-example-block/components/RequestExample.vue2.js
var _19 = ["innerHTML"];
var ee2 = { class: "text-base font-normal" };
var te2 = ["id"];
var le2 = {
  key: 0,
  class: "request-card-footer-addon"
};
var ae5 = { class: "request-header" };
var oe3 = {};
var ye2 = defineComponent({
  ...oe3,
  __name: "RequestExample",
  props: {
    clientOptions: {},
    selectedClient: {},
    selectedServer: { default: () => ({ url: "/" }) },
    selectedContentType: {},
    selectedExample: {},
    securitySchemes: { default: () => [] },
    method: {},
    path: {},
    operation: {},
    fallback: { type: Boolean },
    generateLabel: { type: Function }
  },
  setup(a18) {
    const u15 = computed(() => {
      var s15, r12;
      const t7 = ((s15 = getResolvedRef(a18.operation.requestBody)) == null ? void 0 : s15.content) ?? {}, e16 = a18.selectedContentType || Object.keys(t7)[0];
      return ((r12 = t7[e16]) == null ? void 0 : r12.examples) ?? {};
    }), C12 = ref(
      a18.selectedExample ?? Object.keys(u15.value)[0]
    ), y10 = computed(() => [
      "x-custom-examples",
      "x-codeSamples",
      "x-code-samples"
    ].flatMap((e16) => a18.operation[e16] ?? [])), p25 = computed(() => y10.value.length ? [
      {
        label: "Code Examples",
        options: y10.value.map((e16) => {
          const l6 = y8(e16), s15 = e16.label || e16.lang || l6;
          return {
            id: l6,
            lang: e16.lang || "plaintext",
            title: s15,
            label: s15
          };
        })
      },
      ...a18.clientOptions
    ] : a18.clientOptions), d24 = ref(
      e8(p25.value, a18.selectedClient) ?? null
    );
    watch(
      () => a18.selectedClient,
      (t7) => {
        const e16 = e8(p25.value, t7);
        e16 && (d24.value = e16);
      }
    );
    const k13 = computed(() => {
      var t7, e16, l6;
      try {
        if ((t7 = d24.value) != null && t7.id.startsWith("custom"))
          return ((e16 = y10.value.find(
            (I7) => {
              var x12;
              return y8(I7) === ((x12 = d24.value) == null ? void 0 : x12.id);
            }
          )) == null ? void 0 : e16.source) ?? "Custom example not found";
        const s15 = u15.value[C12.value || ""], r12 = n6(s15), j10 = (r12 == null ? void 0 : r12.value) ?? (r12 == null ? void 0 : r12.summary);
        return K3({
          clientId: (l6 = d24.value) == null ? void 0 : l6.id,
          operation: a18.operation,
          method: a18.method,
          server: a18.selectedServer,
          securitySchemes: a18.securitySchemes,
          contentType: a18.selectedContentType,
          path: a18.path,
          example: j10
        });
      } catch (s15) {
        return console.error("[generateSnippet]", s15), "";
      }
    }), R8 = computed(() => e15(a18.securitySchemes)), i17 = ref(null), w13 = (t7) => {
      var e16;
      if (i17.value) {
        const l6 = freezeElement(i17.value.$el);
        setTimeout(() => {
          l6();
        }, 300);
      }
      d24.value = t7, t7.id.startsWith("custom") || o3((e16 = i17.value) == null ? void 0 : e16.$el, "scalar-update-selected-client", t7.id);
    }, L5 = useId();
    return (t7, e16) => k13.value ? (openBlock(), createBlock(unref(h2), {
      key: 0,
      class: "request-card dark-mode",
      ref_key: "elem",
      ref: i17
    }, {
      default: withCtx(() => [
        createVNode(unref(H), { class: "pr-2.5" }, createSlots({
          default: withCtx(() => [
            e16[3] || (e16[3] = createBaseVNode("span", { class: "sr-only" }, "Request Example for", -1)),
            createVNode(unref(z2), {
              as: "span",
              class: "request-method",
              method: t7.method
            }, null, 8, ["method"]),
            t7.generateLabel ? (openBlock(), createElementBlock("span", {
              key: 0,
              innerHTML: t7.generateLabel()
            }, null, 8, _19)) : renderSlot(t7.$slots, "header", { key: 1 }, void 0, true)
          ]),
          _: 2
        }, [
          p25.value.length ? {
            name: "actions",
            fn: withCtx(() => [
              createVNode(unref(w2), {
                class: "max-h-80",
                modelValue: d24.value,
                options: p25.value,
                teleport: "",
                placement: "bottom-end",
                "onUpdate:modelValue": e16[0] || (e16[0] = (l6) => w13(l6))
              }, {
                default: withCtx(() => [
                  createVNode(unref($), {
                    "data-testid": "client-picker",
                    class: "text-c-2 hover:text-c-1 flex h-full w-fit gap-1.5 px-0.5",
                    fullWidth: "",
                    variant: "ghost"
                  }, {
                    default: withCtx(() => [
                      createBaseVNode("span", ee2, toDisplayString(d24.value.title), 1),
                      createVNode(unref(C), {
                        weight: "bold",
                        class: "ui-open:rotate-180 mt-0.25 size-3 transition-transform duration-100"
                      })
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }, 8, ["modelValue", "options"])
            ]),
            key: "0"
          } : void 0
        ]), 1024),
        createVNode(unref(m), { class: "request-editor-section custom-scroll p-0" }, {
          default: withCtx(() => {
            var l6;
            return [
              createBaseVNode("div", {
                id: `${unref(L5)}-example`,
                class: "code-snippet"
              }, [
                createVNode(unref(H3), {
                  class: "bg-b-2 !min-h-full -outline-offset-2",
                  content: k13.value,
                  hideCredentials: R8.value,
                  lang: (l6 = d24.value) == null ? void 0 : l6.lang,
                  lineNumbers: ""
                }, null, 8, ["content", "hideCredentials", "lang"])
              ], 8, te2)
            ];
          }),
          _: 1
        }),
        Object.keys(u15.value).length || t7.$slots.footer ? (openBlock(), createBlock(unref(h3), {
          key: 0,
          class: "request-card-footer bg-b-3"
        }, {
          default: withCtx(() => [
            Object.keys(u15.value).length ? (openBlock(), createElementBlock("div", le2, [
              createVNode(N7, {
                examples: u15.value,
                modelValue: C12.value,
                "onUpdate:modelValue": [
                  e16[1] || (e16[1] = (l6) => C12.value = l6),
                  e16[2] || (e16[2] = (l6) => {
                    var s15;
                    return unref(o3)((s15 = i17.value) == null ? void 0 : s15.$el, "scalar-update-selected-example", l6);
                  })
                ]
              }, null, 8, ["examples", "modelValue"])
            ])) : createCommentVNode("", true),
            renderSlot(t7.$slots, "footer", {}, void 0, true)
          ]),
          _: 3
        })) : createCommentVNode("", true)
      ]),
      _: 3
    }, 512)) : t7.fallback ? (openBlock(), createBlock(unref(h2), {
      key: 1,
      class: "request-card dark-mode"
    }, {
      default: withCtx(() => [
        createVNode(unref(m), { class: "request-card-simple" }, {
          default: withCtx(() => [
            createBaseVNode("div", ae5, [
              createVNode(unref(z2), {
                as: "span",
                class: "request-method",
                method: t7.method
              }, null, 8, ["method"]),
              renderSlot(t7.$slots, "header", {}, void 0, true)
            ]),
            renderSlot(t7.$slots, "footer", {}, void 0, true)
          ]),
          _: 3
        })
      ]),
      _: 3
    })) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/v2/blocks/scalar-request-example-block/components/RequestExample.vue.js
var r10 = s4(ye2, [["__scopeId", "data-v-9b79701d"]]);

// node_modules/@scalar/api-reference/dist/features/x-badges/XBadges.vue.js
var h16 = defineComponent({
  __name: "XBadges",
  props: {
    position: {},
    badges: {}
  },
  setup(e16) {
    const o8 = computed(() => Array.isArray(e16.badges) ? e16.badges.filter(
      (t7) => t7.position === e16.position || e16.position === "after" && !t7.position
    ) : []);
    return (t7, k13) => o8.value.length ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(o8.value, (r12) => (openBlock(), createBlock(unref(d7), {
      key: r12.name,
      color: r12.color
    }, {
      default: withCtx(() => [
        createTextVNode(toDisplayString(r12.name), 1)
      ]),
      _: 2
    }, 1032, ["color"]))), 128)) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/features/test-request-button/TestRequestButton.vue2.js
var R5 = ["method"];
var S6 = defineComponent({
  __name: "TestRequestButton",
  props: {
    method: {},
    path: {}
  },
  setup(t7) {
    const { client: a18 } = a7(), m30 = f4(), u15 = computed(
      () => m30.value.hideTestRequestButton !== true
    ), p25 = () => {
      var e16;
      (e16 = a18.value) == null || e16.open({
        method: t7.method,
        path: t7.path
      });
    };
    return (e16, o8) => u15.value ? (openBlock(), createElementBlock("button", {
      key: 0,
      class: "show-api-client-button",
      method: e16.method,
      type: "button",
      onClick: withModifiers(p25, ["stop"])
    }, [
      createVNode(unref(_5), {
        class: "size-3",
        weight: "fill"
      }),
      o8[0] || (o8[0] = createBaseVNode("span", null, "Test Request", -1)),
      createVNode(f10, null, {
        default: withCtx(() => [
          createTextVNode("(" + toDisplayString(e16.method) + " " + toDisplayString(e16.path) + ")", 1)
        ]),
        _: 1
      })
    ], 8, R5)) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
      createTextVNode(" ")
    ], 64));
  }
});

// node_modules/@scalar/api-reference/dist/features/test-request-button/TestRequestButton.vue.js
var c10 = s4(S6, [["__scopeId", "data-v-976c9c1f"]]);

// node_modules/@scalar/api-reference/dist/components/Anchor/Anchor.vue.js
var w7 = ["id"];
var I4 = { class: "relative" };
var T6 = defineComponent({
  __name: "Anchor",
  props: {
    id: {}
  },
  setup(i17) {
    const r12 = useId(), { cx: n8 } = useBindCx(), { copyToClipboard: l6 } = useClipboard(), { getHashedUrl: d24 } = T(), p25 = () => {
      l6(d24(i17.id));
    };
    return (c14, o8) => (openBlock(), createElementBlock("span", normalizeProps(guardReactiveProps(unref(n8)("group/heading word-break-all relative"))), [
      createBaseVNode("span", {
        id: unref(r12),
        class: "contents"
      }, [
        renderSlot(c14.$slots, "default")
      ], 8, w7),
      createBaseVNode("span", I4, [
        o8[1] || (o8[1] = createBaseVNode("span", null, "​", -1)),
        createVNode(unref($), {
          "aria-describedby": unref(r12),
          class: "absolute top-1/2 left-0 inline-block h-fit -translate-y-1/2 px-1.5 py-1 opacity-0 group-hover/heading:opacity-100 group-has-focus-visible/heading:opacity-100",
          variant: "ghost",
          onClick: withModifiers(p25, ["stop"])
        }, {
          default: withCtx(() => [
            createVNode(unref(_4), {
              "aria-hidden": "true",
              class: "size-4.5"
            }),
            createVNode(f10, null, {
              default: withCtx(() => o8[0] || (o8[0] = [
                createTextVNode("Copy link")
              ])),
              _: 1,
              __: [0]
            })
          ]),
          _: 1
        }, 8, ["aria-describedby"])
      ])
    ], 16));
  }
});

// node_modules/@scalar/api-reference/dist/features/Operation/layouts/ClassicLayout.vue2.js
var Q5 = { class: "operation-title" };
var X6 = { class: "operation-details" };
var Y3 = { class: "endpoint-label" };
var Z4 = { class: "endpoint-label-path" };
var x11 = { class: "endpoint-label-name" };
var ee3 = { class: "endpoint-content" };
var oe4 = { class: "operation-details-card" };
var te3 = { class: "operation-details-card-item" };
var ae6 = { class: "operation-details-card-item" };
var se3 = {
  key: 0,
  class: "operation-details-card-item"
};
var we = defineComponent({
  __name: "ClassicLayout",
  props: {
    id: {},
    path: {},
    clientOptions: {},
    method: {},
    config: {},
    operation: {},
    oldOperation: {},
    isWebhook: { type: Boolean },
    server: {},
    securitySchemes: {},
    schemas: {},
    store: {}
  },
  emits: ["update:modelValue"],
  setup(d24, { emit: k13 }) {
    const v13 = computed(() => d24.operation.summary || d24.path || ""), { copyToClipboard: g6 } = useClipboard(), S8 = k13, m30 = (e16) => {
      S8("update:modelValue", e16);
    };
    return (e16, l6) => (openBlock(), createBlock(unref(e14), {
      id: e16.id,
      class: "reference-endpoint",
      transparent: ""
    }, createSlots({
      title: withCtx(() => [
        createBaseVNode("div", Q5, [
          createBaseVNode("div", X6, [
            createVNode(unref(z2), {
              class: "endpoint-type",
              method: e16.method,
              short: ""
            }, null, 8, ["method"]),
            createVNode(unref(T6), {
              id: e16.id,
              class: "endpoint-anchor"
            }, {
              default: withCtx(() => [
                createBaseVNode("h3", Y3, [
                  createBaseVNode("div", Z4, [
                    createVNode(c9, {
                      deprecated: unref(isOperationDeprecated)(e16.operation),
                      path: e16.path
                    }, null, 8, ["deprecated", "path"])
                  ]),
                  createBaseVNode("div", x11, toDisplayString(v13.value), 1),
                  unref(getOperationStability)(e16.operation) ? (openBlock(), createBlock(unref(d7), {
                    key: 0,
                    class: normalizeClass(["capitalize", unref(getOperationStabilityColor)(e16.operation)])
                  }, {
                    default: withCtx(() => [
                      createTextVNode(toDisplayString(unref(getOperationStability)(e16.operation)), 1)
                    ]),
                    _: 1
                  }, 8, ["class"])) : createCommentVNode("", true),
                  e16.isWebhook ? (openBlock(), createBlock(unref(d7), {
                    key: 1,
                    class: "font-code text-green flex w-fit items-center justify-center gap-1"
                  }, {
                    default: withCtx(() => [
                      createVNode(unref(_7), { weight: "bold" }),
                      l6[1] || (l6[1] = createTextVNode("Webhook "))
                    ]),
                    _: 1,
                    __: [1]
                  })) : createCommentVNode("", true),
                  createVNode(unref(h16), {
                    badges: e16.operation["x-badges"],
                    position: "before"
                  }, null, 8, ["badges"])
                ])
              ]),
              _: 1
            }, 8, ["id"])
          ])
        ])
      ]),
      actions: withCtx(({ active: p25 }) => {
        var c14;
        return [
          createVNode(unref(h16), {
            badges: e16.operation["x-badges"],
            position: "after"
          }, null, 8, ["badges"]),
          p25 && !e16.isWebhook ? (openBlock(), createBlock(unref(c10), {
            key: 0,
            method: e16.method,
            path: e16.path
          }, null, 8, ["method", "path"])) : (c14 = e16.config) != null && c14.hideTestRequestButton ? createCommentVNode("", true) : (openBlock(), createBlock(unref(_5), {
            key: 1,
            class: "endpoint-try-hint size-4.5"
          })),
          createVNode(unref(S), {
            class: "endpoint-copy p-0.5",
            icon: unref(_3),
            label: "Copy endpoint URL",
            size: "xs",
            variant: "ghost",
            onClick: l6[0] || (l6[0] = withModifiers((ie) => unref(g6)(e16.path), ["stop"]))
          }, null, 8, ["icon"])
        ];
      }),
      default: withCtx(() => {
        var p25;
        return [
          createBaseVNode("div", ee3, [
            createBaseVNode("div", oe4, [
              createBaseVNode("div", te3, [
                createVNode(V6, {
                  requestBody: e16.oldOperation.requestBody,
                  parameters: e16.operation.parameters,
                  schemas: e16.schemas,
                  "onUpdate:modelValue": m30
                }, null, 8, ["requestBody", "parameters", "schemas"])
              ]),
              createBaseVNode("div", ae6, [
                createVNode(h14, {
                  collapsableItems: false,
                  responses: e16.oldOperation.responses,
                  schemas: e16.schemas
                }, null, 8, ["responses", "schemas"])
              ]),
              (p25 = e16.operation) != null && p25.callbacks ? (openBlock(), createElementBlock("div", se3, [
                createVNode(N6, {
                  method: e16.method,
                  path: e16.path,
                  callbacks: e16.operation.callbacks,
                  schemas: e16.schemas
                }, null, 8, ["method", "path", "callbacks", "schemas"])
              ])) : createCommentVNode("", true)
            ]),
            e16.operation.responses ? (openBlock(), createBlock(unref(m27), {
              key: 0,
              class: "operation-example-card",
              responses: e16.operation.responses
            }, null, 8, ["responses"])) : createCommentVNode("", true),
            createBaseVNode("div", null, [
              e16.operation.externalDocs ? (openBlock(), createBlock(unref(p9), { key: 0 }, {
                default: withCtx(() => [
                  createVNode(unref(v7), {
                    value: e16.operation.externalDocs
                  }, null, 8, ["value"])
                ]),
                _: 1
              })) : createCommentVNode("", true),
              createVNode(unref(E), null, {
                default: withCtx(() => [
                  createVNode(unref(r10), {
                    class: "operation-example-card",
                    method: e16.method,
                    selectedServer: e16.server,
                    clientOptions: e16.clientOptions,
                    selectedClient: e16.store.workspace["x-scalar-default-client"],
                    securitySchemes: e16.securitySchemes,
                    path: e16.path,
                    fallback: "",
                    operation: e16.operation,
                    "onUpdate:modelValue": m30
                  }, null, 8, ["method", "selectedServer", "clientOptions", "selectedClient", "securitySchemes", "path", "operation"])
                ]),
                _: 1
              })
            ])
          ])
        ];
      }),
      _: 2
    }, [
      e16.operation.description ? {
        name: "description",
        fn: withCtx(() => [
          createVNode(unref(C3), {
            value: e16.operation.description,
            withImages: "",
            withAnchors: "",
            transformType: "heading",
            anchorPrefix: e16.id
          }, null, 8, ["value", "anchorPrefix"])
        ]),
        key: "0"
      } : void 0
    ]), 1032, ["id"]));
  }
});

// node_modules/@scalar/api-reference/dist/features/Operation/layouts/ClassicLayout.vue.js
var m28 = s4(we, [["__scopeId", "data-v-03026e66"]]);

// node_modules/@scalar/api-reference/dist/features/Operation/layouts/ModernLayout.vue2.js
var J3 = { class: "flex flex-row justify-between gap-1" };
var K4 = { class: "flex gap-1" };
var Q6 = { class: "flex gap-1" };
var X7 = { class: "operation-details" };
var Y4 = { class: "examples" };
var Se = defineComponent({
  __name: "ModernLayout",
  props: {
    id: {},
    path: {},
    clientOptions: {},
    method: {},
    config: {},
    operation: {},
    oldOperation: {},
    isWebhook: { type: Boolean },
    securitySchemes: {},
    server: {},
    schemas: {},
    store: {}
  },
  emits: ["update:modelValue"],
  setup(p25, { emit: C12 }) {
    const m30 = computed(() => p25.operation.summary || p25.path || ""), O11 = C12, u15 = useId(), c14 = (e16) => {
      O11("update:modelValue", e16);
    };
    return (e16, f19) => (openBlock(), createBlock(unref(p7), {
      id: e16.id,
      "aria-labelledby": unref(u15),
      label: m30.value,
      tabindex: "-1"
    }, {
      default: withCtx(() => [
        createVNode(unref(p8), {
          loading: e16.config.isLoading
        }, {
          default: withCtx(() => [
            createBaseVNode("div", J3, [
              createBaseVNode("div", K4, [
                unref(getOperationStability)(e16.operation) ? (openBlock(), createBlock(unref(d7), {
                  key: 0,
                  class: normalizeClass(["capitalize", unref(getOperationStabilityColor)(e16.operation)])
                }, {
                  default: withCtx(() => [
                    createTextVNode(toDisplayString(unref(getOperationStability)(e16.operation)), 1)
                  ]),
                  _: 1
                }, 8, ["class"])) : createCommentVNode("", true),
                e16.isWebhook ? (openBlock(), createBlock(unref(d7), {
                  key: 1,
                  class: "font-code text-green flex w-fit items-center justify-center gap-1"
                }, {
                  default: withCtx(() => [
                    createVNode(unref(_7), { weight: "bold" }),
                    f19[0] || (f19[0] = createTextVNode("Webhook "))
                  ]),
                  _: 1,
                  __: [0]
                })) : createCommentVNode("", true),
                createVNode(unref(h16), {
                  badges: e16.operation["x-badges"],
                  position: "before"
                }, null, 8, ["badges"])
              ]),
              createBaseVNode("div", Q6, [
                createVNode(unref(h16), {
                  badges: e16.operation["x-badges"],
                  position: "after"
                }, null, 8, ["badges"])
              ])
            ]),
            createBaseVNode("div", {
              class: normalizeClass(unref(isOperationDeprecated)(e16.operation) ? "deprecated" : "")
            }, [
              createVNode(unref(m16), null, {
                default: withCtx(() => [
                  createVNode(unref(T6), { id: e16.id }, {
                    default: withCtx(() => [
                      createVNode(unref(e7), {
                        id: unref(u15),
                        level: 3
                      }, {
                        default: withCtx(() => [
                          createTextVNode(toDisplayString(m30.value), 1)
                        ]),
                        _: 1
                      }, 8, ["id"])
                    ]),
                    _: 1
                  }, 8, ["id"])
                ]),
                _: 1
              })
            ], 2),
            createVNode(unref(a8), null, {
              default: withCtx(() => [
                createVNode(unref(f8), null, {
                  default: withCtx(() => [
                    createBaseVNode("div", X7, [
                      createVNode(unref(C3), {
                        value: e16.operation.description,
                        withImages: "",
                        withAnchors: "",
                        transformType: "heading",
                        anchorPrefix: e16.id
                      }, null, 8, ["value", "anchorPrefix"]),
                      createVNode(V6, {
                        breadcrumb: [e16.id],
                        parameters: e16.operation.parameters,
                        requestBody: e16.oldOperation.requestBody,
                        schemas: e16.schemas,
                        "onUpdate:modelValue": c14
                      }, null, 8, ["breadcrumb", "parameters", "requestBody", "schemas"]),
                      createVNode(h14, {
                        breadcrumb: [e16.id],
                        collapsableItems: !e16.config.expandAllResponses,
                        responses: e16.oldOperation.responses,
                        schemas: e16.schemas
                      }, null, 8, ["breadcrumb", "collapsableItems", "responses", "schemas"]),
                      createVNode(unref(E), null, {
                        default: withCtx(() => [
                          e16.operation.callbacks ? (openBlock(), createBlock(N6, {
                            key: 0,
                            class: "mt-6",
                            path: e16.path,
                            callbacks: e16.operation.callbacks,
                            method: e16.method,
                            schemas: e16.schemas
                          }, null, 8, ["path", "callbacks", "method", "schemas"])) : createCommentVNode("", true)
                        ]),
                        _: 1
                      })
                    ])
                  ]),
                  _: 1
                }),
                createVNode(unref(f8), null, {
                  default: withCtx(() => [
                    createBaseVNode("div", Y4, [
                      e16.operation.externalDocs ? (openBlock(), createBlock(unref(p9), { key: 0 }, {
                        default: withCtx(() => [
                          createVNode(unref(v7), {
                            value: e16.operation.externalDocs
                          }, null, 8, ["value"])
                        ]),
                        _: 1
                      })) : createCommentVNode("", true),
                      createVNode(unref(E), null, {
                        default: withCtx(() => [
                          createVNode(unref(r10), {
                            method: e16.method,
                            selectedServer: e16.server,
                            clientOptions: e16.clientOptions,
                            securitySchemes: e16.securitySchemes,
                            selectedClient: e16.store.workspace["x-scalar-default-client"],
                            path: e16.path,
                            fallback: "",
                            operation: e16.operation,
                            "onUpdate:modelValue": c14
                          }, createSlots({
                            header: withCtx(() => {
                              var h21;
                              return [
                                createVNode(c9, {
                                  class: "font-code text-c-2 [&_em]:text-c-1 [&_em]:not-italic",
                                  deprecated: (h21 = e16.operation) == null ? void 0 : h21.deprecated,
                                  path: e16.path
                                }, null, 8, ["deprecated", "path"])
                              ];
                            }),
                            _: 2
                          }, [
                            e16.isWebhook ? void 0 : {
                              name: "footer",
                              fn: withCtx(() => [
                                createVNode(unref(c10), {
                                  method: e16.method,
                                  path: e16.path
                                }, null, 8, ["method", "path"])
                              ]),
                              key: "0"
                            }
                          ]), 1032, ["method", "selectedServer", "clientOptions", "securitySchemes", "selectedClient", "path", "operation"])
                        ]),
                        _: 1
                      }),
                      createVNode(unref(E), null, {
                        default: withCtx(() => [
                          e16.operation.responses ? (openBlock(), createBlock(unref(m27), {
                            key: 0,
                            responses: e16.operation.responses,
                            style: { "margin-top": "12px" }
                          }, null, 8, ["responses"])) : createCommentVNode("", true)
                        ]),
                        _: 1
                      })
                    ])
                  ]),
                  _: 1
                })
              ]),
              _: 1
            })
          ]),
          _: 1
        }, 8, ["loading"])
      ]),
      _: 1
    }, 8, ["id", "aria-labelledby", "label"]));
  }
});

// node_modules/@scalar/api-reference/dist/features/Operation/layouts/ModernLayout.vue.js
var f16 = s4(Se, [["__scopeId", "data-v-1152fe62"]]);

// node_modules/@scalar/api-reference/dist/features/Operation/Operation.vue.js
var j8 = defineComponent({
  __name: "Operation",
  props: {
    path: {},
    method: {},
    clientOptions: {},
    isWebhook: { type: Boolean },
    id: {},
    config: {},
    server: {},
    store: {},
    collection: {},
    document: {}
  },
  setup(o8) {
    var p25, f19;
    const u15 = computed(() => {
      var t7, n8;
      const e16 = o8.isWebhook ? "webhooks" : "paths";
      return (n8 = (t7 = o8.store.workspace.activeDocument) == null ? void 0 : t7[e16]) == null ? void 0 : n8[o8.path];
    }), a18 = computed(() => {
      var n8, i17;
      const e16 = getResolvedRef((n8 = u15.value) == null ? void 0 : n8[o8.method]);
      if (!e16)
        return null;
      const t7 = c8(
        (i17 = u15.value) == null ? void 0 : i17.parameters,
        e16.parameters
      );
      return { ...e16, parameters: t7 };
    }), m30 = computed(
      () => {
        var e16, t7, n8, i17, r12, s15;
        return o8.isWebhook ? (n8 = (t7 = (e16 = o8.document) == null ? void 0 : e16.webhooks) == null ? void 0 : t7[o8.path]) == null ? void 0 : n8[o8.method] : (s15 = (r12 = (i17 = o8.document) == null ? void 0 : i17.paths) == null ? void 0 : r12[o8.path]) == null ? void 0 : s15[o8.method];
      }
    ), { handleDiscriminatorChange: h21 } = j5(
      m30.value,
      (f19 = (p25 = o8.document) == null ? void 0 : p25.components) == null ? void 0 : f19.schemas
    ), { securitySchemes: k13 } = je(), d24 = computed(
      () => {
        var e16, t7;
        return m19(
          ((e16 = a18.value) == null ? void 0 : e16.security) || ((t7 = o8.document) == null ? void 0 : t7.security),
          o8.collection.selectedSecuritySchemeUids,
          k13
        ).map(e10);
      }
    );
    return (e16, t7) => {
      var n8, i17, r12, s15;
      return a18.value && m30.value ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
        e16.config.layout === "classic" ? (openBlock(), createBlock(m28, {
          key: 0,
          id: e16.id,
          isWebhook: e16.isWebhook,
          method: e16.method,
          operation: a18.value,
          oldOperation: m30.value,
          config: e16.config,
          clientOptions: e16.clientOptions,
          securitySchemes: d24.value,
          store: e16.store,
          path: e16.path,
          schemas: (i17 = (n8 = e16.document) == null ? void 0 : n8.components) == null ? void 0 : i17.schemas,
          server: e16.server,
          "onUpdate:modelValue": unref(h21)
        }, null, 8, ["id", "isWebhook", "method", "operation", "oldOperation", "config", "clientOptions", "securitySchemes", "store", "path", "schemas", "server", "onUpdate:modelValue"])) : (openBlock(), createBlock(f16, {
          key: 1,
          id: e16.id,
          isWebhook: e16.isWebhook,
          method: e16.method,
          config: e16.config,
          clientOptions: e16.clientOptions,
          oldOperation: m30.value,
          securitySchemes: d24.value,
          path: e16.path,
          store: e16.store,
          operation: a18.value,
          schemas: (s15 = (r12 = e16.document) == null ? void 0 : r12.components) == null ? void 0 : s15.schemas,
          server: e16.server,
          "onUpdate:modelValue": unref(h21)
        }, null, 8, ["id", "isWebhook", "method", "config", "clientOptions", "oldOperation", "securitySchemes", "path", "store", "operation", "schemas", "server", "onUpdate:modelValue"]))
      ], 64)) : createCommentVNode("", true);
    };
  }
});

// node_modules/@scalar/api-reference/dist/components/Section/SectionContainerAccordion.vue2.js
var p19 = { class: "section-accordion-wrapper" };
var h17 = { class: "section-accordion-title" };
var k11 = defineComponent({
  __name: "SectionContainerAccordion",
  setup(v13) {
    return (c14, C12) => (openBlock(), createElementBlock("div", p19, [
      createVNode(unref(N), {
        as: "div",
        class: "section-accordion",
        defaultOpen: ""
      }, {
        default: withCtx(({ open: n8 }) => [
          createVNode(unref(Q), { class: "section-accordion-button" }, {
            default: withCtx(() => [
              createVNode(unref(L), {
                class: normalizeClass(["section-accordion-chevron size-5 transition-transform", { "rotate-90": n8 }])
              }, null, 8, ["class"]),
              createBaseVNode("div", h17, [
                renderSlot(c14.$slots, "title", {}, void 0, true)
              ])
            ]),
            _: 2
          }, 1024),
          createVNode(unref(V), { class: "section-accordion-content" }, {
            default: withCtx(() => [
              renderSlot(c14.$slots, "default", {}, void 0, true)
            ]),
            _: 3
          })
        ]),
        _: 3
      })
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Section/SectionContainerAccordion.vue.js
var a13 = s4(k11, [["__scopeId", "data-v-797031c0"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Tags/ClassicLayout.vue2.js
var B5 = defineComponent({
  __name: "ClassicLayout",
  props: {
    tag: {}
  },
  setup(_22) {
    return (a18, S8) => (openBlock(), createBlock(unref(a13), { class: "tag-section" }, {
      title: withCtx(() => {
        var r12;
        return [
          createVNode(unref(m16), { class: "tag-name" }, {
            default: withCtx(() => [
              createVNode(unref(T6), {
                id: a18.tag.id
              }, {
                default: withCtx(() => [
                  createVNode(unref(e7), { level: 2 }, {
                    default: withCtx(() => [
                      createTextVNode(toDisplayString(a18.tag.title), 1)
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }, 8, ["id"])
            ]),
            _: 1
          }),
          createVNode(unref(C3), {
            class: "tag-description",
            value: (r12 = a18.tag.tag) == null ? void 0 : r12.description,
            withImages: ""
          }, null, 8, ["value"])
        ];
      }),
      default: withCtx(() => [
        renderSlot(a18.$slots, "default", {}, void 0, true)
      ]),
      _: 3
    }));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Tags/ClassicLayout.vue.js
var c11 = s4(B5, [["__scopeId", "data-v-56f55c2b"]]);

// node_modules/@scalar/api-reference/dist/components/ShowMoreButton.vue2.js
var h18 = defineComponent({
  __name: "ShowMoreButton",
  props: {
    id: {}
  },
  setup(t7) {
    const { setCollapsedSidebarItem: r12 } = l3(), n8 = f4(), c14 = () => {
      var o8, e16;
      r12(t7.id, true), (e16 = (o8 = n8.value).onShowMore) == null || e16.call(o8, t7.id);
    };
    return (o8, e16) => (openBlock(), createElementBlock("button", {
      class: "show-more",
      type: "button",
      onClick: c14
    }, [
      e16[0] || (e16[0] = createTextVNode(" Show More ")),
      createVNode(unref(C), {
        weight: "bold",
        class: "text-c-2 mt-0.25 size-3"
      })
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/components/ShowMoreButton.vue.js
var p20 = s4(h18, [["__scopeId", "data-v-b2ca4789"]]);

// node_modules/@scalar/api-reference/dist/components/OperationsList/OperationsListItem.vue2.js
var w8 = ["href"];
var j9 = defineComponent({
  __name: "OperationsListItem",
  props: {
    operation: {},
    isCollapsed: { type: Boolean }
  },
  setup(t7) {
    const { scrollToOperation: d24 } = l3(), m30 = async (e16) => {
      d24(e16.id, true);
    }, c14 = computed(() => "path" in t7.operation ? t7.operation.path : t7.operation.title), f19 = (e16) => "operation" in e16 && isOperationDeprecated(
      e16.operation
    ), h21 = (e16) => "webhook" in e16;
    return (e16, n8) => (openBlock(), createElementBlock("li", {
      key: e16.operation.id,
      class: "contents"
    }, [
      e16.isCollapsed ? (openBlock(), createBlock(unref(e7), {
        key: 0,
        class: "sr-only",
        level: 3
      }, {
        default: withCtx(() => [
          createTextVNode(toDisplayString(e16.operation.title) + " (Hidden) ", 1)
        ]),
        _: 1
      })) : createCommentVNode("", true),
      createBaseVNode("a", {
        class: "endpoint",
        href: `#${e16.operation.id}`,
        onClick: n8[0] || (n8[0] = withModifiers((z9) => m30(e16.operation), ["prevent"]))
      }, [
        createVNode(unref(z2), {
          class: "endpoint-method items-center justify-end gap-2",
          method: e16.operation.method
        }, {
          default: withCtx(() => [
            h21(e16.operation) ? (openBlock(), createBlock(unref(_7), {
              key: 0,
              style: normalizeStyle({
                color: unref(getHttpMethodInfo)(e16.operation.method).colorVar
              }),
              class: "size-3.5"
            }, null, 8, ["style"])) : createCommentVNode("", true)
          ]),
          _: 1
        }, 8, ["method"]),
        createBaseVNode("span", {
          class: normalizeClass(["endpoint-path", { deprecated: f19(e16.operation) }])
        }, toDisplayString(c14.value), 3)
      ], 8, w8)
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/components/OperationsList/OperationsListItem.vue.js
var p21 = s4(j9, [["__scopeId", "data-v-e2dcc62f"]]);

// node_modules/@scalar/api-reference/dist/components/OperationsList/OperationsList.vue2.js
var B6 = ["aria-label"];
var O9 = defineComponent({
  __name: "OperationsList",
  props: {
    tag: {}
  },
  setup(m30) {
    const p25 = computed(
      () => {
        var e16;
        return (e16 = m30.tag.children) == null ? void 0 : e16.filter(
          (a18) => "operation" in a18 || "webhook" in a18
        );
      }
    );
    return (e16, a18) => {
      var l6;
      return ((l6 = e16.tag.children) == null ? void 0 : l6.length) > 0 ? (openBlock(), createBlock(unref(h2), {
        key: 0,
        class: "endpoints-card"
      }, {
        default: withCtx(() => [
          createVNode(unref(H), { muted: "" }, {
            default: withCtx(() => [
              createVNode(f10, null, {
                default: withCtx(() => [
                  createTextVNode(toDisplayString(e16.tag.title), 1)
                ]),
                _: 1
              }),
              createTextVNode(" " + toDisplayString(e16.tag.isWebhooks ? "Webhooks" : "Operations"), 1)
            ]),
            _: 1
          }),
          createVNode(unref(m), { class: "custom-scroll max-h-[60vh]" }, {
            default: withCtx(() => [
              createBaseVNode("ul", {
                "aria-label": `${e16.tag.title} endpoints`,
                class: "endpoints"
              }, [
                (openBlock(true), createElementBlock(Fragment, null, renderList(p25.value, (i17) => (openBlock(), createBlock(p21, {
                  key: i17.id,
                  operation: i17
                }, null, 8, ["operation"]))), 128))
              ], 8, B6)
            ]),
            _: 1
          })
        ]),
        _: 1
      })) : createCommentVNode("", true);
    };
  }
});

// node_modules/@scalar/api-reference/dist/components/OperationsList/OperationsList.vue.js
var a14 = s4(O9, [["__scopeId", "data-v-d474b1bb"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Tags/TagSection.vue.js
var E8 = defineComponent({
  __name: "TagSection",
  props: {
    tag: {},
    headerId: {},
    isCollapsed: { type: Boolean }
  },
  setup(T9) {
    const i17 = f4();
    return (o8, l6) => {
      var r12;
      return o8.tag ? (openBlock(), createBlock(unref(p7), {
        key: 0,
        id: o8.tag.id,
        label: (r12 = o8.tag.title) == null ? void 0 : r12.toUpperCase(),
        role: "none"
      }, {
        default: withCtx(() => [
          withDirectives(createVNode(unref(m16), null, {
            default: withCtx(() => [
              createVNode(unref(T6), {
                id: o8.tag.id
              }, {
                default: withCtx(() => [
                  createVNode(unref(e7), {
                    id: o8.headerId,
                    level: 2
                  }, {
                    default: withCtx(() => [
                      createTextVNode(toDisplayString(o8.tag.title) + " ", 1),
                      o8.isCollapsed ? (openBlock(), createBlock(f10, { key: 0 }, {
                        default: withCtx(() => l6[0] || (l6[0] = [
                          createTextVNode(" (Collapsed)")
                        ])),
                        _: 1,
                        __: [0]
                      })) : createCommentVNode("", true)
                    ]),
                    _: 1
                  }, 8, ["id"])
                ]),
                _: 1
              }, 8, ["id"])
            ]),
            _: 1
          }, 512), [
            [vShow, !unref(i17).isLoading]
          ]),
          createVNode(unref(p8), {
            loading: unref(i17).isLoading
          }, {
            default: withCtx(() => [
              createVNode(unref(a8), null, {
                default: withCtx(() => [
                  createVNode(unref(f8), null, {
                    default: withCtx(() => {
                      var n8;
                      return [
                        createVNode(unref(C3), {
                          clamp: o8.isCollapsed ? 7 : void 0,
                          value: ((n8 = o8.tag.tag) == null ? void 0 : n8.description) ?? "",
                          withImages: ""
                        }, null, 8, ["clamp", "value"])
                      ];
                    }),
                    _: 1
                  }),
                  createVNode(unref(f8), null, {
                    default: withCtx(() => [
                      createVNode(unref(a14), { tag: o8.tag }, null, 8, ["tag"])
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ]),
            _: 1
          }, 8, ["loading"]),
          createVNode(unref(O5), {
            value: o8.tag.tag
          }, null, 8, ["value"])
        ]),
        _: 1
      }, 8, ["id", "label"])) : createCommentVNode("", true);
    };
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Tags/ModernLayout.vue2.js
var E9 = defineComponent({
  __name: "ModernLayout",
  props: {
    tag: {},
    moreThanOneTag: { type: Boolean }
  },
  setup(n8) {
    const c14 = ref(), d24 = ref(), f19 = useId(), { collapsedSidebarItems: g6 } = l3(), { hash: r12 } = T(), p25 = computed(
      () => {
        var e16, a18;
        return n8.moreThanOneTag || ((e16 = n8.tag) == null ? void 0 : e16.title) !== "default" || ((a18 = n8.tag) == null ? void 0 : a18.tag.description) !== "";
      }
    );
    async function h21() {
      var e16, a18;
      await nextTick(), (a18 = (e16 = d24.value) == null ? void 0 : e16.querySelector("button")) == null || a18.focus();
    }
    const i17 = (e16) => !g6[e16];
    return (e16, a18) => (openBlock(), createBlock(unref(i8), {
      ref_key: "sectionContainerRef",
      ref: c14,
      "aria-labelledby": unref(f19),
      class: "tag-section-container",
      role: "region"
    }, {
      default: withCtx(() => [
        createVNode(unref(T2), {
          id: `modern-tag-${e16.tag.id}`,
          isLazy: !!unref(r12) && unref(r12) !== e16.tag.id && unref(r12).startsWith(e16.tag.id)
        }, {
          default: withCtx(() => [
            p25.value ? (openBlock(), createBlock(E8, {
              key: 0,
              headerId: unref(f19),
              isCollapsed: i17(e16.tag.id),
              tag: e16.tag
            }, null, 8, ["headerId", "isCollapsed", "tag"])) : createCommentVNode("", true),
            i17(e16.tag.id) && e16.moreThanOneTag ? (openBlock(), createBlock(p20, {
              key: 1,
              id: e16.tag.id,
              "aria-label": `Show all ${e16.tag.title} endpoints`,
              onClick: h21
            }, null, 8, ["id", "aria-label"])) : createCommentVNode("", true)
          ]),
          _: 1
        }, 8, ["id", "isLazy"]),
        i17(e16.tag.id) && e16.moreThanOneTag ? createCommentVNode("", true) : (openBlock(), createElementBlock("div", {
          key: 0,
          ref_key: "contentsRef",
          ref: d24,
          class: "contents"
        }, [
          renderSlot(e16.$slots, "default", {}, void 0, true)
        ], 512))
      ]),
      _: 3
    }, 8, ["aria-labelledby"]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Tags/ModernLayout.vue.js
var p22 = s4(E9, [["__scopeId", "data-v-91405c72"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Tags/Tag.vue.js
var c12 = defineComponent({
  __name: "Tag",
  props: {
    tag: {},
    layout: {},
    moreThanOneTag: { type: Boolean }
  },
  setup(u15) {
    return (o8, f19) => o8.layout === "classic" ? (openBlock(), createBlock(c11, normalizeProps(mergeProps({ key: 0 }, o8.$props)), {
      default: withCtx(() => [
        renderSlot(o8.$slots, "default")
      ]),
      _: 3
    }, 16)) : (openBlock(), createBlock(p22, normalizeProps(mergeProps({ key: 1 }, o8.$props)), {
      default: withCtx(() => [
        renderSlot(o8.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Operations/TraversedEntry.vue.js
var J4 = defineComponent({
  __name: "TraversedEntry",
  props: {
    level: { default: 0 },
    rootIndex: {},
    entries: {},
    document: {},
    config: {},
    clientOptions: {},
    activeCollection: {},
    activeServer: {},
    store: {}
  },
  setup(r12, { expose: C12 }) {
    const l6 = (e16) => "isGroup" in e16 && e16.isGroup, v13 = (e16) => "tag" in e16 && !l6(e16), O11 = (e16) => "operation" in e16, s15 = (e16) => "webhook" in e16, I7 = (e16) => "isWebhooks" in e16 && !!e16.isWebhooks, d24 = computed(() => r12.level === 0), { hash: S8 } = T(), a18 = computed(() => d24.value ? r12.rootIndex : o4(S8.value, r12.entries)), m30 = (e16, c14) => l6(e16) ? null : c14 < a18.value ? "prev" : c14 > a18.value + 2 ? "after" : null;
    return C12({
      currentIndex: a18
    }), (e16, c14) => {
      const p25 = resolveComponent("TraversedEntry", true);
      return openBlock(true), createElementBlock(Fragment, null, renderList(e16.entries, (o8, f19) => (openBlock(), createBlock(unref(T2), {
        key: o8.id,
        id: o8.id,
        prev: m30(o8, f19) === "prev",
        isLazy: !!m30(o8, f19)
      }, {
        default: withCtx(() => [
          O11(o8) || s15(o8) ? (openBlock(), createBlock(unref(i8), {
            key: 0,
            omit: !d24.value
          }, {
            default: withCtx(() => [
              createVNode(unref(j8), {
                path: s15(o8) ? o8.name : o8.path,
                method: o8.method,
                id: o8.id,
                document: e16.document,
                collection: e16.activeCollection,
                clientOptions: e16.clientOptions,
                config: e16.config,
                store: e16.store,
                server: e16.activeServer,
                isWebhook: s15(o8)
              }, null, 8, ["path", "method", "id", "document", "collection", "clientOptions", "config", "store", "server", "isWebhook"])
            ]),
            _: 2
          }, 1032, ["omit"])) : I7(o8) || v13(o8) ? (openBlock(), createBlock(unref(c12), {
            key: 1,
            tag: o8,
            layout: e16.config.layout,
            moreThanOneTag: e16.entries.filter(v13).length > 1
          }, {
            default: withCtx(() => {
              var h21;
              return [
                "children" in o8 && ((h21 = o8.children) != null && h21.length) ? (openBlock(), createBlock(p25, {
                  key: 0,
                  level: e16.level + 1,
                  entries: o8.children,
                  activeCollection: e16.activeCollection,
                  activeServer: e16.activeServer,
                  clientOptions: e16.clientOptions,
                  rootIndex: e16.rootIndex,
                  config: e16.config,
                  document: e16.document,
                  store: e16.store
                }, null, 8, ["level", "entries", "activeCollection", "activeServer", "clientOptions", "rootIndex", "config", "document", "store"])) : createCommentVNode("", true)
              ];
            }),
            _: 2
          }, 1032, ["tag", "layout", "moreThanOneTag"])) : l6(o8) ? (openBlock(), createBlock(p25, {
            key: 2,
            level: e16.level + 1,
            rootIndex: e16.rootIndex,
            entries: o8.children || [],
            activeCollection: e16.activeCollection,
            activeServer: e16.activeServer,
            clientOptions: e16.clientOptions,
            config: e16.config,
            document: e16.document,
            store: e16.store
          }, null, 8, ["level", "rootIndex", "entries", "activeCollection", "activeServer", "clientOptions", "config", "document", "store"])) : createCommentVNode("", true)
        ]),
        _: 2
      }, 1032, ["id", "prev", "isLazy"]))), 128);
    };
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Operations/TraversedEntryContainer.vue.js
var w9 = { key: 0 };
var K5 = defineComponent({
  __name: "TraversedEntryContainer",
  props: {
    document: {},
    config: {},
    clientOptions: {},
    store: {}
  },
  emits: ["allEntriesLoaded"],
  setup(c14, { emit: f19 }) {
    const p25 = f19, { collections: g6, servers: l6 } = je(), { activeCollection: C12 } = z(), t7 = computed(() => {
      var e16;
      if ((e16 = c14.config) != null && e16.slug) {
        const o8 = g6[getSlugUid(c14.config.slug)];
        if (o8)
          return o8;
      }
      return C12.value;
    }), S8 = computed(() => {
      if (t7.value) {
        if (t7.value.selectedServerUid) {
          const e16 = l6[t7.value.selectedServerUid];
          if (e16)
            return e16;
        }
        return l6[t7.value.servers[0]];
      }
    }), { items: r12 } = l3(), { hash: a18, isIntersectionEnabled: h21 } = T(), n8 = freezeAtTop(a18.value), u15 = () => {
      n8 == null || n8(), m7.value = true, h21.value = true;
    }, i17 = ref(/* @__PURE__ */ new Set()), E11 = computed(
      () => o4(a18.value, r12.value.entries)
    );
    return r.on(({ loading: e16, loaded: o8, save: v13 }) => {
      m7.value || (e16 && v13 && i17.value.add(e16), o8 && v13 && i17.value.delete(o8), i17.value.size === 0 && (p25("allEntriesLoaded", true), setTimeout(() => u15(), 300)));
    }), setTimeout(() => u15(), 5e3), (e16, o8) => unref(r12).entries.length && t7.value ? (openBlock(), createElementBlock("div", w9, [
      createVNode(J4, {
        entries: unref(r12).entries,
        activeCollection: t7.value,
        activeServer: S8.value,
        clientOptions: e16.clientOptions,
        config: e16.config,
        document: e16.document,
        rootIndex: E11.value,
        store: e16.store
      }, null, 8, ["entries", "activeCollection", "activeServer", "clientOptions", "config", "document", "rootIndex", "store"])
    ])) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Models/ClassicLayout.vue2.js
var O10 = {
  key: 0,
  class: "properties"
};
var T7 = { key: 1 };
var J5 = defineComponent({
  __name: "ClassicLayout",
  props: {
    schemas: {}
  },
  setup(b10) {
    const s15 = b10, C12 = computed(() => s15.schemas ? Object.entries(s15.schemas).map(([m30, n8]) => ({
      name: m30,
      schema: n8
    })) : []), { getModelId: c14 } = T();
    return (m30, n8) => s15.schemas ? (openBlock(), createBlock(unref(a13), {
      key: 0,
      class: "reference-models"
    }, {
      title: withCtx(() => [
        createVNode(unref(m16), { level: 2 }, {
          default: withCtx(() => n8[0] || (n8[0] = [
            createTextVNode("Models")
          ])),
          _: 1,
          __: [0]
        })
      ]),
      default: withCtx(() => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(C12.value, ({ name: l6, schema: r12 }) => (openBlock(), createBlock(unref(e14), {
          id: unref(c14)({ name: l6 }),
          key: l6,
          label: l6
        }, {
          title: withCtx(() => [
            createVNode(unref(T6), {
              id: unref(c14)({ name: l6 }),
              class: "reference-models-anchor"
            }, {
              default: withCtx(() => [
                createVNode(unref(e7), { level: 3 }, {
                  default: withCtx(() => [
                    createVNode(unref(e11), {
                      class: "reference-models-label",
                      name: r12.title ?? l6,
                      value: r12
                    }, null, 8, ["name", "value"])
                  ]),
                  _: 2
                }, 1024)
              ]),
              _: 2
            }, 1032, ["id"])
          ]),
          default: withCtx(() => [
            r12 != null && r12.properties ? (openBlock(), createElementBlock("div", O10, [
              (openBlock(true), createElementBlock(Fragment, null, renderList(Object.entries(r12.properties), ([d24, g6]) => {
                var f19, p25, _22;
                return openBlock(), createBlock(unref(p15), {
                  key: d24,
                  name: d24,
                  required: ((f19 = r12.required) == null ? void 0 : f19.includes(d24)) || ((_22 = (p25 = r12.properties) == null ? void 0 : p25[d24]) == null ? void 0 : _22.required) === true,
                  value: g6
                }, null, 8, ["name", "required", "value"]);
              }), 128))
            ])) : (openBlock(), createElementBlock("div", T7, [
              createVNode(unref(p15), { value: r12 }, null, 8, ["value"])
            ]))
          ]),
          _: 2
        }, 1032, ["id", "label"]))), 128))
      ]),
      _: 1
    })) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Models/ClassicLayout.vue.js
var c13 = s4(J5, [["__scopeId", "data-v-94ac35f8"]]);

// node_modules/@scalar/api-reference/dist/components/Section/CompactSection.vue2.js
var B7 = { class: "collapsible-section" };
var N8 = ["id", "aria-controls", "aria-expanded"];
var R6 = defineComponent({
  __name: "CompactSection",
  props: {
    id: {},
    label: {},
    defaultOpen: { type: Boolean, default: false }
  },
  setup(a18) {
    const { hash: c14 } = T(), t7 = ref(a18.defaultOpen);
    return watch(
      c14,
      async (e16) => {
        a18.id === e16 && !t7.value && (t7.value = true, await nextTick(), scrollToId(a18.id));
      },
      { immediate: true }
    ), (e16, l6) => (openBlock(), createElementBlock("div", B7, [
      createBaseVNode("button", {
        id: e16.id,
        "aria-controls": e16.id,
        "aria-expanded": t7.value,
        class: normalizeClass(["collapsible-section-trigger", { "collapsible-section-trigger-open": t7.value }]),
        type: "button",
        onClick: l6[0] || (l6[0] = ($6) => t7.value = !t7.value)
      }, [
        createVNode(unref(L), {
          class: normalizeClass(["size-3 transition-transform duration-100", { "rotate-90": t7.value }]),
          weight: "bold"
        }, null, 8, ["class"]),
        createVNode(unref(T6), {
          id: e16.id,
          class: "collapsible-section-header"
        }, {
          default: withCtx(() => [
            renderSlot(e16.$slots, "heading", {}, void 0, true)
          ]),
          _: 3
        }, 8, ["id"])
      ], 10, N8),
      t7.value ? (openBlock(), createBlock(unref(p7), {
        key: 0,
        id: e16.id,
        class: "collapsible-section-content",
        label: e16.label
      }, {
        default: withCtx(() => [
          renderSlot(e16.$slots, "default", {}, void 0, true)
        ]),
        _: 3
      }, 8, ["id", "label"])) : createCommentVNode("", true)
    ]));
  }
});

// node_modules/@scalar/api-reference/dist/components/Section/CompactSection.vue.js
var r11 = s4(R6, [["__scopeId", "data-v-0a6031fe"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Models/ModernLayout.vue2.js
var h19 = 10;
var P7 = defineComponent({
  __name: "ModernLayout",
  props: {
    config: {},
    schemas: {}
  },
  setup(s15) {
    const m30 = useId(), { collapsedSidebarItems: S8 } = l3(), { getModelId: d24 } = T(), n8 = computed(
      () => s15.config.expandAllModelSections || Object.keys(s15.schemas ?? {}).length <= h19 || S8[d24()]
    ), v13 = computed(() => {
      const l6 = Object.keys(s15.schemas ?? {});
      return n8.value ? l6 : l6.slice(0, h19);
    });
    return (l6, c14) => l6.schemas ? (openBlock(), createBlock(unref(i8), {
      key: 0,
      id: "models"
    }, {
      default: withCtx(() => [
        createVNode(unref(p7), { "aria-labelledby": unref(m30) }, {
          default: withCtx(() => [
            createVNode(unref(m16), null, {
              default: withCtx(() => [
                createVNode(unref(e7), {
                  id: unref(m30),
                  level: 2
                }, {
                  default: withCtx(() => c14[0] || (c14[0] = [
                    createTextVNode(" Models ")
                  ])),
                  _: 1,
                  __: [0]
                }, 8, ["id"])
              ]),
              _: 1
            }),
            createBaseVNode("div", {
              class: normalizeClass(["models-list", { "models-list-truncated": !n8.value }])
            }, [
              (openBlock(true), createElementBlock(Fragment, null, renderList(v13.value, (t7) => (openBlock(), createBlock(unref(r11), {
                key: t7,
                id: unref(d24)({ name: t7 }),
                class: "models-list-item",
                label: t7,
                defaultOpen: l6.config.expandAllModelSections
              }, {
                heading: withCtx(() => [
                  createVNode(unref(e7), { level: 3 }, {
                    default: withCtx(() => [
                      createVNode(unref(e11), {
                        name: l6.schemas[t7].title ?? t7,
                        value: l6.schemas[t7]
                      }, null, 8, ["name", "value"])
                    ]),
                    _: 2
                  }, 1024)
                ]),
                default: withCtx(() => [
                  createVNode(unref(E), null, {
                    default: withCtx(() => [
                      createVNode(unref(f11), {
                        noncollapsible: "",
                        hideHeading: true,
                        hideModelNames: true,
                        schemas: l6.schemas,
                        level: 1,
                        value: l6.schemas[t7]
                      }, null, 8, ["schemas", "value"])
                    ]),
                    _: 2
                  }, 1024)
                ]),
                _: 2
              }, 1032, ["id", "label", "defaultOpen"]))), 128))
            ], 2),
            n8.value ? createCommentVNode("", true) : (openBlock(), createBlock(p20, {
              key: 0,
              id: unref(d24)(),
              class: "show-more-models"
            }, null, 8, ["id"]))
          ]),
          _: 1
        }, 8, ["aria-labelledby"])
      ]),
      _: 1
    })) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Models/ModernLayout.vue.js
var p23 = s4(P7, [["__scopeId", "data-v-595c304a"]]);

// node_modules/@scalar/api-reference/dist/components/Content/Models/Models.vue.js
var M8 = defineComponent({
  __name: "Models",
  props: {
    document: {},
    config: {}
  },
  setup(n8) {
    const { hash: a18 } = T(), e16 = computed(() => a4(n8.document));
    return (m30, g6) => e16.value && Object.keys(e16.value).length > 0 ? (openBlock(), createBlock(unref(T2), {
      key: 0,
      id: "models",
      isLazy: !!unref(a18) && !unref(a18).startsWith("model")
    }, {
      default: withCtx(() => {
        var c14;
        return [
          ((c14 = m30.config) == null ? void 0 : c14.layout) === "classic" ? (openBlock(), createBlock(c13, {
            key: 0,
            schemas: e16.value
          }, null, 8, ["schemas"])) : (openBlock(), createBlock(p23, {
            key: 1,
            config: m30.config,
            schemas: e16.value
          }, null, 8, ["config", "schemas"]))
        ];
      }),
      _: 1
    }, 8, ["isLazy"])) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/components/Content/Content.vue.js
var N9 = { class: "narrow-references-container" };
var q9 = defineComponent({
  __name: "Content",
  props: {
    document: {},
    config: {},
    store: {}
  },
  setup(V8) {
    const n8 = f4(), i17 = computed(
      () => m13(n8.value.hiddenClients)
    );
    return (e16, E11) => {
      var c14, s15, m30, l6, d24;
      return openBlock(), createElementBlock(Fragment, null, [
        createVNode(unref(f5)),
        createBaseVNode("div", N9, [
          renderSlot(e16.$slots, "start"),
          (s15 = (c14 = e16.document) == null ? void 0 : c14.info) != null && s15.title || (l6 = (m30 = e16.document) == null ? void 0 : m30.info) != null && l6.description ? (openBlock(), createBlock(unref(p13), {
            key: 0,
            document: e16.document,
            store: e16.store,
            clientOptions: i17.value,
            config: unref(n8)
          }, null, 8, ["document", "store", "clientOptions", "config"])) : renderSlot(e16.$slots, "empty-state", { key: 1 }),
          createVNode(unref(K5), {
            document: e16.document,
            config: unref(n8),
            clientOptions: i17.value,
            store: e16.store
          }, null, 8, ["document", "config", "clientOptions", "store"]),
          (d24 = unref(n8)) != null && d24.hideModels ? createCommentVNode("", true) : (openBlock(), createBlock(unref(M8), {
            key: 2,
            document: e16.document,
            config: unref(n8)
          }, null, 8, ["document", "config"])),
          renderSlot(e16.$slots, "end")
        ])
      ], 64);
    };
  }
});

// node_modules/@scalar/api-reference/dist/legacy/stores/useExampleStore.js
var o7 = ref();
var t6 = ref();
var p24 = () => ({
  selectedExampleKey: o7,
  operationId: t6
});

// node_modules/@scalar/api-reference/dist/features/api-client-modal/ApiClientModal.vue.js
var z8 = defineComponent({
  __name: "ApiClientModal",
  props: {
    configuration: {},
    dereferencedDocument: {}
  },
  setup(o8) {
    const l6 = ref(null), { client: c14, init: p25 } = a7(), { selectedExampleKey: S8, operationId: m30 } = p24(), a18 = z(), n8 = je(), { isIntersectionEnabled: d24 } = T(), g6 = () => ({
      name: "on-before-request",
      hooks: {
        onBeforeRequest: o8.configuration.onBeforeRequest
      }
    });
    return onMounted(() => {
      l6.value && p25({
        el: l6.value,
        configuration: {
          ...o8.configuration,
          // If the onBeforeRequest hook is configured, we add the plugin to the API client.
          plugins: o8.configuration.onBeforeRequest ? [g6] : []
        },
        store: n8
      });
    }), watchDebounced(
      () => o8.dereferencedDocument,
      (e16, u15) => {
        var i17, s15;
        if (!e16)
          return;
        const r12 = diff(e16, u15 || {});
        r12 != null && r12.length && (a18.activeCollection.value && ((i17 = c14.value) == null || i17.resetStore()), n8.importSpecFile(void 0, "default", {
          dereferencedDocument: e16,
          shouldLoad: false,
          documentUrl: (s15 = o8.configuration) == null ? void 0 : s15.url,
          useCollectionSecurity: true,
          ...o8.configuration
        }));
      }
    ), watchDebounced(
      () => o8.configuration,
      (e16, u15) => {
        if (!u15 || !a18.activeCollection.value)
          return;
        const r12 = a18.activeCollection.value, i17 = diff(u15, e16);
        if (!i17.some(
          (t7) => t7.path[0] === "url" || t7.path[0] === "content" || t7.path[1] === "url" || t7.path[1] === "content"
        )) {
          if (i17.forEach((t7) => {
            t7.path[0] === "authentication" && J(t7, a18, n8);
          }), e16.servers || u15.servers) {
            r12.servers.forEach((f19) => {
              n8.serverMutators.delete(f19, r12.uid);
            });
            const t7 = getServersFromDocument(
              e16.servers ?? o8.dereferencedDocument.servers,
              {
                baseServerURL: e16.baseServerURL
              }
            );
            t7.forEach((f19) => {
              n8.serverMutators.add(f19, r12.uid);
            }), t7.length && n8.collectionMutators.edit(
              r12.uid,
              "selectedServerUid",
              t7[t7.length - 1].uid
            );
          }
        }
        d24.value = false, setTimeout(() => {
          d24.value = true;
        }, 1e3);
      },
      { deep: true, debounce: 300 }
    ), watch(S8, (e16) => {
      c14.value && e16 && m30.value && c14.value.updateExample(e16, m30.value);
    }), onBeforeUnmount(() => {
      var e16;
      return (e16 = c14.value) == null ? void 0 : e16.app.unmount();
    }), (e16, u15) => (openBlock(), createElementBlock("div", {
      ref_key: "el",
      ref: l6
    }, null, 512));
  }
});

// node_modules/@scalar/api-reference/dist/components/ApiReferenceLayout.vue2.js
var ot = ["innerHTML"];
var rt = { class: "references-header" };
var at = ["aria-label"];
var nt = { class: "references-navigation-list" };
var lt = { key: 0 };
var st = {
  key: 1,
  class: "scalar-api-references-standalone-search"
};
var it = { key: 1 };
var dt = { class: "references-editor" };
var ut = { class: "references-editor-textarea" };
var ct = ["aria-label"];
var mt = {
  key: 0,
  class: "w-64 *:!p-0 empty:hidden"
};
var ft = {
  key: 0,
  class: "references-footer"
};
var Kt = defineComponent({
  inheritAttrs: false,
  __name: "ApiReferenceLayout",
  props: {
    configuration: {},
    dereferencedDocument: {},
    originalDocument: {},
    isDark: { type: Boolean },
    rawSpec: {},
    store: {}
  },
  emits: ["changeTheme", "updateContent", "loadSwaggerFile", "linkSwaggerFile", "toggleDarkMode"],
  setup(T9) {
    const t7 = computed(
      () => apiReferenceConfigurationSchema.parse(T9.configuration)
    ), { initializeToasts: G6, toast: Q7 } = i();
    G6((e16) => Q7(e16));
    const {
      originalDocument: W10,
      originalOpenApiVersion: j10,
      dereferencedDocument: v13,
      workspaceStore: q10,
      activeEntitiesStore: J6
    } = C5({
      configuration: t7,
      dereferencedDocument: T9.dereferencedDocument,
      originalDocument: T9.originalDocument
    });
    provide(o, j10), provide(qe, q10), provide(P, J6);
    const X8 = useMediaQuery("(min-width: 1150px)"), Z5 = ref("100dvh"), y10 = ref(null);
    useResizeObserver(y10, (e16) => {
      Z5.value = e16[0] ? e16[0].contentRect.height + "px" : "100dvh";
    });
    const x12 = computed(hasObtrusiveScrollbars), B8 = T(t7), { isSidebarOpen: E11, setCollapsedSidebarItem: L5, scrollToOperation: ee4, items: te4 } = l3(v13, {
      ...B8,
      config: t7
    }), {
      getReferenceId: oe5,
      getPathRoutingId: re,
      getSectionId: ae7,
      getTagId: ne3,
      hash: D7,
      isIntersectionEnabled: R8,
      updateHash: _22,
      replaceUrlState: le3
    } = B8;
    if (t7.value.redirect && typeof window < "u") {
      const e16 = t7.value.redirect(
        (t7.value.pathRouting ? window.location.pathname : "") + window.location.hash
      );
      e16 && history.replaceState({}, "", e16);
    }
    onBeforeMount(() => {
      _22(), d();
    });
    const A3 = async (e16) => {
      var o8;
      R8.value = false, _22(), e16 ? ee4(e16) : (o8 = y10.value) == null || o8.scrollTo(0, 0), await sleep(100), R8.value = true;
    }, P10 = ref(0);
    onMounted(() => {
      var n8, w13, k13;
      history.scrollRestoration = "manual";
      const e16 = (w13 = (n8 = y10.value) == null ? void 0 : n8.parentElement) == null ? void 0 : w13.getBoundingClientRect(), o8 = (k13 = y10.value) == null ? void 0 : k13.getBoundingClientRect();
      if (e16 && o8) {
        const $6 = o8.top - e16.top;
        P10.value = $6 < 2 ? 0 : $6;
      }
      window.onhashchange = () => {
        A3(oe5());
      }, window.onpopstate = () => t7.value.pathRouting && A3(re(window.location.pathname)), window.addEventListener("scroll", H7, { passive: true });
    });
    const se4 = computed(
      () => X8.value || !t7.value.isEditable
    ), H7 = useDebounceFn(() => {
      window.scrollY < 50 && m7.value && le3("");
    }), ie = ref(false);
    watch(v13, (e16) => {
      var o8;
      if (D7.value) {
        const n8 = ae7(D7.value);
        n8 && L5(n8, true);
      } else {
        const n8 = (o8 = e16.tags) == null ? void 0 : o8[0];
        n8 && L5(ne3(n8), true);
      }
      ie.value = true;
    });
    const u15 = computed(() => {
      var e16;
      return {
        breadcrumb: ((e16 = te4.value) == null ? void 0 : e16.titles.get(D7.value)) ?? ""
      };
    });
    onMounted(
      () => L2.on(({ filename: e16, format: o8 }) => {
        R(
          toValue(W10) || toValue(T9.rawSpec) || "",
          e16,
          o8
        );
      })
    ), onUnmounted(() => {
      window.removeEventListener("scroll", H7), L2.reset();
    }), s(() => useId()), provide(t, "modal"), provide(r3, t7), provide(
      t3,
      r4({
        plugins: t7.value.plugins
      })
    );
    const de2 = computed(
      () => `<style>
  ${getThemeStyles(t7.value.theme, {
        fonts: t7.value.withDefaultFonts
      })}</style>`
    ), { mediaQueries: ue } = useBreakpoints(), ce2 = false;
    return watch(ue.lg, (e16, o8) => {
      o8 && !e16 && (E11.value = false);
    }), watch(D7, (e16, o8) => {
      e16 && e16 !== o8 && (E11.value = false);
    }), (e16, o8) => {
      var n8, w13, k13, $6, F4;
      return openBlock(), createElementBlock(Fragment, null, [
        createBaseVNode("div", { innerHTML: de2.value }, null, 8, ot),
        createBaseVNode("div", {
          ref_key: "documentEl",
          ref: y10,
          class: normalizeClass(["scalar-app scalar-api-reference references-layout", [
            {
              "scalar-api-references-standalone-mobile": t7.value.showSidebar ?? true,
              "scalar-scrollbars-obtrusive": x12.value,
              "references-editable": t7.value.isEditable,
              "references-sidebar": t7.value.showSidebar,
              "references-sidebar-mobile-open": unref(E11),
              "references-classic": t7.value.layout === "classic"
            },
            e16.$attrs.class
          ]]),
          style: normalizeStyle({
            "--scalar-y-offset": `var(--scalar-custom-header-height, ${P10.value}px)`
          })
        }, [
          createBaseVNode("div", rt, [
            t7.value.layout === "modern" && (t7.value.showSidebar ?? true) ? (openBlock(), createBlock(m8, {
              key: 0,
              breadcrumb: u15.value.breadcrumb
            }, null, 8, ["breadcrumb"])) : createCommentVNode("", true),
            renderSlot(e16.$slots, "header", normalizeProps(guardReactiveProps(u15.value)), void 0, true)
          ]),
          t7.value.showSidebar ? (openBlock(), createElementBlock("aside", {
            key: 0,
            "aria-label": `Sidebar for ${(w13 = (n8 = unref(v13)) == null ? void 0 : n8.info) == null ? void 0 : w13.title}`,
            class: "references-navigation t-doc__sidebar"
          }, [
            createBaseVNode("div", nt, [
              createVNode(unref(E), null, {
                default: withCtx(() => {
                  var i17, c14;
                  return [
                    createVNode(unref(m10), {
                      title: ((c14 = (i17 = unref(v13)) == null ? void 0 : i17.info) == null ? void 0 : c14.title) ?? "The OpenAPI Schema"
                    }, {
                      "sidebar-start": withCtx(() => {
                        var O11, N10;
                        return [
                          e16.$slots["document-selector"] ? (openBlock(), createElementBlock("div", lt, [
                            renderSlot(e16.$slots, "document-selector", {}, void 0, true)
                          ])) : createCommentVNode("", true),
                          t7.value.hideSearch ? createCommentVNode("", true) : (openBlock(), createElementBlock("div", st, [
                            createVNode(unref(O4), {
                              searchHotKey: (O11 = t7.value) == null ? void 0 : O11.searchHotKey,
                              hideModels: (N10 = t7.value) == null ? void 0 : N10.hideModels
                            }, null, 8, ["searchHotKey", "hideModels"])
                          ])),
                          renderSlot(e16.$slots, "sidebar-start", normalizeProps(guardReactiveProps(u15.value)), void 0, true)
                        ];
                      }),
                      "sidebar-end": withCtx(() => [
                        renderSlot(e16.$slots, "sidebar-end", normalizeProps(guardReactiveProps(u15.value)), () => [
                          createVNode(unref(w3), { class: "darklight-reference" }, {
                            toggle: withCtx(() => [
                              t7.value.hideDarkModeToggle ? (openBlock(), createElementBlock("span", it)) : (openBlock(), createBlock(unref(B), {
                                key: 0,
                                modelValue: e16.isDark,
                                "onUpdate:modelValue": o8[0] || (o8[0] = (O11) => e16.$emit("toggleDarkMode"))
                              }, null, 8, ["modelValue"]))
                            ]),
                            default: withCtx(() => [
                              t7.value.hideClientButton ? createCommentVNode("", true) : (openBlock(), createBlock(unref(f), {
                                key: 0,
                                buttonSource: "sidebar",
                                integration: t7.value._integration,
                                isDevelopment: ce2,
                                url: t7.value.url
                              }, null, 8, ["integration", "url"]))
                            ]),
                            _: 1
                          })
                        ], true)
                      ]),
                      _: 3
                    }, 8, ["title"])
                  ];
                }),
                _: 3
              })
            ])
          ], 8, at)) : createCommentVNode("", true),
          withDirectives(createBaseVNode("div", dt, [
            createBaseVNode("div", ut, [
              renderSlot(e16.$slots, "editor", normalizeProps(guardReactiveProps(u15.value)), void 0, true)
            ])
          ], 512), [
            [vShow, t7.value.isEditable]
          ]),
          se4.value ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
            createBaseVNode("main", {
              "aria-label": `Open API Documentation for ${($6 = (k13 = unref(v13)) == null ? void 0 : k13.info) == null ? void 0 : $6.title}`,
              class: "references-rendered"
            }, [
              createVNode(unref(q9), {
                document: unref(v13),
                config: t7.value,
                store: e16.store
              }, createSlots({
                start: withCtx(() => [
                  renderSlot(e16.$slots, "content-start", normalizeProps(guardReactiveProps(u15.value)), () => [
                    t7.value.layout === "classic" ? (openBlock(), createBlock(h4, { key: 0 }, {
                      "dark-mode-toggle": withCtx(() => [
                        t7.value.hideDarkModeToggle ? createCommentVNode("", true) : (openBlock(), createBlock(unref(c), {
                          key: 0,
                          class: "text-c-2 hover:text-c-1",
                          mode: e16.isDark ? "dark" : "light",
                          style: { transform: "scale(1.4)" },
                          variant: "icon",
                          onClick: o8[1] || (o8[1] = (i17) => e16.$emit("toggleDarkMode"))
                        }, null, 8, ["mode"]))
                      ]),
                      default: withCtx(() => {
                        var i17;
                        return [
                          e16.$slots["document-selector"] ? (openBlock(), createElementBlock("div", mt, [
                            renderSlot(e16.$slots, "document-selector", {}, void 0, true)
                          ])) : createCommentVNode("", true),
                          t7.value.hideSearch ? createCommentVNode("", true) : (openBlock(), createBlock(unref(O4), {
                            key: 1,
                            class: "t-doc__sidebar max-w-64",
                            searchHotKey: t7.value.searchHotKey,
                            hideModels: (i17 = t7.value) == null ? void 0 : i17.hideModels
                          }, null, 8, ["searchHotKey", "hideModels"]))
                        ];
                      }),
                      _: 3
                    })) : createCommentVNode("", true)
                  ], true)
                ]),
                end: withCtx(() => [
                  renderSlot(e16.$slots, "content-end", normalizeProps(guardReactiveProps(u15.value)), void 0, true)
                ]),
                _: 2
              }, [
                (F4 = t7.value) != null && F4.isEditable ? {
                  name: "empty-state",
                  fn: withCtx(() => {
                    var i17;
                    return [
                      createVNode(e3, {
                        theme: ((i17 = t7.value) == null ? void 0 : i17.theme) || "default",
                        onChangeTheme: o8[2] || (o8[2] = (c14) => e16.$emit("changeTheme", c14)),
                        onLinkSwaggerFile: o8[3] || (o8[3] = (c14) => e16.$emit("linkSwaggerFile")),
                        onLoadSwaggerFile: o8[4] || (o8[4] = (c14) => e16.$emit("loadSwaggerFile")),
                        onUpdateContent: o8[5] || (o8[5] = (c14) => e16.$emit("updateContent", c14))
                      }, null, 8, ["theme"])
                    ];
                  }),
                  key: "0"
                } : void 0
              ]), 1032, ["document", "config", "store"])
            ], 8, ct),
            e16.$slots.footer ? (openBlock(), createElementBlock("div", ft, [
              renderSlot(e16.$slots, "footer", normalizeProps(guardReactiveProps(u15.value)), void 0, true)
            ])) : createCommentVNode("", true)
          ], 64)) : createCommentVNode("", true),
          createVNode(unref(z8), {
            configuration: t7.value,
            dereferencedDocument: unref(v13)
          }, null, 8, ["configuration", "dereferencedDocument"])
        ], 6),
        createVNode(unref(v2))
      ], 64);
    };
  }
});

// node_modules/@scalar/api-reference/dist/components/ApiReferenceLayout.vue.js
var a15 = s4(Kt, [["__scopeId", "data-v-c369ccec"]]);

// node_modules/@scalar/api-reference/dist/v2/helpers/get-document-name.js
var n7 = ({ name: i17, url: f19, document: t7 } = {}, e16) => {
  if (i17)
    return i17;
  if (f19)
    return f19;
  if (t7 != null && t7.info) {
    const r12 = t7.info;
    if (r12.title)
      return r12.title;
  }
  return "default";
};

// node_modules/@scalar/api-reference/dist/v2/helpers/map-configuration.js
var a16 = (e16) => {
  var t7;
  return {
    "x-scalar-reference-config": {
      title: e16.title,
      slug: e16.slug,
      features: {
        // Feature toggles for UI elements and behaviors
        showModels: !e16.hideModels,
        expandAllTagSections: e16.defaultOpenAllTags,
        persistAuthenticationState: e16.persistAuth,
        showDarkModeToggle: !e16.hideDarkModeToggle,
        showDownload: !e16.hideDownloadButton,
        showSearch: !e16.hideSearch,
        showSidebar: e16.showSidebar,
        showTestRequestButton: !e16.hideTestRequestButton
      },
      appearance: {
        // Appearance-related configuration
        css: e16.customCss,
        favicon: e16.favicon,
        forceColorMode: e16.forceDarkModeState,
        initialColorMode: e16.darkMode ? "dark" : void 0,
        layout: e16.layout,
        loadDefaultFonts: e16.withDefaultFonts,
        theme: e16.theme
      },
      routing: {
        // Routing configuration
        basePath: (t7 = e16.pathRouting) == null ? void 0 : t7.basePath
      },
      settings: {
        // Miscellaneous settings
        proxyUrl: e16.proxyUrl,
        searchKey: e16.searchHotKey,
        baseServerUrl: e16.baseServerURL,
        servers: e16.servers
      },
      meta: e16.metaData,
      // In memory configuration
      tagSort: e16.tagsSorter,
      operationsSorter: e16.operationsSorter,
      generateHeadingSlug: e16.generateHeadingSlug,
      generateModelSlug: e16.generateModelSlug,
      generateOperationSlug: e16.generateOperationSlug,
      generateTagSlug: e16.generateTagSlug,
      generateWebhookSlug: e16.generateWebhookSlug
    }
  };
};

// node_modules/@scalar/api-reference/dist/v2/helpers/normalize-content.js
var f17 = (r12) => {
  if (r12)
    return typeof r12 == "function" ? f17(r12()) : typeof r12 == "string" ? parseJsonOrYaml(r12) : r12 || void 0;
};

// node_modules/@scalar/api-reference/dist/features/multiple-documents/useMultipleDocuments.js
var w11 = "api";
var h20 = new BananaSlug();
var C11 = (t7) => t7 ? (Array.isArray(t7) ? t7 : [t7]).flatMap((u15) => {
  if (isConfigurationWithSources(u15)) {
    const { sources: s15, ...r12 } = u15;
    return (s15 == null ? void 0 : s15.map((m30) => ({ ...r12, ...m30 }))) ?? [];
  }
  return [u15];
}).map((u15, s15) => u15 && I6(u15, s15)).filter(isDefined) : [];
var I6 = (t7, a18 = 0) => {
  const e16 = {
    ...t7,
    // @ts-expect-error this is before parsing so we transform the old style
    ...t7.spec ?? {}
  };
  if (!(!(e16 != null && e16.url) && !(e16 != null && e16.content)))
    return h20.reset(), e16.title ? {
      ...e16,
      slug: e16.slug || h20.slug(e16.title),
      title: e16.title
    } : e16.slug ? {
      ...e16,
      title: e16.slug
    } : {
      ...e16,
      slug: `api-${a18 + 1}`,
      title: `API #${a18 + 1}`
    };
};
var T8 = ({
  configuration: t7,
  initialIndex: a18,
  isIntersectionEnabled: e16,
  hash: u15,
  hashPrefix: s15
}) => {
  const r12 = computed(() => C11(t7.value)), f19 = ref((() => {
    if (typeof window > "u")
      return typeof a18 == "number" ? a18 : 0;
    const n8 = new URL(window.location.href).searchParams.get(w11);
    if (n8) {
      const o8 = r12.value.findIndex((p25) => p25.slug === n8);
      if (o8 !== -1)
        return o8;
      const i17 = Number.parseInt(n8, 10);
      if (!isNaN(i17) && i17 >= 0 && i17 < r12.value.length)
        return i17;
    }
    const l6 = r12.value.findIndex((o8) => "default" in o8 && o8.default === true);
    return l6 !== -1 ? l6 : typeof a18 == "number" ? a18 : 0;
  })()), c14 = computed(() => {
    var n8, l6;
    return t7.value && isConfigurationWithSources(t7.value) ? {
      ...t7.value,
      ...(l6 = (n8 = t7.value) == null ? void 0 : n8.sources) == null ? void 0 : l6[f19.value],
      ...r12.value[f19.value]
    } : {
      ...[t7.value].flat()[f19.value] ?? {},
      ...r12.value[f19.value]
    };
  });
  return watch(
    f19,
    (d24) => {
      var i17, p25, v13;
      if (typeof window > "u" || r12.value.length === 1)
        return;
      const n8 = new URL(window.location.href), l6 = r12.value[d24];
      c14.value.pathRouting && (n8.pathname = ((i17 = c14.value.pathRouting) == null ? void 0 : i17.basePath) ?? "");
      const o8 = (l6 == null ? void 0 : l6.slug) ?? d24.toString();
      n8.searchParams.set(w11, o8), n8.hash = "", window.history.replaceState({}, "", n8.toString()), u15.value = "", s15.value = "", e16.value = false, typeof window < "u" && window.scrollTo({ top: 0, behavior: "instant" }), (v13 = (p25 = c14.value).onDocumentSelect) == null || v13.call(p25);
    },
    { flush: "sync" }
  ), {
    selectedConfiguration: c14,
    availableDocuments: r12,
    selectedDocumentIndex: f19,
    isIntersectionEnabled: e16,
    hash: u15,
    hashPrefix: s15
  };
};

// node_modules/@scalar/api-reference/dist/v2/events/listeners.js
function m29(t7, e16, r12) {
  watch(
    () => t7.value,
    (n8) => {
      n8 && n8.addEventListener(e16, r12);
    },
    { immediate: true }
  ), onBeforeUnmount(() => {
    t7.value && t7.value.removeEventListener(e16, r12);
  });
}

// node_modules/@scalar/api-reference/dist/features/multiple-documents/DocumentSelector.vue.js
var S7 = {
  key: 0,
  class: "document-selector -mb-1 p-3 pb-0"
};
var w12 = {
  class: "group/dropdown-label hover:bg-b-2 text-c-2 flex h-8 w-full cursor-pointer items-center rounded border px-2 py-1.75",
  type: "button"
};
var _21 = { class: "text-c-1 overflow-hidden text-base text-ellipsis" };
var k12 = defineComponent({
  __name: "DocumentSelector",
  props: {
    options: {},
    modelValue: {}
  },
  emits: ["update:modelValue"],
  setup(l6, { emit: u15 }) {
    const d24 = u15, m30 = computed(() => {
      var e16;
      return l6.options && ((e16 = l6.options) == null ? void 0 : e16.length) > 1;
    }), a18 = computed(
      () => {
        var e16;
        return ((e16 = l6.options) == null ? void 0 : e16.map((o8, t7) => ({
          id: String(t7),
          // Get the display text for the selected option
          label: o8.title || o8.slug || `API #${t7 + 1}`
        }))) || [];
      }
    ), n8 = computed({
      get: () => a18.value.find(({ id: e16 }) => e16 === String(l6.modelValue)),
      set: (e16) => d24("update:modelValue", Number(e16.id))
    });
    return (e16, o8) => m30.value ? (openBlock(), createElementBlock("div", S7, [
      createVNode(unref(D), {
        modelValue: n8.value,
        "onUpdate:modelValue": o8[0] || (o8[0] = (t7) => n8.value = t7),
        options: a18.value,
        resize: ""
      }, {
        default: withCtx(() => {
          var t7;
          return [
            createBaseVNode("button", w12, [
              createVNode(unref(C2), { class: "mr-1 size-4 text-current" }),
              createBaseVNode("span", _21, toDisplayString(((t7 = n8.value) == null ? void 0 : t7.label) || "Select API"), 1)
            ])
          ];
        }),
        _: 1
      }, 8, ["modelValue", "options"])
    ])) : createCommentVNode("", true);
  }
});

// node_modules/@scalar/api-reference/dist/v2/ApiReferenceWorkspace.vue.js
var ke = defineComponent({
  __name: "ApiReferenceWorkspace",
  props: {
    configuration: {},
    store: {}
  },
  setup(y10) {
    const v13 = y10, {
      availableDocuments: C12,
      selectedConfiguration: o8,
      selectedDocumentIndex: s15,
      isIntersectionEnabled: m30,
      hash: S8,
      hashPrefix: T9
    } = T8({
      configuration: toRef(v13, "configuration"),
      isIntersectionEnabled: ref(false),
      hash: ref(""),
      hashPrefix: ref("")
    }), h21 = (e16, t7) => fetch(
      redirectToProxy(o8.value.proxyUrl, e16.toString()),
      t7
    );
    provide(P3, { isIntersectionEnabled: m30, hash: S8, hashPrefix: T9 });
    const d24 = useTemplateRef("root"), a18 = v13.store;
    onBeforeMount(() => {
      const e16 = safeLocalStorage().getItem(
        REFERENCE_LS_KEYS.SELECTED_CLIENT
      );
      u8(e16) && !a18.workspace["x-scalar-default-client"] && a18.update("x-scalar-default-client", e16);
    });
    const b10 = async (e16) => {
      var l6;
      const t7 = f17(e16.content), r12 = n7({
        name: e16.slug || e16.title,
        url: e16.url,
        document: t7
      });
      if (a18.workspace.documents[r12]) {
        t7 && (m30.value = false, a18.replaceDocument(r12, t7), a18.update("x-scalar-active-document", r12), setTimeout(() => {
          m30.value = true;
        }, 300));
        return;
      }
      if (t7)
        return await a18.addDocument({
          name: r12,
          document: t7,
          config: a16(e16)
        });
      if (e16.url)
        return await a18.addDocument({
          name: e16.slug ?? "default",
          url: makeUrlAbsolute(e16.url, {
            basePath: (l6 = o8.value.pathRouting) == null ? void 0 : l6.basePath
          }),
          fetch: h21,
          config: a16(e16)
        });
    };
    watch(
      [
        () => o8.value.slug,
        () => o8.value.url,
        () => o8.value.content
      ],
      ([e16, t7, r12]) => {
        (e16 || t7 || r12) && b10(o8.value);
      },
      { immediate: true }
    ), m29(d24, "scalar-update-dark-mode", (e16) => {
      a18.update("x-scalar-dark-mode", e16.detail.value);
    }), m29(d24, "scalar-update-active-document", (e16) => {
      a18.update("x-scalar-active-document", e16.detail.value);
    }), m29(d24, "scalar-update-selected-client", (e16) => {
      a18.update("x-scalar-default-client", e16.detail), safeLocalStorage().setItem(REFERENCE_LS_KEYS.SELECTED_CLIENT, e16.detail);
    }), watch(
      () => o8.value.defaultHttpClient,
      (e16) => {
        if (e16) {
          const { targetKey: t7, clientKey: r12 } = e16, l6 = `${t7}/${r12}`;
          u8(l6) && a18.update("x-scalar-default-client", l6);
        }
      },
      { immediate: true }
    );
    const { toggleColorMode: I7, isDarkMode: L5 } = useColorMode({
      initialColorMode: o8.value.darkMode ? "dark" : void 0,
      overrideColorMode: o8.value.forceDarkModeState
    });
    watch(
      () => o8.value.darkMode,
      (e16) => a18.update("x-scalar-dark-mode", !!e16)
    ), watch(
      () => L5.value,
      (e16) => a18.update("x-scalar-dark-mode", e16),
      { immediate: true }
    ), watch(
      () => s15.value,
      (e16) => {
        var t7;
        return a18.update(
          "x-scalar-active-document",
          (t7 = C12.value[e16]) == null ? void 0 : t7.slug
        );
      },
      { immediate: true }
    ), o8.value.metaData && useSeoMeta(o8.value.metaData);
    const N10 = computed(() => o8.value.favicon);
    return useFavicon(N10), (e16, t7) => {
      var r12;
      return openBlock(), createElementBlock("div", {
        ref_key: "root",
        ref: d24
      }, [
        (r12 = unref(o8)) != null && r12.customCss ? (openBlock(), createBlock(resolveDynamicComponent("style"), { key: 0 }, {
          default: withCtx(() => [
            createTextVNode(toDisplayString(unref(o8).customCss), 1)
          ]),
          _: 1
        })) : createCommentVNode("", true),
        createVNode(a15, {
          configuration: unref(o8),
          isDark: !!unref(a18).workspace["x-scalar-dark-mode"],
          store: unref(a18),
          onToggleDarkMode: t7[1] || (t7[1] = () => unref(I7)()),
          onUpdateContent: t7[2] || (t7[2] = (l6) => e16.$emit("updateContent", l6))
        }, {
          footer: withCtx(() => [
            renderSlot(e16.$slots, "footer")
          ]),
          "content-end": withCtx(() => [
            renderSlot(e16.$slots, "footer")
          ]),
          "document-selector": withCtx(() => [
            createVNode(unref(k12), {
              modelValue: unref(s15),
              "onUpdate:modelValue": t7[0] || (t7[0] = (l6) => isRef(s15) ? s15.value = l6 : null),
              options: unref(C12)
            }, null, 8, ["modelValue", "options"])
          ]),
          "sidebar-start": withCtx(() => [
            renderSlot(e16.$slots, "sidebar-start")
          ]),
          _: 3
        }, 8, ["configuration", "isDark", "store"])
      ], 512);
    };
  }
});

// node_modules/@scalar/api-reference/dist/components/ApiReference.vue.js
var d23 = defineComponent({
  __name: "ApiReference",
  props: {
    configuration: {}
  },
  setup(a18) {
    const o8 = createWorkspaceStore();
    return typeof window < "u" && (window.dataDumpWorkspace = () => o8), (e16, f19) => (openBlock(), createBlock(ke, {
      store: unref(o8),
      configuration: e16.configuration
    }, null, 8, ["store", "configuration"]));
  }
});

// node_modules/@scalar/api-reference/dist/standalone/lib/html-api.js
var g5 = (a18, s15) => {
  const r12 = "scalar-refs", t7 = reactive({
    // Either the configuration will be the second arugment or it MUST be the first (configuration only)
    configuration: s15 ?? a18 ?? {}
  });
  let n8 = createApp(() => h(d23, t7));
  if (n8.use(createHead2()), n8.config.idPrefix = r12, s15) {
    const e16 = typeof a18 == "string" ? document.querySelector(a18) : a18;
    e16 ? n8.mount(e16) : console.error("Could not find a mount point for API References:", a18);
  }
  document.addEventListener(
    "scalar:reload-references",
    () => {
      if (console.warn(
        "scalar:reload-references event has been deprecated, please use the scalarInstance.app.mount method instead."
      ), !t7.configuration)
        return;
      const e16 = typeof a18 == "string" ? document.querySelector(a18) : a18;
      e16 && (e16 && !document.body.contains(e16) && document.body.appendChild(e16), n8.unmount(), n8 = createApp(() => h(d23, t7)), n8.use(createHead2()), n8.config.idPrefix = r12, n8.mount(e16));
    },
    false
  );
  const o8 = () => {
    delete t7.configuration, n8.unmount();
  };
  return document.addEventListener(
    "scalar:destroy-references",
    () => {
      console.warn("scalar:destroy-references event has been deprecated, please use scalarInstance.destroy instead."), o8();
    },
    false
  ), document.addEventListener(
    "scalar:update-references-config",
    (e16) => {
      console.warn(
        "scalar:update-references-config event has been deprecated, please use scalarInstance.updateConfiguration instead."
      ), "detail" in e16 && Object.assign(t7, e16.detail);
    },
    false
  ), {
    app: n8,
    getConfiguration: () => t7.configuration ?? {},
    updateConfiguration: (e16) => {
      t7.configuration = e16;
    },
    destroy: o8
  };
};

// node_modules/@scalar/api-reference/dist/index.js
(function() {
  try {
    if (typeof document === "undefined" || document.getElementById("scalar-style-api-reference"))
      return;
    setTimeout(() => {
      if (getComputedStyle(document.body).getPropertyValue("--scalar-loaded-api-reference") === "true")
        return;
      const elementStyle = document.createElement("style");
      elementStyle.setAttribute("id", "scalar-style-api-reference");
      elementStyle.appendChild(document.createTextNode(`.references-classic-header[data-v-9198d025]{display:flex;align-items:center;gap:12px;max-width:var(--refs-content-max-width);margin:auto;padding:12px 0}.references-classic-header-content[data-v-9198d025]{display:flex;gap:12px;flex-grow:1}.references-classic-header-container[data-v-9198d025]{padding:0 60px}@container narrow-references-container (max-width: 900px){.references-classic-header[data-v-9198d025]{padding:12px 24px}.references-classic-header-container[data-v-9198d025]{padding:0}}.references-classic-header-icon[data-v-9198d025]{height:24px;color:var(--scalar-color-1)}.start[data-v-bc17fac9]{padding:24px;display:flex;flex-flow:wrap;justify-content:space-between;position:relative;z-index:0}.swagger-editor .start[data-v-bc17fac9]{padding-top:24px}.start-h1[data-v-bc17fac9]{font-size:var(--scalar-heading-2);margin-top:0;line-height:1.45;margin-bottom:0;font-weight:var(--scalar-bold);color:var(--scalar-color-1);width:100%;position:relative}.start-h3[data-v-bc17fac9]{font-size:var(--scalar-paragraph);margin-top:0;margin-bottom:6px;display:block;line-height:1.45;font-weight:var(--scalar-bold);color:var(--scalar-color-1);width:100%}.start-h1[data-v-bc17fac9]:not(:first-of-type){margin-top:24px}.start-p[data-v-bc17fac9]{font-size:var(--scalar-paragraph);color:var(--scalar-color-2);line-height:1.5;width:100%;margin-top:12px}.start-ul[data-v-bc17fac9]{margin-top:12px;font-size:var(--scalar-paragraph);line-height:1.5;padding-left:0;list-style:initial;display:flex;flex-flow:wrap;gap:24px}.start-ul li[data-v-bc17fac9]{margin:0;padding:0;list-style:none;width:calc(50% - 24px);color:var(--scalar-color-2)}.start-ul li[data-v-bc17fac9]:first-of-type{margin-top:0}.start-section[data-v-bc17fac9]{width:100%;margin-bottom:12px;display:flex;flex-flow:wrap}.start-section[data-v-bc17fac9]:last-of-type{margin-bottom:48px}.start-h2[data-v-bc17fac9]{background:var(--scalar-background-2);border-top-left-radius:var(--scalar-radius-lg);border-top-right-radius:var(--scalar-radius-lg);border:1px solid var(--scalar-border-color);color:var(--scalar-color-3);font-size:var(--scalar-mini);font-weight:var(--scalar-semibold);padding:9px;width:100%}.start-item[data-v-bc17fac9]{align-items:center;background:var(--scalar-background-2);border-right:1px solid var(--scalar-border-color);border-bottom:1px solid var(--scalar-border-color);color:var(--scalar-color-1);cursor:pointer;display:flex;flex:1;font-size:var(--scalar-mini);font-weight:var(--scalar-semibold);padding:9px;text-transform:capitalize;-webkit-user-select:none;user-select:none}.start-section-integrations .start-item[data-v-bc17fac9]:first-of-type{border-bottom-left-radius:var(--scalar-radius-lg);border-left:1px solid var(--scalar-border-color)}.start-section-integrations .start-item[data-v-bc17fac9]:last-of-type{border-bottom-right-radius:var(--scalar-radius-lg)}.start-section-colors .start-item[data-v-bc17fac9]{min-width:33.33%}.start-section-colors .start-item[data-v-bc17fac9]:nth-child(3n+2){border-left:1px solid var(--scalar-border-color)}.start-section-colors .start-item[data-v-bc17fac9]:last-of-type,.start-section-colors .start-item-active[data-v-bc17fac9]:last-of-type:before{border-radius:0 0 var(--scalar-radius-lg) var(--scalar-radius-lg)}.start-item[data-v-bc17fac9]:empty{pointer-events:none}.start-item svg[data-v-bc17fac9]{width:14px;height:14px;margin-right:6px}.start-item[data-v-bc17fac9]:hover{background:var(--scalar-background-3)}.start-item-active[data-v-bc17fac9]{z-index:10;position:relative;color:var(--scalar-color-1)}.start-item-active[data-v-bc17fac9]:before{border:1px solid var(--scalar-color-1);content:"";top:-1px;right:-1px;bottom:-1px;left:-1px;pointer-events:none;position:absolute}.start-section-color .start-item[data-v-bc17fac9]{text-transform:capitalize}.start-cta[data-v-bc17fac9]{display:flex;gap:12px;width:100%;margin-top:24px;margin-bottom:0}.start-row[data-v-bc17fac9]{width:100%;margin-top:12px;overflow:hidden}.start-hero-copy[data-v-bc17fac9]{background:var(--scalar-background-2);padding:12px;border-radius:var(--scalar-radius-lg)}.start-p-small[data-v-bc17fac9]{font-weight:var(--scalar-semibold);font-size:var(--scalar-mini);color:var(--scalar-color-2);margin-bottom:12px;line-height:1.4}.start-cta[data-v-bc17fac9]{margin-bottom:12px;width:fit-content;white-space:nowrap}.start-copy[data-v-bc17fac9]{padding:76px 48px 48px;display:flex;justify-content:center;align-items:center;flex-direction:column;text-align:center}.start-logo[data-v-bc17fac9]{color:var(--scalar-color-1);margin-bottom:24px;width:72px;aspect-ratio:1;position:relative;box-shadow:var(--scalar-shadow-2);border-radius:50%}.start-logo[data-v-bc17fac9]:before{content:"";width:300%;aspect-ratio:1;left:-100%;top:-100%;position:absolute;z-index:-1;border-radius:50%;background-size:24px 24px;box-shadow:inset 0 0 50px var(--scalar-background-1),inset 0 0 50px var(--scalar-background-1);background-image:linear-gradient(to right,var(--scalar-border-color) 1px,transparent 1px),linear-gradient(to bottom,var(--scalar-border-color) 1px,transparent 1px)}.start-logo svg[data-v-bc17fac9]{width:100%;height:auto;background:var(--scalar-background-1);padding:3px;border-radius:50%;position:relative}@media screen and (max-width: 600px){.start-section-colors .start-item[data-v-bc17fac9],.start-item[data-v-bc17fac9]{width:100%;border-radius:0;border-right:none;border-top:1px solid var(--scalar-border-color)}.start-item[data-v-bc17fac9]:empty{display:none}.start-h2[data-v-bc17fac9]{border-bottom:none}.start li[data-v-bc17fac9]{width:100%}.start-copy[data-v-bc17fac9]{padding:48px 0 24px}}@media screen and (max-width: 1000px){.start[data-v-bc17fac9]{padding:0;overflow:auto}}.references-mobile-header[data-v-6616d485]{display:none;align-items:center;height:100%;width:100%;max-width:100dvw;padding:0 8px;background:var(--scalar-background-1);border-bottom:1px solid var(--scalar-border-color)}.references-mobile-breadcrumbs[data-v-6616d485]{flex:1;min-width:0;font-size:var(--scalar-small);font-weight:var(--scalar-semibold);color:var(--scalar-color-1);overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.references-mobile-header-actions[data-v-6616d485]{display:flex;flex-direction:row;gap:4px;height:24px;align-items:center;padding-left:4px}@media (max-width: 1000px){.references-mobile-header[data-v-6616d485]{display:flex}}.sidebar-heading-type[data-v-522f945c]{display:inline-flex;align-items:center;gap:4px;overflow:hidden;line-height:14px;flex-shrink:0;text-transform:uppercase;color:var(--method-color, var(--scalar-color-1));font-size:10px;font-weight:var(--scalar-bold);font-family:var(--scalar-font-code);white-space:nowrap}.sidebar-heading[data-v-c3e6d407]{display:flex;gap:4px;color:var(--scalar-sidebar-color-2, var(--scalar-color-2));font-size:var(--scalar-small);font-weight:var(--scalar-sidebar-font-weight, var(--scalar-regular));word-break:break-word;line-height:1.385;max-width:100%;position:relative;cursor:pointer;border-radius:var(--scalar-radius);flex:1;padding-right:9px;-webkit-user-select:none;user-select:none}.sidebar-heading-link-method[data-v-c3e6d407]{margin:0}.sidebar-heading.deprecated .sidebar-heading-link-title[data-v-c3e6d407]{text-decoration:line-through}.sidebar-heading-link-title[data-v-c3e6d407]{margin:0}.sidebar-heading[data-v-c3e6d407]:hover{background:var( --scalar-sidebar-item-hover-background, var(--scalar-background-2) )}.sidebar-heading:hover .sidebar-heading-link-title[data-v-c3e6d407]{color:var(--scalar-sidebar-item-hover-color)}.sidebar-heading-link[data-v-c3e6d407]:focus-visible{outline:none}.sidebar-heading[data-v-c3e6d407]:has(>.sidebar-heading-link:focus-visible){z-index:1;outline:1px solid var(--scalar-color-accent)}.active_page.sidebar-heading[data-v-c3e6d407]:hover,.active_page.sidebar-heading[data-v-c3e6d407]{color:var(--scalar-sidebar-color-active, var(--scalar-color-accent));background:var( --scalar-sidebar-item-active-background, var(--scalar-background-accent) )}.active_page.sidebar-heading p[data-v-c3e6d407]{font-weight:var(--scalar-sidebar-font-weight-active, var(--scalar-semibold))}.active_page.sidebar-heading:hover .sidebar-heading-link-title[data-v-c3e6d407]{color:var(--scalar-sidebar-color-active, var(--scalar-color-accent))}.sidebar-indent-nested .sidebar-indent-nested .sidebar-heading[data-v-c3e6d407]:before{content:"";position:absolute;top:0;left:calc((var(--scalar-sidebar-level) * 15.5px));width:var(--scalar-border-width);height:100%;background:var(--scalar-sidebar-indent-border)}.sidebar-indent-nested .sidebar-indent-nested .sidebar-heading[data-v-c3e6d407]:hover:before{background:var(--scalar-sidebar-indent-border-hover)}.sidebar-indent-nested .sidebar-indent-nested .active_page.sidebar-heading[data-v-c3e6d407]:before{background:var(--scalar-sidebar-indent-border-active)}.sidebar-heading-link[data-v-c3e6d407]{text-decoration:none;color:inherit;padding:6px 0;display:flex;flex:1;justify-content:space-between;gap:2px}.sidebar-heading p[data-v-c3e6d407]{height:fit-content;display:flex;align-items:center;font-weight:var(--scalar-sidebar-font-weight, var(--scalar-regular))}.sidebar-heading p[data-v-c3e6d407]:empty{display:none}.link-icon[data-v-c3e6d407]{position:relative;left:4px}.sidebar-icon[data-v-c3e6d407]{display:flex;align-items:center;justify-content:center;margin-right:6px;width:13px;height:13px}.sidebar-icon>svg[data-v-c3e6d407]{width:13px;height:13px}.sidebar-group-item[data-v-c3e6d407]{position:relative}.sidebar-heading-chevron[data-v-c3e6d407]{margin:6px 0;width:16px}.sidebar-heading-chevron .toggle-nested-icon[data-v-c3e6d407]:focus-visible{outline:none}.sidebar-heading[data-v-c3e6d407]:has(.sidebar-heading-chevron .toggle-nested-icon:focus-visible){outline:none;box-shadow:inset 0 0 0 1px var(--scalar-color-accent)}.toggle-nested-icon[data-v-c3e6d407]{color:var(--scalar-color-3);width:16px;height:16px;display:flex;align-items:center;justify-content:center}.active_page .toggle-nested-icon[data-v-c3e6d407]{color:var(--scalar-sidebar-color-active, var(--scalar-color-accent))}.toggle-nested-icon[data-v-c3e6d407]:hover,.toggle-nested-icon[data-v-c3e6d407]:focus-visible{color:currentColor}.action-menu[data-v-c3e6d407]{position:absolute;top:5px;right:5px;display:flex;gap:6px}.action-menu[data-v-c3e6d407] .button-wrapper button{opacity:0;width:20px;height:20px;padding:4px}.action-menu[data-v-c3e6d407]:hover .button-wrapper button,.action-menu[data-v-c3e6d407] .button-wrapper button:hover,.sidebar-heading:hover~.action-menu[data-v-c3e6d407] .button-wrapper button,.action-menu[data-v-c3e6d407] .button-wrapper button[aria-expanded=true]{opacity:1}.sidebar-heading[data-v-c3e6d407]:has(~.action-menu:hover){color:var(--scalar-sidebar-color-1, var(--scalar-color-1));background:var( --scalar-sidebar-item-hover-background, var(--scalar-background-2) )}.sidebar-group-item__folder[data-v-c3e6d407]{color:var(--scalar-sidebar-color-2, var(--scalar-color-2));text-transform:var(--scalar-tag-text-transform, initial)}.sidebar-group-item__folder[data-v-c3e6d407]:has(~ul .sidebar-heading.active_page){--scalar-sidebar-font-weight: var(--scalar-sidebar-font-weight-active);color:var(--scalar-sidebar-color-1, var(--scalar-color-1));font-weight:var(--scalar-sidebar-font-weight-active, var(--scalar-semibold))}.sidebar-group[data-v-a0601651]{list-style:none;width:100%;margin:0;padding:0}.sidebar-indent-nested[data-v-a0601651] .sidebar-heading{padding-left:calc((var(--scalar-sidebar-level) * var(--scalar-sidebar-indent-base)) + 8px)!important}.sidebar-indent-nested[data-v-a0601651] .sidebar-heading .toggle-nested-icon{left:calc((var(--scalar-sidebar-level) * var(--scalar-sidebar-indent-base)) + 2px)!important}:where(.sidebar-indent-nested[data-v-a0601651]) .sidebar-heading{color:var(--scalar-sidebar-color-1, var(--scalar-color-1))}:where(.sidebar-indent-nested[data-v-a0601651]) :where(.sidebar-indent-nested) .sidebar-heading{color:var(--scalar-sidebar-color-2, var(--scalar-color-2))}.sidebar[data-v-7ed79e6b]{--scalar-sidebar-indent-base: 20px;--scalar-sidebar-font-weight-active: var(--scalar-semibold);--scalar-sidebar-font-weight: var(--scalar-regular)}.sidebar[data-v-7ed79e6b]{flex:1;height:100%;display:flex;flex-direction:column;border-right:var(--scalar-border-width) solid var(--scalar-sidebar-border-color, var(--scalar-border-color));background:var(--scalar-sidebar-background-1, var(--scalar-background-1));--scalar-sidebar-level: 0}.sidebar-pages[data-v-7ed79e6b]{flex:1;padding:6px 12px}@media (max-width: 1000px){.sidebar[data-v-7ed79e6b]{min-height:0;border-right:none}.sidebar-pages[data-v-7ed79e6b]{padding-top:12px}}.sidebar-group-title[data-v-7ed79e6b]{color:var(--scalar-sidebar-color-1);font-size:var(--scalar-mini);padding:12px 6px 6px;font-weight:var(--scalar-semibold);text-transform:uppercase;word-break:break-word;line-height:1.385}.sidebar-group-item+.sidebar-group-title[data-v-7ed79e6b]{border-top:var(--scalar-border-width) solid var(--scalar-sidebar-border-color);margin-top:9px}a[data-v-d38e7ee7]{text-decoration:none}.ref-search-container[data-v-d38e7ee7]{display:flex;flex-direction:column;padding-bottom:0}.ref-search-results[data-v-d38e7ee7]{padding:0 4px 4px}.ref-search-meta[data-v-d38e7ee7]{background:var(--scalar-background-1);border-bottom-left-radius:var(--scalar-radius-lg);border-bottom-right-radius:var(--scalar-radius-lg);padding:6px 12px;font-size:var(--scalar-font-size-4);color:var(--scalar-color-3);font-weight:var(--scalar-semibold);display:flex;gap:12px;border-top:var(--scalar-border-width) solid var(--scalar-border-color)}.deprecated[data-v-d38e7ee7]{text-decoration:line-through}.section-flare[data-v-2a9c8c02]{top:0;right:0;pointer-events:none}.introduction-description-heading[data-v-d2a06436]{scroll-margin-top:64px}.introduction-description[data-v-d2a06436]{display:flex;flex-direction:column;margin-top:24px}.references-classic .introduction-description[data-v-d2a06436] img{max-width:720px}.section-container[data-v-20a1472a]{position:relative;padding:0 60px;width:100%;border-top:var(--scalar-border-width) solid var(--scalar-border-color)}.section-container[data-v-20a1472a]:has(.introduction-section){border-top:none}@container narrow-references-container (max-width: 900px){.section-container[data-v-20a1472a]{padding:0}}.section[data-v-393971a5]{position:relative;display:flex;flex-direction:column;max-width:var(--refs-content-max-width);margin:auto;padding:90px 0;scroll-margin-top:var(--refs-header-height)}.section[data-v-393971a5]:has(~div.contents){border-bottom:var(--scalar-border-width) solid var(--scalar-border-color)}.references-classic .section[data-v-393971a5]{padding:48px 0;gap:24px}@container narrow-references-container (max-width: 900px){.references-classic .section[data-v-393971a5],.section[data-v-393971a5]{padding:48px 24px}}.section[data-v-393971a5]:not(:last-of-type){border-bottom:var(--scalar-border-width) solid var(--scalar-border-color)}.loading[data-v-8e0226d7]{background:var(--scalar-background-3);animation:loading-skeleton-8e0226d7 1.5s infinite alternate;border-radius:var(--scalar-radius-lg);min-height:1.6em;margin:.6em 0;max-width:100%}.loading[data-v-8e0226d7]:first-of-type{min-height:3em;margin-bottom:24px;margin-top:0}.loading[data-v-8e0226d7]:last-of-type{width:60%}.loading.single-line[data-v-8e0226d7]{min-height:3em;margin:.6em 0;max-width:80%}@keyframes loading-skeleton-8e0226d7{0%{opacity:1}to{opacity:.33}}@container narrow-references-container (max-width: 900px){.section-content--with-columns[data-v-9735459e]{flex-direction:column;gap:24px}}.badge[data-v-3dedb7e4]{color:var(--badge-text-color, var(--scalar-color-2));font-size:var(--scalar-mini);background:var(--badge-background-color, var(--scalar-background-2));border:var(--scalar-border-width) solid var(--badge-border-color, var(--scalar-border-color));padding:2px 6px;border-radius:12px;display:inline-block}.badge.text-orange[data-v-3dedb7e4]{background:color-mix(in srgb,var(--scalar-color-orange),transparent 90%);border:transparent}.badge.text-yellow[data-v-3dedb7e4]{background:color-mix(in srgb,var(--scalar-color-yellow),transparent 90%);border:transparent}.badge.text-red[data-v-3dedb7e4]{background:color-mix(in srgb,var(--scalar-color-red),transparent 90%);border:transparent}.badge.text-purple[data-v-3dedb7e4]{background:color-mix(in srgb,var(--scalar-color-purple),transparent 90%);border:transparent}.badge.text-green[data-v-3dedb7e4]{background:color-mix(in srgb,var(--scalar-color-green),transparent 90%);border:transparent}.section-header-wrapper[data-v-465a7a78]{grid-template-columns:1fr;display:grid}@media (min-width:1200px){.section-header-wrapper[data-v-465a7a78]{grid-template-columns:repeat(2,1fr)}}.section-header[data-v-465a7a78]{font-size:var(--font-size,var(--scalar-heading-1));font-weight:var(--font-weight,var(--scalar-bold));color:var(--scalar-color-1);word-wrap:break-word;margin-top:0;margin-bottom:12px;line-height:1.45}.section-header.tight[data-v-465a7a78]{margin-bottom:6px}.section-header.loading[data-v-465a7a78]{width:80%}.section-header-label[data-v-f1ac6c38]{display:inline}.icons-only[data-v-0939d4d9] span{display:none}.section-columns[data-v-8b9602bf]{display:flex;gap:48px}@container narrow-references-container (max-width: 900px){.section-columns[data-v-8b9602bf]{flex-direction:column;gap:24px}}.section-column[data-v-699c28e3]{flex:1;min-width:0}@container narrow-references-container (max-width: 900px){.section-column[data-v-699c28e3]:nth-of-type(2){padding-top:0}}@layer properties{@supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))){[data-v-876232c8],[data-v-876232c8]:before,[data-v-876232c8]:after,[data-v-876232c8]::backdrop{--tw-outline-style:solid}}}.download-container[data-v-876232c8]{z-index:1;flex-direction:column;gap:16px;width:fit-content;margin:0 .5px 8px;display:flex;position:relative}.download-container[data-v-876232c8]:has(:focus-visible):before,.download-container.download-both[data-v-876232c8]:hover:before{content:"";border-radius:var(--scalar-radius-lg);width:calc(100% + 24px);height:90px;box-shadow:var(--scalar-shadow-2);pointer-events:none;background:var(--scalar-background-1);position:absolute;top:-11px;left:-12px}.download-button[data-v-876232c8]{color:var(--scalar-link-color);cursor:pointer;outline:none;justify-content:center;align-items:center;gap:4px;height:fit-content;padding:0;display:flex;position:relative;white-space:nowrap!important}.download-button[data-v-876232c8]:before{border-radius:var(--scalar-radius);content:"";width:calc(100% + 18px);height:calc(100% + 16px);position:absolute;top:-8px;left:-9px}.download-button[data-v-876232c8]:last-of-type:before{width:calc(100% + 15px)}.download-button[data-v-876232c8]:hover:before{background:var(--scalar-background-2);border:var(--scalar-border-width)solid var(--scalar-border-color)}.download-button[data-v-876232c8]:focus-visible:before{background:var(--scalar-background-2);border:var(--scalar-border-width)solid var(--scalar-border-color);outline-style:var(--tw-outline-style);outline-width:1px}.download-button span[data-v-876232c8]{--font-color:var(--scalar-link-color,var(--scalar-color-accent));--font-visited:var(--scalar-link-color-visited,var(--scalar-color-2));-webkit-text-decoration:var(--scalar-text-decoration);text-decoration:var(--scalar-text-decoration);color:var(--font-color);font-weight:var(--scalar-link-font-weight,var(--scalar-semibold));text-underline-offset:.25rem;text-decoration-thickness:1px;-webkit-text-decoration-color:var(--font-color);text-decoration-color:var(--font-color)}@supports (color:color-mix(in lab,red,red)){.download-button span[data-v-876232c8]{-webkit-text-decoration-color:color-mix(in srgb,var(--font-color)30%,transparent);text-decoration-color:color-mix(in srgb,var(--font-color)30%,transparent)}}.download-button span[data-v-876232c8]{z-index:1;align-items:center;gap:6px;line-height:1.625;display:flex}.download-button:hover span[data-v-876232c8]{color:var(--scalar-link-color-hover,var(--scalar-color-accent));-webkit-text-decoration:var(--scalar-text-decoration-hover);text-decoration:var(--scalar-text-decoration-hover)}.download-button[data-v-876232c8]:nth-of-type(2){clip:rect(0,0,0,0);white-space:nowrap;border-width:0;width:1px;height:1px;margin:-1px;padding:0;position:absolute;overflow:hidden}.download-container:has(:focus-visible) .download-button[data-v-876232c8]:nth-of-type(2),.download-container:hover .download-button[data-v-876232c8]:nth-of-type(2){clip:auto;white-space:normal;width:auto;height:auto;margin:0;padding:0;position:absolute;top:42px;overflow:visible}.extension[data-v-876232c8]{z-index:1;background:var(--scalar-link-color,var(--scalar-color-accent));color:var(--scalar-background-1)}.download-container:has(:focus-visible) .extension[data-v-876232c8],.download-container:hover .extension[data-v-876232c8]{opacity:1}.sticky-cards[data-v-a9f2213d]{display:flex;flex-direction:column;position:sticky;top:calc(var(--refs-header-height) + 24px)}.client-libraries-content[data-v-691dcb64]{container:client-libraries-content / inline-size;display:flex;justify-content:center;overflow:hidden;padding:0 12px;background-color:var(--scalar-background-1);border-left:var(--scalar-border-width) solid var(--scalar-border-color);border-right:var(--scalar-border-width) solid var(--scalar-border-color)}.client-libraries[data-v-691dcb64]{display:flex;align-items:center;justify-content:center;width:100%;position:relative;cursor:pointer;white-space:nowrap;padding:8px 2px;gap:6px;color:var(--scalar-color-3);border-bottom:1px solid transparent;-webkit-user-select:none;user-select:none}.client-libraries[data-v-691dcb64]:not(.client-libraries__active):hover:before{content:"";position:absolute;width:calc(100% - 4px);height:calc(100% - 4px);background:var(--scalar-background-2);left:2px;top:2px;z-index:0;border-radius:var(--scalar-radius)}.client-libraries[data-v-691dcb64]:active{color:var(--scalar-color-1)}.client-libraries[data-v-691dcb64]:focus-visible{outline:none;box-shadow:inset 0 0 0 1px var(--scalar-color-accent)}@media screen and (max-width: 450px){.client-libraries[data-v-691dcb64]:nth-of-type(4),.client-libraries[data-v-691dcb64]:nth-of-type(5){display:none}}.client-libraries-icon[data-v-691dcb64]{max-width:14px;max-height:14px;min-width:14px;width:100%;aspect-ratio:1;display:flex;align-items:center;justify-content:center;position:relative;box-sizing:border-box;color:currentColor}.client-libraries-icon__more svg[data-v-691dcb64]{height:initial}@container client-libraries-content (width < 400px){.client-libraries__select[data-v-691dcb64]{width:fit-content}.client-libraries__select .client-libraries-icon__more+span[data-v-691dcb64]{display:none}}@container client-libraries-content (width < 380px){.client-libraries[data-v-691dcb64]{width:100%}.client-libraries span[data-v-691dcb64]{display:none}}.client-libraries__active[data-v-691dcb64]{color:var(--scalar-color-1);border-bottom:1px solid var(--scalar-color-1)}@keyframes codeloader-691dcb64{0%{transform:rotate(0)}to{transform:rotate(1turn)}}.client-libraries .client-libraries-text[data-v-691dcb64]{font-size:var(--scalar-small);position:relative;display:flex;align-items:center}.client-libraries__active .client-libraries-text[data-v-691dcb64]{color:var(--scalar-color-1);font-weight:var(--scalar-semibold)}@media screen and (max-width: 600px){.references-classic .client-libraries[data-v-691dcb64]{flex-direction:column}}.selected-client[data-v-8021c330]{color:var(--scalar-color-1);font-size:var(--scalar-small);font-family:var(--scalar-font-code);padding:9px 12px;border-top:none;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;background:var(--scalar-background-1);border:var(--scalar-border-width) solid var(--scalar-border-color);border-bottom-left-radius:var(--scalar-radius-lg);border-bottom-right-radius:var(--scalar-radius-lg);min-height:fit-content}.client-libraries-heading[data-v-8021c330]{font-size:var(--scalar-small);font-weight:var(--scalar-font-medium);color:var(--scalar-color-1);padding:9px 12px;background-color:var(--scalar-background-2);display:flex;align-items:center;max-height:32px;border:var(--scalar-border-width) solid var(--scalar-border-color);border-top-left-radius:var(--scalar-radius-lg);border-top-right-radius:var(--scalar-radius-lg)}[data-v-8021c330] .scalar-codeblock-pre .hljs{margin-top:8px}.render-loading[data-v-e808708e]{height:calc(var(--full-height) - var(--refs-header-height));display:flex;align-items:center;justify-content:center}.introduction-card[data-v-e808708e]{display:flex;flex-direction:column}.introduction-card-item[data-v-e808708e]{display:flex;margin-bottom:12px;flex-direction:column;justify-content:start}.introduction-card-item[data-v-e808708e]:has(.description) .server-form-container{border-bottom-left-radius:0;border-bottom-right-radius:0}.introduction-card-item[data-v-e808708e] .request-item{border-bottom:0}.introduction-card-title[data-v-e808708e]{font-weight:var(--scalar-semibold);font-size:var(--scalar-mini);color:var(--scalar-color-3)}.introduction-card-row[data-v-e808708e]{gap:24px}@media (min-width: 600px){.introduction-card-row[data-v-e808708e]{flex-flow:row wrap}}.introduction-card-row[data-v-e808708e]>*{flex:1}@media (min-width: 600px){.introduction-card-row[data-v-e808708e]>*{min-width:min-content}}@media (max-width: 600px){.introduction-card-row[data-v-e808708e]>*{max-width:100%}}@container (max-width: 900px){.introduction-card-row[data-v-e808708e]{flex-direction:column;align-items:stretch;gap:0px}}.introduction-card[data-v-e808708e] .security-scheme-label{text-transform:uppercase;font-weight:var(--scalar-semibold)}.references-classic .introduction-card-row[data-v-e808708e] .scalar-card:nth-of-type(2) .scalar-card-header{display:none}.references-classic .introduction-card-row[data-v-e808708e] .scalar-card:nth-of-type(2) .scalar-card-header.scalar-card--borderless+.scalar-card-content{margin-top:0}.operation-path[data-v-ec6c8861]{overflow:hidden;word-wrap:break-word;font-weight:var(--scalar-semibold);line-break:anywhere}.deprecated[data-v-ec6c8861]{text-decoration:line-through}.screenreader-only[data-v-df2e1026]{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.schema-type-icon[data-v-77d7b9bf]{color:var(--scalar-color-1);display:none}.schema-type[data-v-77d7b9bf]{font-family:var(--scalar-font-code);color:var(--scalar-color-1)}.error[data-v-227f4a34]{background-color:var(--scalar-color-red)}.schema-card[data-v-227f4a34]{z-index:0;font-size:var(--scalar-font-size-4);color:var(--scalar-color-1)}.schema-card-title[data-v-227f4a34]{height:var(--schema-title-height);padding:6px 8px;display:flex;align-items:center;gap:4px;color:var(--scalar-color-2);font-weight:var(--scalar-semibold);font-size:var(--scalar-mini);border-bottom:var(--scalar-border-width) solid transparent}button.schema-card-title[data-v-227f4a34]{cursor:pointer}button.schema-card-title[data-v-227f4a34]:hover{color:var(--scalar-color-1)}.schema-card-title-icon--open[data-v-227f4a34]{transform:rotate(45deg)}.schema-properties-open>.schema-card-title[data-v-227f4a34]{border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom:var(--scalar-border-width) solid var(--scalar-border-color)}.schema-properties-open>.schema-properties[data-v-227f4a34]{width:fit-content}.schema-card-description[data-v-227f4a34]{color:var(--scalar-color-2)}.schema-card-description+.schema-properties[data-v-227f4a34]{width:fit-content}.schema-card-description+.schema-properties[data-v-227f4a34]{margin-top:8px}.schema-properties-open.schema-properties[data-v-227f4a34],.schema-properties-open>.schema-card--open[data-v-227f4a34]{width:100%}.schema-properties[data-v-227f4a34]{display:flex;flex-direction:column;border:var(--scalar-border-width) solid var(--scalar-border-color);border-radius:var(--scalar-radius-lg);width:fit-content}.schema-properties-name[data-v-227f4a34]{width:100%}.schema-properties .schema-properties[data-v-227f4a34]{border-radius:13.5px}.schema-properties .schema-properties.schema-properties-open[data-v-227f4a34]{border-radius:var(--scalar-radius-lg)}.schema-properties-open[data-v-227f4a34]{width:100%}.schema-card--compact[data-v-227f4a34]{align-self:flex-start}.schema-card--compact.schema-card--open[data-v-227f4a34]{align-self:initial}.schema-card-title--compact[data-v-227f4a34]{color:var(--scalar-color-2);padding:6px 10px 6px 8px;height:auto;border-bottom:none}.schema-card-title--compact>.schema-card-title-icon[data-v-227f4a34]{margin:0}.schema-card-title--compact>.schema-card-title-icon--open[data-v-227f4a34]{transform:rotate(45deg)}.schema-properties-open>.schema-card-title--compact[data-v-227f4a34]{position:static}.property--level-0>.schema-properties>.schema-card--level-0>.schema-properties[data-v-227f4a34]{border:none}.property--level-0 .schema-card--level-0:not(.schema-card--compact) .property--level-1[data-v-227f4a34]{padding:0 0 8px}:not(.composition-panel)>.schema-card--compact.schema-card--level-0>.schema-properties[data-v-227f4a34]{border:none}[data-v-227f4a34] .schema-card-description p{font-size:var(--scalar-small, var(--scalar-paragraph));color:var(--scalar-color-2);line-height:1.5;display:block;margin-bottom:6px}.children .schema-card-description[data-v-227f4a34]:first-of-type{padding-top:0}.property-enum-value[data-v-7d21d96b]{color:var(--scalar-color-3);line-height:1.5;word-break:break-word;display:flex;align-items:stretch;position:relative}.property-enum-value-content[data-v-7d21d96b]{display:flex;flex-direction:column;padding:3px 0}.property-enum-value-label[data-v-7d21d96b]{display:flex;font-family:var(--scalar-font-code);color:var(--scalar-color-1);position:relative}.property-enum-value:last-of-type .property-enum-value-label[data-v-7d21d96b]{padding-bottom:0}.property-enum-value[data-v-7d21d96b]:before{content:"";margin-right:12px;width:var(--scalar-border-width);display:block;background:currentColor;color:var(--scalar-color-3)}.property-enum-value[data-v-7d21d96b]:last-of-type:before,.property-enum-values:has(.enum-toggle-button) .property-enum-value[data-v-7d21d96b]:nth-last-child(2):before{height:14px}.property-enum-value[data-v-7d21d96b]:not(:last-child):before{content:"";margin-right:12px;width:var(--scalar-border-width);display:block;background:currentColor;color:var(--scalar-color-3)}.property-enum-value-label[data-v-7d21d96b]:after{content:"";position:absolute;top:50%;left:-12px;width:8px;height:var(--scalar-border-width);background:var(--scalar-color-2)}.property-enum-value[data-v-7d21d96b]:last-of-type:after{bottom:0;height:50%;background:var(--scalar-background-1);border-top:var(--scalar-border-width) solid currentColor}.property-enum-value-description[data-v-7d21d96b]{color:var(--scalar-color-3)}.property-heading:empty+.property-description[data-v-bf2bedb9]:last-of-type,.property-description[data-v-bf2bedb9]:first-of-type:last-of-type{margin-top:0}.property-list[data-v-bf2bedb9]{border:var(--scalar-border-width) solid var(--scalar-border-color);border-radius:var(--scalar-radius);margin-top:10px}.property-list .property[data-v-bf2bedb9]:last-of-type{padding-bottom:10px}.property-enum-values[data-v-bf2bedb9]{font-size:var(--scalar-font-size-3);list-style:none;margin-top:8px;padding-left:2px}.enum-toggle-button[data-v-bf2bedb9]:hover{color:var(--scalar-color-1)}.property-detail[data-v-827ea49d]{display:inline-flex}.property-detail+.property-detail[data-v-827ea49d]:before{display:block;content:"·";margin:0 .5ch}.property-detail-truncate[data-v-827ea49d]{overflow:hidden}.property-detail-truncate>.property-detail-value[data-v-827ea49d]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.property-detail-prefix[data-v-827ea49d]{color:var(--scalar-color-2)}code.property-detail-value[data-v-827ea49d]{font-family:var(--scalar-font-code);font-size:var(--scalar-font-size-3);color:var(--scalar-color-2);background:var(--scalar-background-3);padding:0 4px;border:.5px solid var(--scalar-border-color);border-radius:var(--scalar-radius)}.property-example[data-v-3f177f42]{display:flex;flex-direction:column;font-size:var(--scalar-mini);position:relative}.property-example[data-v-3f177f42]:hover:before{content:"";position:absolute;top:0;left:0;width:100%;height:20px;border-radius:var(--scalar-radius)}.property-example:hover .property-example-label span[data-v-3f177f42]{color:var(--scalar-color-1)}.property-example-label span[data-v-3f177f42]{color:var(--scalar-color-3);position:relative;border-bottom:var(--scalar-border-width) dotted currentColor}.property-example-value[data-v-3f177f42]{font-family:var(--scalar-font-code);display:flex;gap:8px;align-items:center;width:100%;padding:6px}.property-example-value span[data-v-3f177f42]{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.property-example-value[data-v-3f177f42] svg{color:var(--scalar-color-3)}.property-example-value[data-v-3f177f42]:hover svg{color:var(--scalar-color-1)}.property-example-value[data-v-3f177f42]{background:var(--scalar-background-2);border:var(--scalar-border-width) solid var(--scalar-border-color);border-radius:var(--scalar-radius)}.property-example-value-list[data-v-3f177f42]{position:absolute;top:18px;left:50%;transform:translate3d(-50%,0,0);overflow:auto;background-color:var(--scalar-background-1);box-shadow:var(--scalar-shadow-1);border-radius:var(--scalar-radius-lg);border:var(--scalar-border-width) solid var(--scalar-border-color);padding:9px;min-width:200px;max-width:300px;flex-direction:column;gap:3px;display:none;z-index:10}.property-example:hover .property-example-value-list[data-v-3f177f42],.property-example:focus-within .property-example-value-list[data-v-3f177f42]{display:flex}.property-heading[data-v-fe194f0c]{display:flex;flex-wrap:wrap;align-items:baseline;row-gap:9px;white-space:nowrap}.property-heading[data-v-fe194f0c]:has(+.children),.property-heading[data-v-fe194f0c]:has(+.property-rule){margin-bottom:9px}.property-heading[data-v-fe194f0c]>*{margin-right:9px}.property-heading[data-v-fe194f0c]:last-child{margin-right:0}.property-heading>.property-detail[data-v-fe194f0c]:not(:last-of-type){margin-right:0}.property-name[data-v-fe194f0c]{font-family:var(--scalar-font-code);font-weight:var(--scalar-semibold);font-size:var(--scalar-font-size-3);white-space:normal;overflow-wrap:break-word}.property-additional[data-v-fe194f0c]{font-family:var(--scalar-font-code)}.property-required[data-v-fe194f0c],.property-optional[data-v-fe194f0c]{color:var(--scalar-color-2)}.property-required[data-v-fe194f0c]{font-size:var(--scalar-mini);color:var(--scalar-color-orange)}.property-read-only[data-v-fe194f0c]{font-size:var(--scalar-mini);color:var(--scalar-color-blue)}.property-write-only[data-v-fe194f0c]{font-size:var(--scalar-mini);color:var(--scalar-color-green)}.property-discriminator[data-v-fe194f0c]{font-size:var(--scalar-mini);color:var(--scalar-color-purple)}.property-detail[data-v-fe194f0c]{font-size:var(--scalar-mini);color:var(--scalar-color-2);display:flex;align-items:center;min-width:0}.property-const[data-v-fe194f0c]{color:var(--scalar-color-1)}.deprecated[data-v-fe194f0c]{text-decoration:line-through}.property[data-v-705ef8bd]{color:var(--scalar-color-1);display:flex;flex-direction:column;padding:8px;font-size:var(--scalar-small);position:relative}.property.property--level-0[data-v-705ef8bd]:has(>.property-rule>.schema-card>.schema-properties.schema-properties-open>ul>li.property){padding-top:0}.property[data-v-705ef8bd]:hover{z-index:1}.property--compact.property--level-0[data-v-705ef8bd],.property--compact.property--level-1[data-v-705ef8bd]{padding:8px 0}.composition-panel .property.property.property.property--level-0[data-v-705ef8bd]{padding:0}.property--compact.property--level-0 .composition-panel .property--compact.property--level-1[data-v-705ef8bd]{padding:8px}.property[data-v-705ef8bd]:has(>.property-rule:nth-of-type(1)):not(.property--compact){padding-top:8px;padding-bottom:8px}.property--deprecated[data-v-705ef8bd]{background:repeating-linear-gradient(-45deg,var(--scalar-background-2) 0,var(--scalar-background-2) 2px,transparent 2px,transparent 5px);background-size:100%}.property--deprecated[data-v-705ef8bd]>*{opacity:.75}.property-description[data-v-705ef8bd]{margin-top:6px;line-height:1.4;font-size:var(--scalar-small)}.property-description[data-v-705ef8bd]:has(+.property-rule){margin-bottom:9px}[data-v-705ef8bd] .property-description *{color:var(--scalar-color-2)!important}.property[data-v-705ef8bd]:not(:last-of-type){border-bottom:var(--scalar-border-width) solid var(--scalar-border-color)}.property-description+.children[data-v-705ef8bd],.children+.property-rule[data-v-705ef8bd]{margin-top:9px}.children[data-v-705ef8bd]{display:flex;flex-direction:column}.children .property--compact.property--level-1[data-v-705ef8bd]{padding:12px}.property-example-value[data-v-705ef8bd]{all:unset;font-family:var(--scalar-font-code);padding:6px;border-top:var(--scalar-border-width) solid var(--scalar-border-color)}.property-rule[data-v-705ef8bd]{border-radius:var(--scalar-radius-lg);display:flex;flex-direction:column}.property-rule[data-v-705ef8bd] .composition-panel .schema-card .schema-properties.schema-properties-open{border-top-left-radius:0;border-top-right-radius:0}.property-example[data-v-705ef8bd]{background:transparent;border:none;display:flex;flex-direction:row;gap:8px}.property-example-label[data-v-705ef8bd],.property-example-value[data-v-705ef8bd]{padding:3px 0 0}.property-example-value[data-v-705ef8bd]{background:var(--scalar-background-2);border-top:0;border-radius:var(--scalar-radius);padding:3px 4px}.property-name[data-v-705ef8bd]{font-family:var(--scalar-font-code);font-weight:var(--scalar-semibold)}.property-name-additional-properties[data-v-705ef8bd]:before,.property-name-pattern-properties[data-v-705ef8bd]:before{text-transform:uppercase;font-size:var(--scalar-micro);display:inline-block;padding:2px 4px;border-radius:var(--scalar-radius);color:var(--scalar-color-1);border:1px solid var(--scalar-border-color);background-color:var(--scalar-background-2);margin-right:4px}.property-name-pattern-properties[data-v-705ef8bd]:before{content:"regex"}.property-name-additional-properties[data-v-705ef8bd]:before{content:"unknown"}.headers-card[data-v-96f30d93]{z-index:0;margin-top:12px;margin-bottom:6px;position:relative;font-size:var(--scalar-font-size-4);color:var(--scalar-color-1);align-self:flex-start}.headers-card.headers-card--open[data-v-96f30d93]{align-self:initial}.headers-card-title[data-v-96f30d93]{padding:6px 10px;display:flex;align-items:center;gap:4px;color:var(--scalar-color-3);font-weight:var(--scalar-semibold);font-size:var(--scalar-micro);border-radius:13.5px}button.headers-card-title[data-v-96f30d93]{cursor:pointer}button.headers-card-title[data-v-96f30d93]:hover{color:var(--scalar-color-1)}.headers-card-title-icon--open[data-v-96f30d93]{transform:rotate(45deg)}.headers-properties[data-v-96f30d93]{display:flex;flex-direction:column;border:var(--scalar-border-width) solid var(--scalar-border-color);border-radius:13.5px;width:fit-content}.headers-properties-open>.headers-card-title[data-v-96f30d93]{border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom:var(--scalar-border-width) solid var(--scalar-border-color)}.headers-properties-open[data-v-96f30d93]{border-radius:var(--scalar-radius-lg);width:100%}.headers-card .property[data-v-96f30d93]:last-of-type{padding-bottom:10px}.headers-card-title>.headers-card-title-icon[data-v-96f30d93]{width:10px;height:10px;margin:0}.headers-card-title>.headers-card-title-icon--open[data-v-96f30d93]{transform:rotate(45deg)}.parameter-item[data-v-f353e243]{display:flex;flex-direction:column;border-top:var(--scalar-border-width) solid var(--scalar-border-color)}.parameter-item:last-of-type .parameter-schema[data-v-f353e243]{padding-bottom:0}.parameter-item-container[data-v-f353e243]{padding:0}.parameter-item-headers[data-v-f353e243]{border:var(--scalar-border-width) solid var(--scalar-border-color)}.parameter-item-name[data-v-f353e243]{margin-right:6px;font-weight:var(--scalar-semibold);font-size:var(--scalar-font-size-3);font-family:var(--scalar-font-code);color:var(--scalar-color-1);position:relative}.parameter-item-type[data-v-f353e243]{font-size:var(--scalar-mini);color:var(--scalar-color-2);margin-right:6px;line-height:1.4;white-space:nowrap;text-overflow:ellipsis;width:100%;overflow:hidden}.parameter-item-trigger-open .parameter-item-type[data-v-f353e243]{white-space:normal}.parameter-item-trigger+.parameter-item-container[data-v-f353e243] .property--level-0>.property-heading .property-detail-value{font-size:var(--scalar-micro)}.parameter-item-required-optional[data-v-f353e243]{color:var(--scalar-color-2);font-weight:var(--scalar-semibold);margin-right:6px;position:relative}.parameter-item--required[data-v-f353e243]{text-transform:uppercase;font-size:var(--scalar-micro);font-weight:var(--scalar-semibold);color:var(--scalar-color-orange)}.parameter-item-description[data-v-f353e243]{margin-top:3px!important;font-size:var(--scalar-small);color:var(--scalar-color-2);line-height:1.4}.parameter-item-description[data-v-f353e243] p{margin-top:4px;font-size:var(--scalar-small);color:var(--scalar-color-2);line-height:1.4}.parameter-schema[data-v-f353e243]{padding-bottom:9px;margin-top:3px}.parameter-item-trigger[data-v-f353e243]{display:flex;align-items:baseline;padding:12px 0;cursor:pointer;outline:none;text-align:left}.parameter-item-trigger-open[data-v-f353e243]{padding-bottom:0}.parameter-item-trigger[data-v-f353e243]:after{content:"";position:absolute;height:10px;width:100%;bottom:0}.parameter-item-icon[data-v-f353e243]{color:var(--scalar-color-3);left:-19px;top:50%;translate:0 -50%;position:absolute}.parameter-item-trigger:hover .parameter-item-icon[data-v-f353e243],.parameter-item-trigger:focus-visible .parameter-item-icon[data-v-f353e243]{color:var(--scalar-color-1)}.parameter-item-trigger:focus-visible .parameter-item-icon[data-v-f353e243]{outline:1px solid var(--scalar-color-accent);outline-offset:2px;border-radius:var(--scalar-radius)}.parameter-list[data-v-d28c9986]{margin-top:24px}.parameter-list-title[data-v-d28c9986]{font-size:var(--scalar-font-size-2);font-weight:var(--scalar-semibold);color:var(--scalar-color-1);line-height:1.45;margin-top:12px;margin-bottom:12px}.parameter-list-items[data-v-d28c9986]{list-style:none;padding:0;margin:0 0 12px;font-size:var(--scalar-small)}.request-body[data-v-940125b5]{margin-top:24px}.request-body-header[data-v-940125b5]{display:flex;align-items:center;justify-content:space-between;padding-bottom:12px;border-bottom:var(--scalar-border-width) solid var(--scalar-border-color);flex-flow:wrap}.request-body-title[data-v-940125b5]{display:flex;align-items:center;gap:8px;font-size:var(--scalar-font-size-2);font-weight:var(--scalar-semibold);color:var(--scalar-color-1)}.request-body-required[data-v-940125b5]{font-size:var(--scalar-micro);color:var(--scalar-color-orange);font-weight:400}.request-body-description[data-v-940125b5]{margin-top:6px;font-size:var(--scalar-small);width:100%}.request-body-header+.request-body-schema[data-v-940125b5]:has(>.schema-card>.schema-card-description),.request-body-header+.request-body-schema[data-v-940125b5]:has(>.schema-card>.schema-properties>*>.property--level-0){padding-top:8px}.request-body-description[data-v-940125b5] .markdown *{color:var(--scalar-color-2)!important}.callback-sticky-offset[data-v-a7c29633]{top:var(--refs-header-height, 0px);z-index:100}.callback-operation-container[data-v-a7c29633] .request-body,.callback-operation-container[data-v-a7c29633] .request-body-description,.callback-operation-container[data-v-a7c29633] .request-body-header{margin-top:0}.callback-operation-container[data-v-a7c29633] .request-body-header{--scalar-font-size-2: var(--scalar-font-size-4);padding:8px;border-bottom:none;border:.5px solid var(--scalar-border-color);border-radius:var(--scalar-radius-lg) var(--scalar-radius-lg) 0 0;background:color-mix(in srgb,var(--scalar-background-2) 50%,transparent)}.callback-operation-container[data-v-a7c29633] ul li.property.property--level-1{padding:8px}.callback-operation-container[data-v-a7c29633] .request-body-schema{background-color:var(--scalar-background-1);border:var(--scalar-border-width) solid var(--scalar-border-color);border-top:none;overflow:hidden;border-radius:0 0 var(--scalar-radius-lg) var(--scalar-radius-lg)}.callback-operation-container[data-v-a7c29633] .parameter-list{margin-top:0}.callback-operation-container[data-v-a7c29633] .parameter-list-title{background:color-mix(in srgb,var(--scalar-background-2) 50%,transparent);border-radius:var(--scalar-radius-lg) var(--scalar-radius-lg) 0 0;padding:8px;margin-bottom:0;border:var(--scalar-border-width) solid var(--scalar-border-color);border-bottom:none;--scalar-font-size-2: var(--scalar-font-size-4)}.callback-operation-container[data-v-a7c29633] .parameter-list-items{border:var(--scalar-border-width) solid var(--scalar-border-color);border-radius:0 0 var(--scalar-radius-lg) var(--scalar-radius-lg)}.callback-operation-container[data-v-a7c29633] .parameter-list-items>li:first-of-type{border-top:none}.callback-operation-container[data-v-a7c29633] .parameter-list-items>li{padding:0 8px}.section-wrapper[data-v-d3d6e381]{color:var(--scalar-color-1);padding-top:12px;margin-top:-12px}.section-accordion[data-v-d3d6e381]{display:flex;flex-direction:column;border-radius:var(--scalar-radius-lg);background:var(--scalar-background-2)}.section-accordion-transparent[data-v-d3d6e381]{background:transparent;border:var(--scalar-border-width) solid var(--scalar-border-color)}.section-accordion-button[data-v-d3d6e381]{padding:6px}.section-accordion-button[data-v-d3d6e381]{display:flex;align-items:center;gap:6px;cursor:pointer}.section-accordion-button-content[data-v-d3d6e381]{flex:1;min-width:0}.section-accordion-button-actions[data-v-d3d6e381]{display:flex;align-items:center;gap:6px;color:var(--scalar-color-3)}.section-accordion-chevron[data-v-d3d6e381]{margin-right:4px;cursor:pointer;opacity:1;color:var(--scalar-color-3)}.section-accordion-button:hover .section-accordion-chevron[data-v-d3d6e381]{color:var(--scalar-color-1)}.section-accordion-content[data-v-d3d6e381]{border-top:var(--scalar-border-width) solid var(--scalar-border-color);display:flex;flex-direction:column}.section-accordion-description[data-v-d3d6e381]{font-weight:var(--scalar-semibold);font-size:var(--scalar-mini);color:var(--scalar-color--1);padding:10px 12px 0}.section-accordion-content-card[data-v-d3d6e381] .property:last-of-type{padding-bottom:9px}.empty-state[data-v-ba6859b3]{margin:10px 0 10px 12px;text-align:center;font-size:var(--scalar-mini);min-height:56px;display:flex;align-items:center;justify-content:center;border-radius:var(--scalar-radius-lg);color:var(--scalar-color-2)}.rule-title[data-v-ba6859b3]{font-family:var(--scalar-font-code);color:var(--scalar-color-1);display:inline-block;margin:12px 0 6px;border-radius:var(--scalar-radius)}.rule[data-v-ba6859b3]{margin:0 12px;border-radius:var(--scalar-radius-lg)}.rule-items[data-v-ba6859b3]{counter-reset:list-number;display:flex;flex-direction:column;gap:12px;border-left:1px solid var(--scalar-border-color);padding:12px 0}.rule-item[data-v-ba6859b3]{counter-increment:list-number;border:1px solid var(--scalar-border-color);border-radius:var(--scalar-radius-lg);overflow:hidden;margin-left:24px}.rule-item[data-v-ba6859b3]:before{border:1px solid var(--scalar-border-color);border-top:0;border-right:0;content:" ";display:block;width:24px;height:6px;border-radius:0 0 0 var(--scalar-radius-lg);margin-top:6px;color:var(--scalar-color-2);transform:translate(-25px);color:var(--scalar-color-1);position:absolute}.tab[data-v-c8207e48]{background:none;border:none;font-size:var(--scalar-small);font-family:var(--scalar-font);font-weight:var(--scalar-font-normal);color:var(--scalar-color-2);line-height:calc(var(--scalar-small) + 2px);white-space:nowrap;cursor:pointer;padding:0;margin-right:3px;text-transform:uppercase;position:relative;line-height:22px}.tab[data-v-c8207e48]:before{content:"";position:absolute;z-index:0;left:-6px;top:-6px;width:calc(100% + 12px);height:calc(100% + 12px);border-radius:var(--scalar-radius);background:var(--scalar-background-3);opacity:0}.tab[data-v-c8207e48]:hover:before,.tab[data-v-c8207e48]:focus-visible:before{opacity:1}.tab[data-v-c8207e48]:focus-visible:before{outline:1px solid var(--scalar-color-accent)}.tab span[data-v-c8207e48]{z-index:1;position:relative}.tab-selected[data-v-c8207e48]{color:var(--scalar-color-1);font-weight:var(--scalar-semibold)}.tab-selected[data-v-c8207e48]:after{content:"";position:absolute;background:currentColor;width:100%;left:0;height:1px;bottom:calc(var(--tab-list-padding-y) * -1)}.tab-list[data-v-fec8fbbb]{display:flex;gap:6px;position:relative;flex:1;--tab-list-padding-y: 7px;--tab-list-padding-x: 12px;padding:var(--tab-list-padding-y) var(--tab-list-padding-x);overflow:auto}.scalar-card-header.scalar-card-header-tabs[data-v-fec8fbbb]{padding:0}.response-card[data-v-63898be9]{font-size:var(--scalar-font-size-3)}.markdown[data-v-63898be9] *{margin:0}.code-copy[data-v-63898be9]{display:flex;align-items:center;justify-content:center;-moz-appearance:none;appearance:none;-webkit-appearance:none;outline:none;background:transparent;cursor:pointer;color:var(--scalar-color-3);border:none;padding:0;margin-right:12px}.code-copy[data-v-63898be9]:hover{color:var(--scalar-color-1)}.code-copy svg[data-v-63898be9]{width:13px;height:13px}.response-card-footer[data-v-63898be9]{display:flex;flex-direction:row;justify-content:space-between;flex-shrink:0;padding:7px 12px;gap:8px}.response-example-selector[data-v-63898be9]{align-self:flex-start;margin:-4px}.response-description[data-v-63898be9]{font-weight:var(--scalar-semibold);font-size:var(--scalar-small);color:var(--scalar-color--1);display:flex;align-items:center;box-sizing:border-box}.schema-type[data-v-63898be9]{font-size:var(--scalar-micro);color:var(--scalar-color-2);font-weight:var(--scalar-semibold);background:var(--scalar-background-3);padding:2px 4px;border-radius:4px;margin-right:4px}.schema-example[data-v-63898be9]{font-size:var(--scalar-micro);color:var(--scalar-color-2);font-weight:var(--scalar-semibold)}.example-response-tab[data-v-63898be9]{display:block;margin:6px}.scalar-card-checkbox[data-v-63898be9]{display:flex;align-items:center;justify-content:center;position:relative;min-height:17px;cursor:pointer;-webkit-user-select:none;user-select:none;font-size:var(--scalar-small);font-weight:var(--scalar-font-normal);color:var(--scalar-color-2);width:fit-content;white-space:nowrap;gap:6px;padding:7px 6px}.scalar-card-checkbox:has(.scalar-card-checkbox-input:focus-visible) .scalar-card-checkbox-checkmark[data-v-63898be9]{outline:1px solid var(--scalar-color-accent)}.scalar-card-checkbox[data-v-63898be9]:hover{color:var(--scalar-color--1)}.scalar-card-checkbox .scalar-card-checkbox-input[data-v-63898be9]{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.scalar-card-checkbox-checkmark[data-v-63898be9]{height:16px;width:16px;border-radius:var(--scalar-radius);background-color:transparent;background-color:var(--scalar-background-3);box-shadow:inset 0 0 0 var(--scalar-border-width) var(--scalar-border-color)}.scalar-card-checkbox[data-v-63898be9]:has(.scalar-card-checkbox-input:checked){color:var(--scalar-color-1);font-weight:var(--scalar-semibold)}.scalar-card-checkbox .scalar-card-checkbox-input:checked~.scalar-card-checkbox-checkmark[data-v-63898be9]{background-color:var(--scalar-button-1);box-shadow:none}.scalar-card-checkbox-checkmark[data-v-63898be9]:after{content:"";position:absolute;display:none}.scalar-card-checkbox .scalar-card-checkbox-input:checked~.scalar-card-checkbox-checkmark[data-v-63898be9]:after{display:block}.scalar-card-checkbox .scalar-card-checkbox-checkmark[data-v-63898be9]:after{right:11.5px;top:12.5px;width:5px;height:9px;border:solid 1px var(--scalar-button-1-color);border-width:0 1.5px 1.5px 0;transform:rotate(45deg)}.request-card[data-v-9b79701d]{font-size:var(--scalar-font-size-3)}.request-method[data-v-9b79701d]{font-family:var(--scalar-font-code);text-transform:uppercase;margin-right:6px}.request-card-footer[data-v-9b79701d]{display:flex;justify-content:flex-end;padding:6px;flex-shrink:0}.request-card-footer-addon[data-v-9b79701d]{display:flex;align-items:center;flex:1;min-width:0}.request-editor-section[data-v-9b79701d]{display:flex;flex:1}.request-card-simple[data-v-9b79701d]{display:flex;align-items:center;justify-content:space-between;padding:8px 8px 8px 12px;font-size:var(--scalar-small)}.code-snippet[data-v-9b79701d]{display:flex;flex-direction:column;width:100%}.show-api-client-button[data-v-976c9c1f]{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;padding:1px 6px;white-space:nowrap;border-radius:var(--scalar-radius);display:flex;justify-content:center;align-items:center;font-weight:var(--scalar-semibold);font-size:var(--scalar-small);line-height:22px;color:var(--scalar-background-2);font-family:var(--scalar-font);background:var(--scalar-button-1);position:relative;cursor:pointer;box-sizing:border-box;box-shadow:inset 0 0 0 1px #0000001a;outline-offset:2px}.show-api-client-button span[data-v-976c9c1f],.show-api-client-button svg[data-v-976c9c1f]{fill:currentColor;color:var(--scalar-button-1-color);z-index:1}.show-api-client-button[data-v-976c9c1f]:hover{background:var(--scalar-button-1-hover)}.show-api-client-button svg[data-v-976c9c1f]{margin-right:4px}.operation-title[data-v-03026e66]{justify-content:space-between;display:flex}.operation-details[data-v-03026e66]{flex-shrink:1;align-items:center;gap:9px;min-width:0;margin-top:0;display:flex}.operation-details[data-v-03026e66] .endpoint-anchor .scalar-button svg{width:16px;height:16px}.endpoint-type[data-v-03026e66]{z-index:0;width:60px;font-size:var(--scalar-small);text-transform:uppercase;font-weight:var(--scalar-bold);font-family:var(--scalar-font);flex-shrink:0;justify-content:center;align-items:center;gap:6px;padding:6px;display:flex;position:relative}.endpoint-type[data-v-03026e66]:after{content:"";z-index:-1;opacity:.15;border-radius:var(--scalar-radius);background:currentColor;position:absolute;top:0;right:0;bottom:0;left:0}.endpoint-anchor[data-v-03026e66]{flex-shrink:1;align-items:center;min-width:0;display:flex}.endpoint-anchor.label[data-v-03026e66]{display:flex}.endpoint-label[data-v-03026e66]{min-width:0;color:var(--scalar-color-1);flex-shrink:1;align-items:baseline;gap:9px;display:flex}.endpoint-label-path[data-v-03026e66]{font-family:var(--scalar-font-code);font-size:var(--scalar-mini);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.endpoint-label-path[data-v-03026e66] em{color:var(--scalar-color-2)}.endpoint-label-name[data-v-03026e66]{color:var(--scalar-color-2);font-size:var(--scalar-small);text-overflow:ellipsis;white-space:nowrap;flex-shrink:1000000000;overflow:hidden}.endpoint-try-hint[data-v-03026e66]{flex-shrink:0;padding:2px}.endpoint-copy[data-v-03026e66]{color:currentColor}.endpoint-copy[data-v-03026e66] svg{stroke-width:2px}.endpoint-content[data-v-03026e66]{grid-auto-columns:1fr;grid-auto-flow:row;gap:9px;padding:9px;display:grid}@media (min-width:1000px){.endpoint-content[data-v-03026e66]{grid-auto-flow:column}}@container (max-width:900px){.endpoint-content[data-v-03026e66]{grid-template-columns:1fr}}.endpoint-content[data-v-03026e66]>*{min-width:0}.operation-details-card[data-v-03026e66]{flex-direction:column;gap:12px;min-width:0;display:flex}:is(.operation-details-card-item[data-v-03026e66] .parameter-list,.operation-details-card-item[data-v-03026e66] .callbacks-list){border:var(--scalar-border-width)solid var(--scalar-border-color);border-radius:var(--scalar-radius-lg);margin-top:0}.operation-details-card-item[data-v-03026e66]{flex-direction:column;gap:12px;display:flex}.operation-details-card-item[data-v-03026e66] .parameter-list-items{margin-bottom:0}.operation-details-card[data-v-03026e66] .parameter-item:last-of-type .parameter-schema{padding-bottom:12px}.operation-details-card[data-v-03026e66] .parameter-list .parameter-list{margin-bottom:12px}.operation-details-card[data-v-03026e66] .parameter-item{margin:0;padding:0}.operation-details-card[data-v-03026e66] .property{margin:0;padding:9px}:is(.operation-details-card[data-v-03026e66] .parameter-list-title,.operation-details-card[data-v-03026e66] .request-body-title,.operation-details-card[data-v-03026e66] .callbacks-title){text-transform:uppercase;font-weight:var(--scalar-bold);font-size:var(--scalar-mini);color:var(--scalar-color-2);margin:0;padding:9px;line-height:1.33}.operation-details-card[data-v-03026e66] .callback-list-item-title{padding-left:28px;padding-right:12px}.operation-details-card[data-v-03026e66] .callback-list-item-icon{left:6px}.operation-details-card[data-v-03026e66] .callback-operation-container{padding-inline:9px;padding-bottom:9px}:is(.operation-details-card[data-v-03026e66] .callback-operation-container>.request-body,.operation-details-card[data-v-03026e66] .callback-operation-container>.parameter-list){border:none}.operation-details-card[data-v-03026e66] .callback-operation-container>.request-body>.request-body-header{border-bottom:var(--scalar-border-width)solid var(--scalar-border-color);padding:0 0 9px}.operation-details-card[data-v-03026e66] .request-body-description{border-top:var(--scalar-border-width)solid var(--scalar-border-color);margin-top:0;padding:9px 9px 0}.operation-details-card[data-v-03026e66] .request-body{border-radius:var(--scalar-radius-lg);border:var(--scalar-border-width)solid var(--scalar-border-color);margin-top:0}.operation-details-card[data-v-03026e66] .request-body-header{border-bottom:0;padding-bottom:0}.operation-details-card[data-v-03026e66] .contents button{margin-right:9px}.operation-details-card[data-v-03026e66] .schema-card--open+.schema-card:not(.schema-card--open){margin-inline:9px;margin-bottom:9px}.operation-details-card[data-v-03026e66] .request-body-schema .property--level-0{padding:0}.operation-details-card[data-v-03026e66] .selected-content-type{margin-right:9px}.operation-example-card[data-v-03026e66]{top:calc(var(--refs-header-height) + 24px);max-height:calc(((var(--full-height) - var(--refs-header-height)) - 48px));position:sticky}@media (max-width:600px){.operation-example-card[data-v-03026e66]{max-height:unset;position:static}}.examples[data-v-1152fe62]{position:sticky;top:calc(var(--refs-header-height) + 24px)}.examples[data-v-1152fe62]>*{max-height:calc(((var(--full-height) - var(--refs-header-height)) - 60px) / 2);position:relative}@media (max-width: 600px){.examples[data-v-1152fe62]>*{max-height:unset}}.deprecated[data-v-1152fe62] *{text-decoration:line-through}.section-accordion-wrapper[data-v-797031c0]{padding:0 60px}.section-accordion[data-v-797031c0]{position:relative;width:100%;max-width:var(--refs-content-max-width);margin:auto}.section-accordion-content[data-v-797031c0]{display:flex;flex-direction:column;gap:12px;padding-top:12px}.section-accordion-button[data-v-797031c0]{width:100%;display:flex;cursor:pointer;padding:6px 0;margin:-6px 0;border-radius:var(--scalar-radius)}.section-accordion-chevron[data-v-797031c0]{position:absolute;left:-22px;top:12px;color:var(--scalar-color-3)}.section-accordion-button:hover .section-accordion-chevron[data-v-797031c0]{color:var(--scalar-color-1)}.section-accordion-title[data-v-797031c0]{display:flex;flex-direction:column;align-items:flex-start;flex:1;padding:0 6px}.section-accordion-title[data-v-797031c0] .section-header-wrapper{grid-template-columns:1fr}.section-accordion-title[data-v-797031c0] .section-header{margin-bottom:0}@container narrow-references-container (max-width: 900px){.section-accordion-chevron[data-v-797031c0]{width:16px;left:-16px;top:14px}.section-accordion-wrapper[data-v-797031c0]{padding:calc(var(--refs-header-height)) 24px 0 24px}}.tag-section[data-v-56f55c2b]{margin-bottom:48px}.tag-name[data-v-56f55c2b]{text-transform:capitalize}.tag-description[data-v-56f55c2b]{padding-bottom:4px;text-align:left}.show-more[data-v-b2ca4789]{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;border:var(--scalar-border-width) solid var(--scalar-border-color);margin:auto;padding:8px 12px 8px 16px;border-radius:30px;color:var(--scalar-color-1);font-weight:var(--scalar-semibold);font-size:var(--scalar-small);display:flex;align-items:center;justify-content:center;position:relative;gap:6px;top:-48px}.show-more[data-v-b2ca4789]:hover{background:var(--scalar-background-2);cursor:pointer}.show-more[data-v-b2ca4789]:active{box-shadow:0 0 0 1px var(--scalar-border-color)}@container narrow-references-container (max-width: 900px){.show-more[data-v-b2ca4789]{top:-24px}}.endpoint[data-v-e2dcc62f]{display:flex;white-space:nowrap;cursor:pointer;text-decoration:none}.endpoint:hover .endpoint-path[data-v-e2dcc62f],.endpoint:focus-visible .endpoint-path[data-v-e2dcc62f]{text-decoration:underline}.endpoint .post[data-v-e2dcc62f],.endpoint .get[data-v-e2dcc62f],.endpoint .delete[data-v-e2dcc62f],.endpoint .put[data-v-e2dcc62f]{white-space:nowrap}.endpoint-method[data-v-e2dcc62f],.endpoint-path[data-v-e2dcc62f]{color:var(--scalar-color-1);min-width:62px;display:inline-flex;line-height:1.55;font-family:var(--scalar-font-code);font-size:var(--scalar-small);cursor:pointer}.endpoint-method[data-v-e2dcc62f]{text-align:right}.endpoint-path[data-v-e2dcc62f]{margin-left:12px;text-transform:initial}.deprecated[data-v-e2dcc62f]{text-decoration:line-through}.endpoints-card[data-v-d474b1bb]{position:sticky;top:calc(var(--refs-header-height) + 24px);font-size:var(--scalar-font-size-3)}.endpoints[data-v-d474b1bb]{overflow:auto;background:var(--scalar-background-2);padding:10px 12px;width:100%}.section-container[data-v-91405c72]{border-top:var(--scalar-border-width) solid var(--scalar-border-color)}.section-container[data-v-91405c72]:has(.show-more){background-color:color-mix(in srgb,var(--scalar-background-2),transparent)}.reference-models[data-v-94ac35f8]{margin-bottom:48px}.reference-models-anchor[data-v-94ac35f8]{display:flex;align-items:center;font-size:20px;padding-left:6px;color:var(--scalar-color-1)}.reference-models-label[data-v-94ac35f8]{display:block;font-size:var(--scalar-mini)}.reference-models-label[data-v-94ac35f8] em{font-weight:var(--scalar-bold)}.collapsible-section[data-v-0a6031fe]{border-top:var(--scalar-border-width) solid var(--scalar-border-color);position:relative}.collapsible-section-header[data-v-0a6031fe]{color:var(--scalar-color-1)}.collapsible-section .collapsible-section-trigger[data-v-0a6031fe]{display:flex;align-items:center;cursor:pointer;padding:10px 0;font-size:var(--scalar-font-size-3);z-index:1;position:relative}.collapsible-section-trigger svg[data-v-0a6031fe]{color:var(--scalar-color-3);position:absolute;left:-19px}.collapsible-section:hover .collapsible-section-trigger svg[data-v-0a6031fe]{color:var(--scalar-color-1)}.collapsible-section .collapsible-section-trigger[data-v-0a6031fe] .anchor-copy{line-height:18.5px}.collapsible-section-content[data-v-0a6031fe]{padding:0;margin:0;scroll-margin-top:140px}.collapsible-section:not(:last-child) .collapsible-section-content[data-v-0a6031fe]{margin-bottom:10px}.models-list[data-v-595c304a]{display:contents}.models-list-truncated .models-list-item[data-v-595c304a]:last-child{border-bottom:var(--scalar-border-width) solid var(--scalar-border-color)}.show-more-models[data-v-595c304a]{margin-top:32px;top:0}.models-list-item[data-v-595c304a]:hover{z-index:10}.narrow-references-container{container-name:narrow-references-container;container-type:inline-size}/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */@layer properties{@supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))){*,:before,:after,::backdrop{--tw-translate-x:0;--tw-translate-y:0;--tw-translate-z:0;--tw-rotate-x:initial;--tw-rotate-y:initial;--tw-rotate-z:initial;--tw-skew-x:initial;--tw-skew-y:initial;--tw-divide-y-reverse:0;--tw-border-style:solid;--tw-leading:initial;--tw-font-weight:initial;--tw-shadow:0 0 #0000;--tw-shadow-color:initial;--tw-shadow-alpha:100%;--tw-inset-shadow:0 0 #0000;--tw-inset-shadow-color:initial;--tw-inset-shadow-alpha:100%;--tw-ring-color:initial;--tw-ring-shadow:0 0 #0000;--tw-inset-ring-color:initial;--tw-inset-ring-shadow:0 0 #0000;--tw-ring-inset:initial;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-offset-shadow:0 0 #0000;--tw-outline-style:solid;--tw-blur:initial;--tw-brightness:initial;--tw-contrast:initial;--tw-grayscale:initial;--tw-hue-rotate:initial;--tw-invert:initial;--tw-opacity:initial;--tw-saturate:initial;--tw-sepia:initial;--tw-drop-shadow:initial;--tw-drop-shadow-color:initial;--tw-drop-shadow-alpha:100%;--tw-drop-shadow-size:initial;--tw-backdrop-blur:initial;--tw-backdrop-brightness:initial;--tw-backdrop-contrast:initial;--tw-backdrop-grayscale:initial;--tw-backdrop-hue-rotate:initial;--tw-backdrop-invert:initial;--tw-backdrop-opacity:initial;--tw-backdrop-saturate:initial;--tw-backdrop-sepia:initial;--tw-duration:initial;--tw-ease:initial;--tw-scale-x:1;--tw-scale-y:1;--tw-scale-z:1;--tw-space-x-reverse:0;--tw-content:""}}}@layer scalar-base{@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-color-alert:color-mix(in srgb,var(--scalar-color-orange),var(--scalar-color-1)20%)}}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-color-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-color-1)20%)}}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-background-alert:color-mix(in srgb,var(--scalar-color-orange),var(--scalar-background-1)95%)}}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-background-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-background-1)95%)}}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-tooltip-background:color-mix(in srgb,var(--scalar-background-1),#fff 10%)}}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-color-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-background-1)20%)}}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-background-alert:color-mix(in srgb,var(--scalar-color-orange),var(--scalar-background-1)95%)}}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-background-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-background-1)95%)}}:root,:host{--leading-snug:1.375;--leading-normal:1.5;--ease-in-out:cubic-bezier(.4,0,.2,1);--default-transition-duration:.15s;--default-transition-timing-function:cubic-bezier(.4,0,.2,1)}:root,:host{--leading-snug:1.375;--ease-in-out:cubic-bezier(.4,0,.2,1);--default-transition-duration:.15s;--default-transition-timing-function:cubic-bezier(.4,0,.2,1)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-color-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-color-alert:color-mix(in srgb,var(--scalar-color-orange),var(--scalar-color-1)20%)}}.light-mode{--scalar-color-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-color-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-color-1)20%)}}.light-mode{--scalar-background-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-background-alert:color-mix(in srgb,var(--scalar-color-orange),var(--scalar-background-1)95%)}}.light-mode{--scalar-background-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-background-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-background-1)95%)}}.dark-mode{--scalar-tooltip-background:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-tooltip-background:color-mix(in srgb,var(--scalar-background-1),#fff 10%)}}.dark-mode{--scalar-color-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-color-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-background-1)20%)}}.dark-mode{--scalar-background-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-background-alert:color-mix(in srgb,var(--scalar-color-orange),var(--scalar-background-1)95%)}}.dark-mode{--scalar-background-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-background-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-background-1)95%)}}}body{line-height:inherit;margin:0}:root{--scalar-border-width:.5px;--scalar-radius:3px;--scalar-radius-lg:6px;--scalar-radius-xl:8px;--scalar-font:"Inter",-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif;--scalar-font-code:"JetBrains Mono",ui-monospace,Menlo,Monaco,"Cascadia Mono","Segoe UI Mono","Roboto Mono","Oxygen Mono","Ubuntu Monospace","Source Code Pro","Fira Mono","Droid Sans Mono","Courier New",monospace;--scalar-heading-1:24px;--scalar-page-description:16px;--scalar-heading-2:20px;--scalar-heading-3:20px;--scalar-heading-4:16px;--scalar-heading-5:16px;--scalar-heading-6:16px;--scalar-paragraph:16px;--scalar-small:14px;--scalar-mini:13px;--scalar-micro:12px;--scalar-bold:600;--scalar-semibold:500;--scalar-regular:400;--scalar-font-size-1:21px;--scalar-font-size-2:16px;--scalar-font-size-3:14px;--scalar-font-size-4:13px;--scalar-font-size-5:12px;--scalar-font-size-6:12px;--scalar-font-size-7:10px;--scalar-line-height-1:32px;--scalar-line-height-2:24px;--scalar-line-height-3:20px;--scalar-line-height-4:18px;--scalar-line-height-5:16px;--scalar-font-normal:400;--scalar-font-medium:500;--scalar-font-bold:700;--scalar-text-decoration:none;--scalar-text-decoration-hover:underline;--scalar-link-font-weight:inherit;--scalar-sidebar-indent:20px}.dark-mode{color-scheme:dark;--scalar-scrollbar-color:#ffffff2e;--scalar-scrollbar-color-active:#ffffff5c;--scalar-button-1:#fff;--scalar-button-1-hover:#ffffffe6;--scalar-button-1-color:black;--scalar-shadow-1:0 1px 3px 0 #0000001a;--scalar-shadow-2:0 0 0 .5px var(--scalar-border-color),#0f0f0f33 0px 3px 6px,#0f0f0f66 0px 9px 24px;--scalar-lifted-brightness:1.45;--scalar-backdrop-brightness:.5;--scalar-text-decoration-color:currentColor;--scalar-text-decoration-color-hover:currentColor}.light-mode{color-scheme:light;--scalar-scrollbar-color-active:#0000005c;--scalar-scrollbar-color:#0000002e;--scalar-button-1:#000;--scalar-button-1-hover:#000c;--scalar-button-1-color:#ffffffe6;--scalar-shadow-1:0 1px 3px 0 #0000001c;--scalar-shadow-2:#00000014 0px 13px 20px 0px,#00000014 0px 3px 8px 0px,#eeeeed 0px 0 0 .5px;--scalar-lifted-brightness:1;--scalar-backdrop-brightness:1;--scalar-text-decoration-color:currentColor;--scalar-text-decoration-color-hover:currentColor}.light-mode .dark-mode{color-scheme:dark!important}@media (max-width:460px){:root{--scalar-font-size-1:22px;--scalar-font-size-2:14px;--scalar-font-size-3:12px}}@media (max-width:720px){:root{--scalar-heading-1:24px;--scalar-page-description:20px}}:root{--scalar-text-decoration:underline;--scalar-text-decoration-hover:underline}.light-mode{--scalar-background-1:#fff;--scalar-background-2:#f6f6f6;--scalar-background-3:#e7e7e7;--scalar-background-accent:#8ab4f81f;--scalar-color-1:#2a2f45;--scalar-color-2:#757575;--scalar-color-3:#8e8e8e;--scalar-color-accent:#09f;--scalar-border-color:#dfdfdf}.dark-mode{--scalar-background-1:#0f0f0f;--scalar-background-2:#1a1a1a;--scalar-background-3:#272727;--scalar-color-1:#e7e7e7;--scalar-color-2:#a4a4a4;--scalar-color-3:#797979;--scalar-color-accent:#00aeff;--scalar-background-accent:#3ea6ff1f;--scalar-border-color:#2d2d2d}.light-mode .t-doc__sidebar,.dark-mode .t-doc__sidebar{--scalar-sidebar-background-1:var(--scalar-background-1);--scalar-sidebar-color-1:var(--scalar-color-1);--scalar-sidebar-color-2:var(--scalar-color-2);--scalar-sidebar-border-color:var(--scalar-border-color);--scalar-sidebar-item-hover-background:var(--scalar-background-2);--scalar-sidebar-item-hover-color:currentColor;--scalar-sidebar-item-active-background:var(--scalar-background-2);--scalar-sidebar-color-active:var(--scalar-color-1);--scalar-sidebar-indent-border:var(--scalar-sidebar-border-color);--scalar-sidebar-indent-border-hover:var(--scalar-sidebar-border-color);--scalar-sidebar-indent-border-active:var(--scalar-sidebar-border-color);--scalar-sidebar-search-background:transparent;--scalar-sidebar-search-color:var(--scalar-color-3);--scalar-sidebar-search-border-color:var(--scalar-border-color)}.light-mode{--scalar-color-green:#069061;--scalar-color-red:#ef0006;--scalar-color-yellow:#edbe20;--scalar-color-blue:#0082d0;--scalar-color-orange:#ff5800;--scalar-color-purple:#5203d1;--scalar-link-color:var(--scalar-color-1);--scalar-link-color-hover:var(--scalar-link-color);--scalar-button-1:#000;--scalar-button-1-hover:#000c;--scalar-button-1-color:#ffffffe6;--scalar-tooltip-background:#1a1a1ae6;--scalar-tooltip-color:#ffffffd9;--scalar-color-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-color-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-color-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-color-alert:color-mix(in srgb,var(--scalar-color-orange),var(--scalar-color-1)20%)}}}}.light-mode{--scalar-color-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-color-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-color-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-color-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-color-1)20%)}}}}.light-mode{--scalar-background-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-background-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-background-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-background-alert:color-mix(in srgb,var(--scalar-color-orange),var(--scalar-background-1)95%)}}}}.light-mode{--scalar-background-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-background-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-background-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.light-mode{--scalar-background-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-background-1)95%)}}}}.dark-mode{--scalar-color-green:#00b648;--scalar-color-red:#dc1b19;--scalar-color-yellow:#ffc90d;--scalar-color-blue:#4eb3ec;--scalar-color-orange:#ff8d4d;--scalar-color-purple:#b191f9;--scalar-link-color:var(--scalar-color-1);--scalar-link-color-hover:var(--scalar-link-color);--scalar-button-1:#fff;--scalar-button-1-hover:#ffffffe6;--scalar-button-1-color:black;--scalar-tooltip-background:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-tooltip-background:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-tooltip-background:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-tooltip-background:color-mix(in srgb,var(--scalar-background-1),#fff 10%)}}}}.dark-mode{--scalar-tooltip-color:#fffffff2;--scalar-color-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-color-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-color-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-color-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-background-1)20%)}}}}.dark-mode{--scalar-background-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-background-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-background-alert:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-background-alert:color-mix(in srgb,var(--scalar-color-orange),var(--scalar-background-1)95%)}}}}.dark-mode{--scalar-background-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-background-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-background-danger:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.dark-mode{--scalar-background-danger:color-mix(in srgb,var(--scalar-color-red),var(--scalar-background-1)95%)}}}}@supports (color:color(display-p3 1 1 1)){.light-mode{--scalar-color-accent:color(display-p3 0 .6 1);--scalar-color-green:color(display-p3 .023529 .564706 .380392);--scalar-color-red:color(display-p3 .937255 0 .023529);--scalar-color-yellow:color(display-p3 .929412 .745098 .12549);--scalar-color-blue:color(display-p3 0 .509804 .815686);--scalar-color-orange:color(display-p3 1 .4 .02);--scalar-color-purple:color(display-p3 .321569 .011765 .819608)}.dark-mode{--scalar-color-accent:color(display-p3 .07 .67 1);--scalar-color-green:color(display-p3 0 .713725 .282353);--scalar-color-red:color(display-p3 .862745 .105882 .098039);--scalar-color-yellow:color(display-p3 1 .788235 .05098);--scalar-color-blue:color(display-p3 .305882 .701961 .92549);--scalar-color-orange:color(display-p3 1 .552941 .301961);--scalar-color-purple:color(display-p3 .694118 .568627 .976471)}}:root,:host{--leading-snug:1.375;--ease-in-out:cubic-bezier(.4,0,.2,1);--default-transition-duration:.15s;--default-transition-timing-function:cubic-bezier(.4,0,.2,1);--leading-normal:1.5}}@layer scalar-theme;.scalar-app .\\@container{container-type:inline-size}.scalar-app .-top-2{top:-8px}.scalar-app .top-1\\/2{top:50%}.scalar-app .top-3{top:12px}.scalar-app .top-3\\.5{top:14px}.scalar-app .-left-4\\.5{left:-18px}.scalar-app .-left-5{left:-20px}.scalar-app .order-789{order:789}.scalar-app .my-2{margin-block:8px}.scalar-app .my-3{margin-block:12px}.scalar-app .mt-6{margin-top:24px}.scalar-app .mb-3{margin-bottom:12px}.scalar-app .size-2\\.75{width:11px;height:11px}.scalar-app .size-4\\.5{width:18px;height:18px}.scalar-app .h-\\[calc\\(100\\%\\+16px\\)\\]{height:calc(100% + 16px)}.scalar-app .max-h-80{max-height:320px}.scalar-app .max-h-\\[60vh\\]{max-height:60vh}.scalar-app .\\!min-h-full{min-height:100%!important}.scalar-app .min-h-3{min-height:12px}.scalar-app .min-h-7{min-height:28px}.scalar-app .min-h-dvh{min-height:100dvh}.scalar-app .w-4\\.5{width:18px}.scalar-app .w-96{width:384px}.scalar-app .max-w-64{max-width:256px}.scalar-app .min-w-3{min-width:12px}.scalar-app .min-w-7{min-width:28px}.scalar-app .min-w-9\\.75{min-width:39px}.scalar-app .-translate-y-1\\/2{--tw-translate-y: -50% ;translate:var(--tw-translate-x)var(--tw-translate-y)}.scalar-app .rotate-45{rotate:45deg}.scalar-app .scroll-mt-24{scroll-margin-top:96px}.scalar-app .content-end{align-content:flex-end}.scalar-app .overflow-x-scroll{overflow-x:scroll}.scalar-app .rounded-b-none{border-bottom-right-radius:0;border-bottom-left-radius:0}@supports (color:color-mix(in lab,red,red)){.scalar-app .bg-b-1\\.5{background-color:color-mix(in srgb,var(--scalar-background-1),var(--scalar-background-2))}}.scalar-app .text-current{color:currentColor}.scalar-app .italic{font-style:italic}.scalar-app .\\[--scalar-address-bar-height\\:0px\\]{--scalar-address-bar-height:0px}:is(.scalar-app .\\*\\:\\!p-0>*){padding:0!important}.scalar-app .group-last\\:mr-0:is(:where(.group):last-child *){margin-right:0}.scalar-app .group-open\\:rotate-90:is(:where(.group):is([open],:popover-open,:open) *){rotate:90deg}.scalar-app .group-open\\:flex-wrap:is(:where(.group):is([open],:popover-open,:open) *){flex-wrap:wrap}.scalar-app .group-open\\:whitespace-normal:is(:where(.group):is([open],:popover-open,:open) *){white-space:normal}.scalar-app .group-focus-within\\/parameter-item\\:opacity-100:is(:where(.group\\/parameter-item):focus-within *){opacity:1}@media (hover:hover){.scalar-app .group-hover\\:flex:is(:where(.group):hover *){display:flex}.scalar-app .group-hover\\:text-c-1:is(:where(.group):hover *){color:var(--scalar-color-1)}.scalar-app .group-hover\\:opacity-100:is(:where(.group):hover *),.scalar-app .group-hover\\/heading\\:opacity-100:is(:where(.group\\/heading):hover *),.scalar-app .group-hover\\/parameter-item\\:opacity-100:is(:where(.group\\/parameter-item):hover *){opacity:1}}.scalar-app .group-has-focus-visible\\/heading\\:opacity-100:is(:where(.group\\/heading):has(:focus-visible) *){opacity:1}.scalar-app .empty\\:hidden:empty{display:none}@media (hover:hover){.scalar-app .hover\\:bg-b-2:hover{background-color:var(--scalar-background-2)}.scalar-app .hover\\:text-c-1:hover{color:var(--scalar-color-1)}}.scalar-app .has-focus\\:outline:has(:focus){outline-style:var(--tw-outline-style);outline-width:1px}@media (min-width:1200px){.scalar-app .xl\\:mb-1\\.5{margin-bottom:6px}.scalar-app .xl\\:gap-12{gap:48px}.scalar-app .xl\\:border-r{border-right-style:var(--tw-border-style);border-right-width:var(--scalar-border-width)}.scalar-app .xl\\:border-none{--tw-border-style:none;border-style:none}.scalar-app .xl\\:first\\:ml-auto:first-child{margin-left:auto}}.scalar-app .\\[\\&_em\\]\\:text-c-1 em{color:var(--scalar-color-1)}.scalar-app .\\[\\&_em\\]\\:not-italic em{font-style:normal}@supports (color:color-mix(in lab,red,red)){.scalar-app .bg-b-1\\.5{background-color:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.scalar-app .bg-b-1\\.5{background-color:color-mix(in srgb,var(--scalar-background-1),var(--scalar-background-2))}}:is(.scalar-app .\\*\\:border-border-tooltip>*){border-color:var(--scalar-tooltip-color)}@supports (color:color-mix(in lab,red,red)){:is(.scalar-app .\\*\\:border-border-tooltip>*){border-color:color-mix(in srgb,var(--scalar-tooltip-color),var(--scalar-tooltip-background))}}}@media (hover:hover){.scalar-app .group-hover\\:text-c-1:is(:where(.group):hover *){color:var(--scalar-color-1)}.scalar-app .group-hover\\/button\\:bg-sidebar-indent-border-hover:is(:where(.group\\/button):hover *){background-color:var(--scalar-sidebar-indent-border-hover,var(--scalar-border-color))}.scalar-app .group-hover\\/button\\:text-c-1:is(:where(.group\\/button):hover *){color:var(--scalar-color-1)}.scalar-app .group-hover\\/code-block\\:opacity-100:is(:where(.group\\/code-block):hover *){opacity:1}.scalar-app .hover\\:bg-b-2:hover{background-color:var(--scalar-background-2)}.scalar-app .hover\\:bg-b-3:hover{background-color:var(--scalar-background-3)}.scalar-app .hover\\:bg-h-btn:hover{background-color:var(--scalar-button-1-hover)}.scalar-app .hover\\:text-c-1:hover{color:var(--scalar-color-1)}.scalar-app .hover\\:underline:hover{text-decoration-line:underline}.scalar-app .hover\\:brightness-90:hover{--tw-brightness:brightness(90%);filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)}}@property --tw-divide-y-reverse{syntax:"*";inherits:false;initial-value:0}@property --tw-ease{syntax:"*";inherits:false}@keyframes fade-in-f525638b{0%{opacity:0}70%{opacity:0}to{opacity:1}}@keyframes rotate-f525638b{0%{transform:scale(3.5)rotate(0)}to{transform:scale(3.5)rotate(360deg)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown a{-webkit-text-decoration-color:color-mix(in srgb,var(--font-color)30%,transparent);text-decoration-color:color-mix(in srgb,var(--font-color)30%,transparent)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert{background-color:color-mix(in srgb,var(--scalar-background-2),transparent)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-note{background-color:color-mix(in srgb,var(--scalar-color-blue),transparent 97%)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-note{border:var(--scalar-border-width)solid color-mix(in srgb,var(--scalar-color-blue),transparent 50%)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-tip{background-color:color-mix(in srgb,var(--scalar-color-2),transparent 97%)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-tip{border:var(--scalar-border-width)solid color-mix(in srgb,var(--scalar-color-2),transparent 50%)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-important,.scalar-app .markdown .markdown-alert.markdown-alert-warning{background-color:color-mix(in srgb,var(--scalar-color-orange),transparent 97%)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-important,.scalar-app .markdown .markdown-alert.markdown-alert-warning{border:var(--scalar-border-width)solid color-mix(in srgb,var(--scalar-color-orange),transparent 50%)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-caution{background-color:color-mix(in srgb,var(--scalar-color-red),transparent 97%)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-caution{border:var(--scalar-border-width)solid color-mix(in srgb,var(--scalar-color-red),transparent 50%)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-success{background-color:color-mix(in srgb,var(--scalar-color-green),transparent 97%)}}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-success{border:var(--scalar-border-width)solid color-mix(in srgb,var(--scalar-color-green),transparent 50%)}}@property --tw-backdrop-blur{syntax:"*";inherits:false}@property --tw-backdrop-brightness{syntax:"*";inherits:false}@property --tw-backdrop-contrast{syntax:"*";inherits:false}@property --tw-backdrop-grayscale{syntax:"*";inherits:false}@property --tw-backdrop-hue-rotate{syntax:"*";inherits:false}@property --tw-backdrop-invert{syntax:"*";inherits:false}@property --tw-backdrop-opacity{syntax:"*";inherits:false}@property --tw-backdrop-saturate{syntax:"*";inherits:false}@property --tw-backdrop-sepia{syntax:"*";inherits:false}@keyframes fadein-layout-589f8aa0{0%{opacity:0}to{opacity:1}}@keyframes fadein-modal-589f8aa0{0%{opacity:0;transform:translateY(10px)}to{opacity:1;transform:translate(0)}}:where(.scalar-app){font-family:var(--scalar-font);color:var(--scalar-color-1);-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;line-height:1.15}:where(.scalar-app) *,:where(.scalar-app) :before,:where(.scalar-app) :after{box-sizing:border-box;border-style:solid;border-width:0;border-color:var(--scalar-border-color);outline-width:1px;outline-style:none;outline-color:var(--scalar-color-accent);font-feature-settings:inherit;font-variation-settings:inherit;font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;-webkit-text-decoration:inherit;text-decoration:inherit;line-height:inherit;color:inherit;margin:unset;padding:unset;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}:where(.scalar-app) :before,:where(.scalar-app) :after{--tw-content:""}:where(.scalar-app) button,:where(.scalar-app) input,:where(.scalar-app) optgroup,:where(.scalar-app) select,:where(.scalar-app) textarea{background:0 0}:where(.scalar-app) ::file-selector-button{background:0 0}:where(.scalar-app) ol,:where(.scalar-app) ul,:where(.scalar-app) menu{list-style:none}:where(.scalar-app) input:where(:not([type=button],[type=reset],[type=submit])),:where(.scalar-app) select,:where(.scalar-app) textarea{border-radius:var(--scalar-radius);border-width:1px}:where(.scalar-app) input::placeholder{color:var(--scalar-color-3);font-family:var(--scalar-font)}:where(.scalar-app) input[type=search]::-webkit-search-cancel-button{-webkit-appearance:none;-moz-appearance:none;appearance:none}:where(.scalar-app) input[type=search]::-webkit-search-decoration{-webkit-appearance:none;-moz-appearance:none;appearance:none}:where(.scalar-app) summary::-webkit-details-marker{display:none}:where(.scalar-app) input:-webkit-autofill{-webkit-background-clip:text!important;background-clip:text!important}:where(.scalar-app) :focus-visible{border-radius:var(--scalar-radius);outline-style:solid}:where(.scalar-app) button:focus-visible,:where(.scalar-app) [role=button]:focus-visible{outline-offset:-1px}:where(.scalar-app) button,:where(.scalar-app) [role=button]{cursor:pointer}:where(.scalar-app) :disabled{cursor:default}:where(.scalar-app) img,:where(.scalar-app) svg,:where(.scalar-app) video,:where(.scalar-app) canvas,:where(.scalar-app) audio,:where(.scalar-app) iframe,:where(.scalar-app) embed,:where(.scalar-app) object{vertical-align:middle;display:block}:where(.scalar-app) [hidden]{display:none}.scalar-app .cm-scroller,.scalar-app .custom-scroll{scrollbar-color:transparent transparent;scrollbar-width:thin;-webkit-overflow-scrolling:touch;overflow-y:auto}.scalar-app .custom-scroll-self-contain-overflow{overscroll-behavior:contain}.scalar-app .cm-scroller:hover,.scalar-app .custom-scroll:hover,.scalar-app.scalar-scrollbars-obtrusive .cm-scroller,.scalar-app.scalar-scrollbars-obtrusive .custom-scroll{scrollbar-color:var(--scalar-scrollbar-color,transparent)transparent}.scalar-app .cm-scroller:hover::-webkit-scrollbar-thumb{background:var(--scalar-scrollbar-color);background-clip:content-box;border:3px solid #0000}.scalar-app .custom-scroll:hover::-webkit-scrollbar-thumb{background:var(--scalar-scrollbar-color);background-clip:content-box;border:3px solid #0000}.scalar-app .cm-scroller::-webkit-scrollbar-thumb:active{background:var(--scalar-scrollbar-color-active);background-clip:content-box;border:3px solid #0000}.scalar-app .custom-scroll::-webkit-scrollbar-thumb:active{background:var(--scalar-scrollbar-color-active);background-clip:content-box;border:3px solid #0000}.scalar-app .cm-scroller::-webkit-scrollbar-corner{background:0 0}.scalar-app .custom-scroll::-webkit-scrollbar-corner{background:0 0}.scalar-app .cm-scroller::-webkit-scrollbar{width:12px;height:12px}.scalar-app .custom-scroll::-webkit-scrollbar{width:12px;height:12px}.scalar-app .cm-scroller::-webkit-scrollbar-track{background:0 0}.scalar-app .custom-scroll::-webkit-scrollbar-track{background:0 0}.scalar-app .cm-scroller::-webkit-scrollbar-thumb{background:padding-box content-box;border:3px solid #0000;border-radius:20px}.scalar-app .custom-scroll::-webkit-scrollbar-thumb{background:padding-box content-box;border:3px solid #0000;border-radius:20px}@media (pointer:coarse){.scalar-app .cm-scroller,.scalar-app .custom-scroll{padding-right:12px}}.scalar-app .invisible{visibility:hidden}.scalar-app .inset-y-0{inset-block:0}.scalar-app .top-\\(--nested-items-offset\\){top:var(--nested-items-offset)}.scalar-app .top-0\\.5{top:2px}.scalar-app .top-22{top:88px}.scalar-app .top-px{top:1px}.scalar-app .left-2{left:8px}.scalar-app .left-2\\.5{left:10px}.scalar-app .left-4{left:16px}.scalar-app .left-10{left:40px}.scalar-app .left-border{left:var(--scalar-border-width)}.scalar-app .left-px{left:1px}.scalar-app .z-\\[1001\\]{z-index:1001}.scalar-app .z-tooltip{z-index:99999}.scalar-app .-m-1\\.5{margin:-6px}.scalar-app .-m-px{margin:-1px}.scalar-app .m-1{margin:4px}.scalar-app .-mx-0\\.75{margin-inline:-3px}.scalar-app .-mx-px{margin-inline:-1px}.scalar-app .mx-px{margin-inline:1px}.scalar-app .-my-1\\.5{margin-block:-6px}.scalar-app .my-0\\.75{margin-block:3px}.scalar-app .-mt-1\\.5{margin-top:-6px}.scalar-app .mt-0{margin-top:0}.scalar-app .mt-\\[15svh\\]{margin-top:15svh}.scalar-app .mt-\\[20svh\\]{margin-top:20svh}.scalar-app .-mr-0\\.25{margin-right:-1px}.scalar-app .mr-0{margin-right:0}.scalar-app .mr-\\[calc\\(20px-var\\(--scalar-sidebar-indent\\)\\)\\]{margin-right:calc(20px - var(--scalar-sidebar-indent))}.scalar-app .-mb-1{margin-bottom:-4px}.scalar-app .-ml-0\\.75{margin-left:-3px}.scalar-app .line-clamp-\\(--markdown-clamp\\){-webkit-line-clamp:var(--markdown-clamp);-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden}.scalar-app .\\!hidden{display:none!important}.scalar-app .inline{display:inline}.scalar-app .size-2{width:8px;height:8px}.scalar-app .size-6{width:24px;height:24px}.scalar-app .size-\\[23px\\]{width:23px;height:23px}.scalar-app .size-full{width:100%;height:100%}.scalar-app .h-0{height:0}.scalar-app .h-1{height:4px}.scalar-app .h-24{height:96px}.scalar-app .h-32{height:128px}.scalar-app .h-\\[100dvh\\]{height:100dvh}.scalar-app .h-border{height:var(--scalar-border-width)}.scalar-app .h-dvh{height:100dvh}.scalar-app .max-h-20{max-height:80px}.scalar-app .max-h-\\[80svh\\]{max-height:80svh}.scalar-app .max-h-\\[90svh\\]{max-height:90svh}.scalar-app .max-h-dvh{max-height:100dvh}.scalar-app .max-h-radix-popper{max-height:calc(var(--radix-popper-available-height) - 8px)}.scalar-app .min-h-5{min-height:20px}.scalar-app .min-h-6{min-height:24px}.scalar-app .min-h-96{min-height:384px}.scalar-app .min-h-header{min-height:48px}.scalar-app .w-12{width:48px}.scalar-app .w-16{width:64px}.scalar-app .w-24{width:96px}.scalar-app .w-32{width:128px}.scalar-app .w-40{width:160px}.scalar-app .w-48{width:192px}.scalar-app .w-\\[38px\\]{width:38px}.scalar-app .w-\\[100dvw\\]{width:100dvw}.scalar-app .w-\\[calc\\(100vw-12px\\)\\]{width:calc(100vw - 12px)}.scalar-app .w-\\[var\\(--scalar-sidebar-indent\\)\\]{width:var(--scalar-sidebar-indent)}.scalar-app .w-border{width:var(--scalar-border-width)}.scalar-app .w-min{width:min-content}.scalar-app .w-screen{width:100vw}.scalar-app .max-w-\\[360px\\]{max-width:360px}.scalar-app .max-w-\\[480px\\]{max-width:480px}.scalar-app .max-w-\\[540px\\]{max-width:540px}.scalar-app .max-w-\\[640px\\]{max-width:640px}.scalar-app .max-w-\\[800px\\]{max-width:800px}.scalar-app .max-w-\\[1000px\\]{max-width:1000px}.scalar-app .max-w-xs{max-width:320px}.scalar-app .min-w-5{min-width:20px}.scalar-app .min-w-6{min-width:24px}.scalar-app .min-w-max{min-width:max-content}.scalar-app .min-w-min{min-width:min-content}.scalar-app .flex-shrink,.scalar-app .shrink{flex-shrink:1}.scalar-app .border-collapse{border-collapse:collapse}.scalar-app .-translate-x-full{--tw-translate-x:-100%;translate:var(--tw-translate-x)var(--tw-translate-y)}.scalar-app .translate-x-2\\.5{--tw-translate-x:10px;translate:var(--tw-translate-x)var(--tw-translate-y)}.scalar-app .translate-x-\\[14px\\]{--tw-translate-x:14px;translate:var(--tw-translate-x)var(--tw-translate-y)}.scalar-app .translate-x-full{--tw-translate-x:100%;translate:var(--tw-translate-x)var(--tw-translate-y)}.scalar-app .rotate-180{rotate:180deg}.scalar-app .cursor-not-allowed{cursor:not-allowed}.scalar-app .appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.scalar-app .grid-flow-col{grid-auto-flow:column}.scalar-app .items-baseline{align-items:baseline}.scalar-app .gap-2\\.25{gap:9px}.scalar-app .gap-16{gap:64px}.scalar-app .gap-x-4{column-gap:16px}.scalar-app .gap-y-8{row-gap:32px}.scalar-app .self-end{align-self:flex-end}.scalar-app .overflow-x-clip{overflow-x:clip}.scalar-app .overflow-y-scroll{overflow-y:scroll}.scalar-app .overscroll-contain{overscroll-behavior:contain}.scalar-app .rounded-none{border-radius:0}.scalar-app .border-1,.scalar-app .border-\\[1px\\]{border-style:var(--tw-border-style);border-width:1px}.scalar-app .border-solid{--tw-border-style:solid;border-style:solid}.scalar-app .border-\\(--scalar-background-3\\){border-color:var(--scalar-background-3)}.scalar-app .border-border{border-color:var(--scalar-border-color)}.scalar-app .border-c-alert{border-color:var(--scalar-color-alert)}.scalar-app .border-c-danger{border-color:var(--scalar-color-danger)}.scalar-app .border-red{border-color:var(--scalar-color-red)}.scalar-app .border-sidebar-border{border-color:var(--scalar-sidebar-border-color,var(--scalar-border-color))}.scalar-app .border-sidebar-border-search{border-color:var(--scalar-sidebar-search-border-color,var(--scalar-border-color))}.scalar-app .bg-b-1,.scalar-app .bg-b-1\\.5{background-color:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.scalar-app .bg-b-1\\.5{background-color:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.scalar-app .bg-b-1\\.5{background-color:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.scalar-app .bg-b-1\\.5{background-color:color-mix(in srgb,var(--scalar-background-1),var(--scalar-background-2))}}}}.scalar-app .bg-b-alert{background-color:var(--scalar-background-alert)}.scalar-app .bg-b-btn{background-color:var(--scalar-button-1)}.scalar-app .bg-b-tooltip{background-color:var(--scalar-tooltip-background)}.scalar-app .bg-backdrop{background-color:#00000038}.scalar-app .bg-border{background-color:var(--scalar-border-color)}.scalar-app .bg-c-danger{background-color:var(--scalar-color-danger)}.scalar-app .bg-inherit{background-color:inherit}.scalar-app .bg-red{background-color:var(--scalar-color-red)}.scalar-app .bg-sidebar-b-1{background-color:var(--scalar-sidebar-background-1,var(--scalar-background-1))}.scalar-app .bg-sidebar-b-search{background-color:var(--scalar-sidebar-search-background,var(--scalar-background-2))}.scalar-app .bg-sidebar-indent-border{background-color:var(--scalar-sidebar-indent-border,var(--scalar-border-color))}.scalar-app .bg-sidebar-indent-border-active{background-color:var(--scalar-sidebar-indent-border-active,var(--scalar-color-accent))}.scalar-app .bg-transparent{background-color:#0000}.scalar-app .mask-repeat{-webkit-mask-repeat:repeat;mask-repeat:repeat}.scalar-app .p-0\\.25{padding:1px}.scalar-app .p-6{padding:24px}.scalar-app .px-9{padding-inline:36px}.scalar-app .py-4{padding-block:16px}.scalar-app .py-\\[6\\.75px\\]{padding-block:6.75px}.scalar-app .pl-8{padding-left:32px}.scalar-app .text-lg{font-size:var(--scalar-font-size-2)}.scalar-app .leading-5{--tw-leading:var(--scalar-line-height-5);line-height:var(--scalar-line-height-5)}.scalar-app .font-sidebar{--tw-font-weight:var(--scalar-sidebar-font-weight,var(--scalar-regular));font-weight:var(--scalar-sidebar-font-weight,var(--scalar-regular))}.scalar-app .font-sidebar-active{--tw-font-weight:var(--scalar-sidebar-font-weight-active,var(--scalar-semibold));font-weight:var(--scalar-sidebar-font-weight-active,var(--scalar-semibold))}.scalar-app .text-nowrap{text-wrap:nowrap}.scalar-app .text-wrap{text-wrap:wrap}.scalar-app .text-c-accent{color:var(--scalar-color-accent)}.scalar-app .text-c-alert{color:var(--scalar-color-alert)}.scalar-app .text-c-danger{color:var(--scalar-color-danger)}.scalar-app .text-c-tooltip{color:var(--scalar-tooltip-color)}.scalar-app .text-sidebar-c-search{color:var(--scalar-sidebar-search-color,var(--scalar-color-3))}.scalar-app .text-white{color:#fff}.scalar-app .opacity-40{opacity:.4}.scalar-app .shadow-sm{--tw-shadow:var(--tw-shadow-color,#00000017)0px 1px 4px;box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.scalar-app .-outline-offset-2{outline-offset:-2px}.scalar-app .outline-offset-1{outline-offset:1px}.scalar-app .outline-offset-\\[-1px\\]{outline-offset:-1px}.scalar-app .backdrop-blur{--tw-backdrop-blur:blur(8px);-webkit-backdrop-filter:var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,);backdrop-filter:var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,)}:is(.scalar-app .\\*\\:h-5>*){height:20px}:is(.scalar-app .\\*\\:min-w-5>*){min-width:20px}:is(.scalar-app .\\*\\:flex-1>*){flex:1}:is(.scalar-app .\\*\\:justify-center>*){justify-content:center}:is(.scalar-app .\\*\\:gap-px>*){gap:1px}:is(.scalar-app .\\*\\:rounded>*){border-radius:var(--scalar-radius)}:is(.scalar-app .\\*\\:border>*){border-style:var(--tw-border-style);border-width:var(--scalar-border-width)}:is(.scalar-app .\\*\\:border-border-tooltip>*){border-color:var(--scalar-tooltip-color)}@supports (color:color-mix(in lab,red,red)){:is(.scalar-app .\\*\\:border-border-tooltip>*){border-color:var(--scalar-tooltip-color)}@supports (color:color-mix(in lab,red,red)){:is(.scalar-app .\\*\\:border-border-tooltip>*){border-color:var(--scalar-tooltip-color)}@supports (color:color-mix(in lab,red,red)){:is(.scalar-app .\\*\\:border-border-tooltip>*){border-color:color-mix(in srgb,var(--scalar-tooltip-color),var(--scalar-tooltip-background))}}}}:is(.scalar-app .\\*\\:px-1>*){padding-inline:4px}@media (hover:hover){.scalar-app .group-hover\\:text-c-1:is(:where(.group):hover *){color:var(--scalar-color-1)}.scalar-app .group-hover\\/button\\:bg-sidebar-indent-border-hover:is(:where(.group\\/button):hover *){background-color:var(--scalar-sidebar-indent-border-hover,var(--scalar-border-color))}.scalar-app .group-hover\\/button\\:text-c-1:is(:where(.group\\/button):hover *){color:var(--scalar-color-1)}.scalar-app .group-hover\\/code-block\\:opacity-100:is(:where(.group\\/code-block):hover *){opacity:1}}.scalar-app .group-focus-visible\\/toggle\\:outline:is(:where(.group\\/toggle):focus-visible *){outline-style:var(--tw-outline-style);outline-width:1px}.scalar-app .peer-checked\\:text-c-2:is(:where(.peer):checked~*){color:var(--scalar-color-2)}.scalar-app .peer-checked\\:opacity-100:is(:where(.peer):checked~*){opacity:1}.scalar-app .placeholder\\:font-\\[inherit\\]::placeholder{font-family:inherit}:is(.scalar-app .\\*\\:first\\:rounded-t-\\[inherit\\]>*):first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}:is(.scalar-app .\\*\\:last\\:rounded-b-\\[inherit\\]>*):last-child{border-bottom-right-radius:inherit;border-bottom-left-radius:inherit}.scalar-app .focus-within\\:outline-none:focus-within{--tw-outline-style:none;outline-style:none}@media (hover:hover){.scalar-app .hover\\:bg-b-2:hover{background-color:var(--scalar-background-2)}.scalar-app .hover\\:bg-b-3:hover{background-color:var(--scalar-background-3)}.scalar-app .hover\\:bg-h-btn:hover{background-color:var(--scalar-button-1-hover)}.scalar-app .hover\\:text-c-1:hover{color:var(--scalar-color-1)}.scalar-app .hover\\:underline:hover{text-decoration-line:underline}.scalar-app .hover\\:brightness-90:hover{--tw-brightness:brightness(90%);filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)}}.scalar-app .focus-visible\\:border-c-btn:focus-visible{border-color:var(--scalar-button-1-color)}.scalar-app .focus-visible\\:opacity-100:focus-visible{opacity:1}.scalar-app .focus-visible\\:outline:focus-visible{outline-style:var(--tw-outline-style);outline-width:1px}.scalar-app .active\\:bg-b-btn:active{background-color:var(--scalar-button-1)}.scalar-app .active\\:shadow-none:active{--tw-shadow:0 0 #0000;box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.scalar-app .active\\:brightness-90:active{--tw-brightness:brightness(90%);filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)}.scalar-app .has-\\[\\:focus-visible\\]\\:outline:has(:focus-visible),.scalar-app .has-\\[input\\:focus-visible\\]\\:outline:has(:is(input:focus-visible)){outline-style:var(--tw-outline-style);outline-width:1px}@media (min-width:800px){.scalar-app .md\\:w-\\[calc\\(100vw-16px\\)\\]{width:calc(100vw - 16px)}}@media (min-width:1000px){.scalar-app .lg\\:w-\\[calc\\(100vw-32px\\)\\]{width:calc(100vw - 32px)}.scalar-app .lg\\:w-full{width:100%}}.scalar-app .dark\\:bg-b-3:where(.dark-mode,.dark-mode *){background-color:var(--scalar-background-3)}.scalar-app .dark\\:bg-backdrop-dark:where(.dark-mode,.dark-mode *){background-color:#00000073}@media (hover:hover){.scalar-app .dark\\:hover\\:bg-b-3:where(.dark-mode,.dark-mode *):hover{background-color:var(--scalar-background-3)}}@media (max-width:720px) and (max-height:480px){.scalar-app .zoomed\\:\\!whitespace-normal{white-space:normal!important}}.loader-wrapper[data-v-f525638b]{--loader-size:50%;justify-content:center;align-items:center;display:flex;position:relative}.svg-loader[data-v-f525638b]{width:var(--loader-size);height:var(--loader-size);fill:none;stroke:currentColor;background-color:#0000;top:1rem;right:.9rem;overflow:visible}.svg-path[data-v-f525638b]{stroke-width:12px;fill:none;transition:all .3s}.svg-x-mark[data-v-f525638b]{stroke-dasharray:57;stroke-dashoffset:57px;transition-delay:0s}.svg-check-mark[data-v-f525638b]{stroke-dasharray:149;stroke-dashoffset:149px;transition-delay:0s}.icon-is-invalid .svg-x-mark[data-v-f525638b],.icon-is-valid .svg-check-mark[data-v-f525638b]{stroke-dashoffset:0;transition-delay:.3s}.circular-loader[data-v-f525638b]{transform-origin:50%;background:0 0;animation:.7s linear infinite rotate-f525638b,.4s fade-in-f525638b;transform:scale(3.5)}.loader-path[data-v-f525638b]{stroke-dasharray:50 200;stroke-dashoffset:-100px;stroke-linecap:round}.loader-path-off[data-v-f525638b]{stroke-dasharray:50 200;stroke-dashoffset:-100px;opacity:0;transition:opacity .3s}.scalar-code-block:hover .scalar-code-copy[data-v-0295860a]{opacity:100}.copy-icon[data-v-0295860a],.check-icon[data-v-0295860a]{transition:transform .15s ease-in-out;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)scale(1)}.copy-icon.copied[data-v-0295860a],.check-icon[data-v-0295860a]{transform:translate(-50%,-50%)scale(0)}.check-icon.visible[data-v-0295860a]{transform:translate(-50%,-50%)scale(1)}.scalar-code-block{background:inherit;padding:10px 8px 12px 12px;position:relative;overflow:auto}.scalar-codeblock-pre{all:unset;text-wrap:nowrap;white-space-collapse:preserve;background:0 0;border-radius:0;width:fit-content;margin:0}.toggle-icon-ellipse[data-v-60be8692]{background:var(--scalar-background-1);border-radius:50%;width:7px;height:7px;transition:width .3s ease-in-out,height .3s ease-in-out;display:inline-block;position:relative;overflow:hidden;box-shadow:inset 0 0 0 1px}.toggle-icon-moon-mask[data-v-60be8692]{background:var(--scalar-background-1);border:1px solid;border-radius:50%;width:100%;height:100%;transition:transform .3s ease-in-out;display:block;position:absolute;bottom:2.5px;left:2.5px;transform:translate(4px,-4px)}.toggle-icon-sun-ray[data-v-60be8692]{background:currentColor;border-radius:8px;width:12px;height:1px;transition:transform .3s ease-in-out;position:absolute}.toggle-icon-sun-ray[data-v-60be8692]:nth-of-type(2){transform:rotate(90deg)}.toggle-icon-sun-ray[data-v-60be8692]:nth-of-type(3){transform:rotate(45deg)}.toggle-icon-sun-ray[data-v-60be8692]:nth-of-type(4){transform:rotate(-45deg)}.toggle-icon-dark .toggle-icon-ellipse[data-v-60be8692]{width:10px;height:10px;-webkit-mask-image:radial-gradient(circle at 0 100%,pink 10px,#0000 12px);mask-image:radial-gradient(circle at 0 100%,pink 10px,#0000 12px)}.toggle-icon-dark .toggle-icon-sun-ray[data-v-60be8692]{transform:scale(0)}.toggle-icon-dark .toggle-icon-moon-mask[data-v-60be8692]{transform:translateZ(0)}.search-icon[data-v-fcdffd02]{top:50%;transform:translateY(-50%)}.scalar-icon[data-v-b651bb23],.scalar-icon[data-v-b651bb23] *{stroke-width:var(--c07589c2)}.scalar-app :where(code.hljs) *{font-size:inherit;font-family:var(--scalar-font-code);text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;-moz-tab-size:4;tab-size:4;line-height:1.4}.scalar-app code.hljs{all:unset;font-size:inherit;color:var(--scalar-color-2);font-family:var(--scalar-font-code);counter-reset:linenumber}.scalar-app .hljs{color:var(--scalar-color-2);background:0 0}.scalar-app .hljs .line:before{color:var(--scalar-color-3);counter-increment:linenumber;content:counter(linenumber);min-width:calc(var(--line-digits)*1ch);text-align:right;margin-right:.875rem;display:inline-block}.scalar-app .hljs-comment,.scalar-app .hljs-quote{color:var(--scalar-color-3);font-style:italic}.scalar-app .hljs-number{color:var(--scalar-color-orange)}.scalar-app .hljs-regexp,.scalar-app .hljs-string,.scalar-app .hljs-built_in{color:var(--scalar-color-blue)}.scalar-app .hljs-title.class_{color:var(--scalar-color-1)}.scalar-app .hljs-keyword{color:var(--scalar-color-purple)}.scalar-app .hljs-title.function_{color:var(--scalar-color-orange)}.scalar-app .hljs-subst,.scalar-app .hljs-name{color:var(--scalar-color-blue)}.scalar-app .hljs-attr,.scalar-app .hljs-attribute{color:var(--scalar-color-1)}.scalar-app .hljs-addition,.scalar-app .hljs-literal,.scalar-app .hljs-selector-tag,.scalar-app .hljs-type{color:var(--scalar-color-green)}.scalar-app .hljs-selector-attr,.scalar-app .hljs-selector-pseudo{color:var(--scalar-color-orange)}.scalar-app .hljs-doctag,.scalar-app .hljs-section,.scalar-app .hljs-title{color:var(--scalar-color-blue)}.scalar-app .hljs-selector-id,.scalar-app .hljs-template-variable,.scalar-app .hljs-variable{color:var(--scalar-color-1)}.scalar-app .hljs-name,.scalar-app .hljs-section,.scalar-app .hljs-strong{font-weight:var(--scalar-semibold)}.scalar-app .hljs-bullet,.scalar-app .hljs-link,.scalar-app .hljs-meta,.scalar-app .hljs-symbol{color:var(--scalar-color-blue)}.scalar-app .hljs-deletion{color:var(--scalar-color-red)}.scalar-app .hljs-formula{background:var(--scalar-color-1)}.scalar-app .hljs-emphasis{font-style:italic}.scalar-app .credential .credential-value{color:#0000;font-size:0}.scalar-app .credential:after{content:"·····";color:var(--scalar-color-3);-webkit-user-select:none;user-select:none}.hljs.language-html{color:var(--scalar-color-1)}.hljs.language-html .hljs-attr{color:var(--scalar-color-2)}.hljs.language-curl .hljs-string{color:var(--scalar-color-blue)}.hljs.language-curl .hljs-literal{color:var(--scalar-color-1)}.hljs.language-php .hljs-variable{color:var(--scalar-color-blue)}.hljs.language-objectivec .hljs-meta{color:var(--scalar-color-1)}.hljs.language-objectivec .hljs-built_in,.hljs-built_in{color:var(--scalar-color-orange)}.scalar-app .markdown{--scalar-refs-heading-spacing:24px;--markdown-border:var(--scalar-border-width)solid var(--scalar-border-color);--markdown-spacing-sm:12px;--markdown-spacing-md:16px;--markdown-line-height:1.625;font-family:var(--scalar-font);word-break:break-word}.scalar-app .markdown>*{margin-bottom:var(--markdown-spacing-md)}.scalar-app .markdown>:not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):last-child{margin-bottom:0}.scalar-app .markdown h1{--font-size:1.5rem;--markdown-line-height:32px}.scalar-app .markdown h2,.scalar-app .markdown h3{--font-size:1.25rem;--markdown-line-height:1.3}.scalar-app .markdown h4,.scalar-app .markdown h5,.scalar-app .markdown h6{--font-size:1rem}.scalar-app .markdown h1,.scalar-app .markdown h2,.scalar-app .markdown h3,.scalar-app .markdown h4,.scalar-app .markdown h5,.scalar-app .markdown h6{font-size:var(--font-size);font-weight:var(--scalar-bold);margin-top:var(--scalar-refs-heading-spacing);margin-bottom:var(--markdown-spacing-sm);scroll-margin-top:1rem;display:block}.scalar-app .markdown b,.scalar-app .markdown strong{font-weight:var(--scalar-bold)}.scalar-app .markdown p{color:inherit;line-height:var(--markdown-line-height);display:block}.scalar-app .markdown img{border-radius:var(--scalar-radius);max-width:100%;overflow:hidden}.scalar-app .markdown ul:not(.contains-task-list),.scalar-app .markdown ol{flex-direction:column;gap:2px;display:flex}.scalar-app .markdown ul:not(.contains-task-list){margin-left:29px}.scalar-app .markdown ul:not(.contains-task-list) li{padding-left:calc(var(--markdown-spacing-md)/2)}.scalar-app .markdown ul{list-style-type:disc}.scalar-app .markdown li{line-height:var(--markdown-line-height)}.scalar-app .markdown ul li{padding-left:var(--markdown-spacing-md)}.scalar-app .markdown ol{counter-reset:item;padding-left:5px}.scalar-app .markdown ol li{gap:5px;padding-left:3px;display:flex}.scalar-app .markdown ol li:before{content:counter(item)".";counter-increment:item;font:var(--scalar-font);font-variant-numeric:tabular-nums;font-weight:var(--scalar-semibold);line-height:var(--markdown-line-height);white-space:nowrap;justify-content:center;width:24px;display:flex}.scalar-app .markdown ol li:before,.scalar-app .markdown ol ol ol li:before,.scalar-app .markdown ol ol ol ol ol ol li:before{content:counter(item,decimal)"."}.scalar-app .markdown ol ol li:before,.scalar-app .markdown ol ol ol ol li:before,.scalar-app .markdown ol ol ol ol ol ol ol li:before{content:counter(item,lower-alpha)"."}.scalar-app .markdown ol ol li:before,.scalar-app .markdown ol ol ol ol ol li:before,.scalar-app .markdown ol ol ol ol ol ol ol ol li:before{content:counter(item,lower-roman)"."}.scalar-app .markdown ul:first-of-type li:first-of-type{margin-top:0}.scalar-app .markdown table{table-layout:fixed;border-collapse:collapse;width:100%;box-shadow:0 0 0 var(--scalar-border-width) var(--scalar-border-color);border-radius:var(--scalar-radius);margin:1em 0;display:table;position:relative;overflow-x:auto}.scalar-app .markdown tbody,.scalar-app .markdown thead{vertical-align:middle}.scalar-app .markdown tbody{display:table-row-group}.scalar-app .markdown thead{display:table-header-group}.scalar-app .markdown tr{border-color:inherit;vertical-align:inherit;display:table-row}.scalar-app .markdown td,.scalar-app .markdown th{vertical-align:top;min-width:1em;line-height:var(--markdown-line-height);word-break:initial;font-size:var(--scalar-small);color:var(--scalar-color-1);border-right:var(--markdown-border);border-bottom:var(--markdown-border);padding:8.5px 16px;display:table-cell;position:relative}.scalar-app .markdown td>*,.scalar-app .markdown th>*{margin-bottom:0}.scalar-app .markdown th:empty{display:none}.scalar-app .markdown td:first-of-type,.scalar-app .markdown th:first-of-type{border-left:none}.scalar-app .markdown td:last-of-type,.scalar-app .markdown th:last-of-type{border-right:none}.scalar-app .markdown tr:last-of-type td{border-bottom:none}.scalar-app .markdown th{font-weight:var(--scalar-bold);text-align:left;background:var(--scalar-background-2);border-left-color:#0000}.scalar-app .markdown th:first-of-type{border-top-left-radius:var(--scalar-radius)}.scalar-app .markdown th:last-of-type{border-top-right-radius:var(--scalar-radius)}.scalar-app .markdown tr>[align=left]{text-align:left}.scalar-app .markdown tr>[align=right]{text-align:right}.scalar-app .markdown tr>[align=center]{text-align:center}.scalar-app .markdown details{border:var(--markdown-border);border-radius:var(--scalar-radius);color:var(--scalar-color-1)}.scalar-app .markdown details>:not(summary){margin:var(--markdown-spacing-md);margin-bottom:0}.scalar-app .markdown details>p:has(>strong):not(:has(:not(strong))){margin-bottom:8px}.scalar-app .markdown details>p:has(>strong):not(:has(:not(strong)))+*{margin-top:0}.scalar-app .markdown details>table{width:calc(100% - calc(var(--markdown-spacing-md)*2))}.scalar-app .markdown summary{min-height:40px;font-weight:var(--scalar-semibold);line-height:var(--markdown-line-height);cursor:pointer;-webkit-user-select:none;user-select:none;border-radius:2.5px;align-items:flex-start;gap:8px;padding:7px 14px;display:flex;position:relative}.scalar-app .markdown summary:hover{background-color:var(--scalar-background-2)}.scalar-app .markdown details[open]{padding-bottom:var(--markdown-spacing-md)}.scalar-app .markdown details[open]>summary{border-bottom:var(--markdown-border);border-bottom-right-radius:0;border-bottom-left-radius:0}.scalar-app .markdown summary:before{content:"";width:var(--markdown-spacing-md);height:var(--markdown-spacing-md);background-color:var(--scalar-color-3);flex-shrink:0;margin-top:5px;display:block;-webkit-mask-image:url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" width="1em" height="1em"><path d="M181.66,133.66l-80,80a8,8,0,0,1-11.32-11.32L164.69,128,90.34,53.66a8,8,0,0,1,11.32-11.32l80,80A8,8,0,0,1,181.66,133.66Z"></path></svg>');mask-image:url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" width="1em" height="1em"><path d="M181.66,133.66l-80,80a8,8,0,0,1-11.32-11.32L164.69,128,90.34,53.66a8,8,0,0,1,11.32-11.32l80,80A8,8,0,0,1,181.66,133.66Z"></path></svg>')}.scalar-app .markdown summary:hover:before{background-color:var(--scalar-color-1)}.scalar-app .markdown details[open]>summary:before{transition:transform .1s ease-in-out;transform:rotate(90deg)}.scalar-app .markdown details:has(+details){border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0;margin-bottom:0}.scalar-app .markdown details:has(+details)+details,.scalar-app .markdown details:has(+details)+details>summary{border-top-left-radius:0;border-top-right-radius:0}.scalar-app .markdown a{--font-color:var(--scalar-link-color,var(--scalar-color-accent));--font-visited:var(--scalar-link-color-visited,var(--scalar-color-2));-webkit-text-decoration:var(--scalar-text-decoration);text-decoration:var(--scalar-text-decoration);color:var(--font-color);font-weight:var(--scalar-link-font-weight,var(--scalar-semibold));text-underline-offset:.25rem;text-decoration-thickness:1px;-webkit-text-decoration-color:var(--font-color);text-decoration-color:var(--font-color)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown a{-webkit-text-decoration-color:var(--font-color)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown a{-webkit-text-decoration-color:color-mix(in srgb,var(--font-color)30%,transparent)}}.scalar-app .markdown a{-webkit-text-decoration-color:var(--font-color);text-decoration-color:var(--font-color)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown a{-webkit-text-decoration-color:color-mix(in srgb,var(--font-color)30%,transparent);text-decoration-color:color-mix(in srgb,var(--font-color)30%,transparent)}}}.scalar-app .markdown a:hover{color:var(--scalar-link-color-hover,var(--scalar-color-accent));-webkit-text-decoration:var(--scalar-text-decoration-hover);text-decoration:var(--scalar-text-decoration-hover)}.scalar-app .markdown a:visited{color:var(--font-visited)}.scalar-app .markdown em{font-style:italic}.scalar-app .markdown sup,.scalar-app .markdown sub{font-size:var(--scalar-micro);font-weight:450}.scalar-app .markdown sup{vertical-align:super}.scalar-app .markdown sub{vertical-align:sub}.scalar-app .markdown del{text-decoration:line-through}.scalar-app .markdown code{font-family:var(--scalar-font-code);background-color:var(--scalar-background-2);box-shadow:0 0 0 var(--scalar-border-width) var(--scalar-border-color);font-size:var(--scalar-micro);border-radius:2px;padding:0 3px}.scalar-app .markdown .hljs{font-size:var(--scalar-small)}.scalar-app .markdown pre code{white-space:pre;padding:var(--markdown-spacing-sm);margin:var(--markdown-spacing-sm)0;-webkit-overflow-scrolling:touch;min-width:100px;max-width:100%;line-height:1.5;display:block;overflow-x:auto}.scalar-app .markdown hr{border:none;border-bottom:var(--markdown-border)}.scalar-app .markdown blockquote{border-left:1px solid var(--scalar-color-1);padding-left:var(--markdown-spacing-md);font-weight:var(--scalar-bold);font-size:var(--scalar-font-size-2);margin:0;display:block}.scalar-app .markdown .contains-task-list{flex-direction:column;gap:2px;list-style:none;display:flex}.scalar-app .markdown .contains-task-list li{align-items:center;gap:10.5px;padding-left:10.5px;display:flex}.scalar-app .markdown .contains-task-list input{-webkit-appearance:none;-moz-appearance:none;appearance:none;width:var(--markdown-spacing-md);height:var(--markdown-spacing-md);border:1px solid var(--scalar-color-3);border-radius:var(--scalar-radius);place-content:center;display:flex;position:relative}.scalar-app .markdown .contains-task-list input:checked{background-color:var(--scalar-color-1);border-color:var(--scalar-color-1)}.scalar-app .markdown .contains-task-list input[type=checkbox]:before{content:"";border:solid var(--scalar-background-1);opacity:0;border-width:0 1.5px 1.5px 0;width:5px;height:10px;position:absolute;top:1px;left:5px;transform:rotate(45deg)}.scalar-app .markdown .contains-task-list input[type=checkbox]:checked:before{opacity:1}.scalar-app .markdown .markdown-alert{border-radius:var(--scalar-radius);background-color:var(--scalar-background-2);align-items:stretch}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert{background-color:var(--scalar-background-2)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert{background-color:color-mix(in srgb,var(--scalar-background-2),transparent)}}}.scalar-app .markdown .markdown-alert{border:var(--markdown-border);gap:var(--markdown-spacing-sm);padding:10px 14px;display:flex;position:relative}.scalar-app .markdown .markdown-alert .markdown-alert-icon:before{content:"";background-color:currentColor;flex-shrink:0;width:18px;height:18px;margin-top:3px;display:block;-webkit-mask-position:50%;mask-position:50%;-webkit-mask-size:contain;mask-size:contain;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat}.scalar-app .markdown .markdown-alert.markdown-alert-note{background-color:var(--scalar-color-blue)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-note{background-color:var(--scalar-color-blue)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-note{background-color:color-mix(in srgb,var(--scalar-color-blue),transparent 97%)}}}.scalar-app .markdown .markdown-alert.markdown-alert-note{border:var(--scalar-border-width)solid var(--scalar-color-blue)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-note{border:var(--scalar-border-width)solid var(--scalar-color-blue)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-note{border:var(--scalar-border-width)solid color-mix(in srgb,var(--scalar-color-blue),transparent 50%)}}}.scalar-app .markdown .markdown-alert.markdown-alert-tip{background-color:var(--scalar-color-2)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-tip{background-color:var(--scalar-color-2)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-tip{background-color:color-mix(in srgb,var(--scalar-color-2),transparent 97%)}}}.scalar-app .markdown .markdown-alert.markdown-alert-tip{border:var(--scalar-border-width)solid var(--scalar-color-2)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-tip{border:var(--scalar-border-width)solid var(--scalar-color-2)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-tip{border:var(--scalar-border-width)solid color-mix(in srgb,var(--scalar-color-2),transparent 50%)}}}.scalar-app .markdown .markdown-alert.markdown-alert-note .markdown-alert-icon:before,.scalar-app .markdown .markdown-alert.markdown-alert-tip .markdown-alert-icon:before{color:var(--scalar-color-blue);-webkit-mask-image:url('data:image/svg+xml,<svg data-v-852d534d="" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" class="icon-placeholder"><path d="M128,24A104,104,0,1,0,232,128,104.11,104.11,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Zm16-40a8,8,0,0,1-8,8,16,16,0,0,1-16-16V128a8,8,0,0,1,0-16,16,16,0,0,1,16,16v40A8,8,0,0,1,144,176ZM112,84a12,12,0,1,1,12,12A12,12,0,0,1,112,84Z"></path></svg>');mask-image:url('data:image/svg+xml,<svg data-v-852d534d="" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" class="icon-placeholder"><path d="M128,24A104,104,0,1,0,232,128,104.11,104.11,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Zm16-40a8,8,0,0,1-8,8,16,16,0,0,1-16-16V128a8,8,0,0,1,0-16,16,16,0,0,1,16,16v40A8,8,0,0,1,144,176ZM112,84a12,12,0,1,1,12,12A12,12,0,0,1,112,84Z"></path></svg>')}.scalar-app .markdown .markdown-alert.markdown-alert-important,.scalar-app .markdown .markdown-alert.markdown-alert-warning{background-color:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-important,.scalar-app .markdown .markdown-alert.markdown-alert-warning{background-color:var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-important,.scalar-app .markdown .markdown-alert.markdown-alert-warning{background-color:color-mix(in srgb,var(--scalar-color-orange),transparent 97%)}}}.scalar-app .markdown .markdown-alert.markdown-alert-important,.scalar-app .markdown .markdown-alert.markdown-alert-warning{border:var(--scalar-border-width)solid var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-important,.scalar-app .markdown .markdown-alert.markdown-alert-warning{border:var(--scalar-border-width)solid var(--scalar-color-orange)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-important,.scalar-app .markdown .markdown-alert.markdown-alert-warning{border:var(--scalar-border-width)solid color-mix(in srgb,var(--scalar-color-orange),transparent 50%)}}}.scalar-app .markdown .markdown-alert.markdown-alert-important .markdown-alert-icon:before,.scalar-app .markdown .markdown-alert.markdown-alert-warning .markdown-alert-icon:before{-webkit-mask-image:url('data:image/svg+xml,<svg data-v-852d534d="" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" class="icon-placeholder"><path d="M236.8,188.09,149.35,36.22h0a24.76,24.76,0,0,0-42.7,0L19.2,188.09a23.51,23.51,0,0,0,0,23.72A24.35,24.35,0,0,0,40.55,224h174.9a24.35,24.35,0,0,0,21.33-12.19A23.51,23.51,0,0,0,236.8,188.09ZM222.93,203.8a8.5,8.5,0,0,1-7.48,4.2H40.55a8.5,8.5,0,0,1-7.48-4.2,7.59,7.59,0,0,1,0-7.72L120.52,44.21a8.75,8.75,0,0,1,15,0l87.45,151.87A7.59,7.59,0,0,1,222.93,203.8ZM120,144V104a8,8,0,0,1,16,0v40a8,8,0,0,1-16,0Zm20,36a12,12,0,1,1-12-12A12,12,0,0,1,140,180Z"></path></svg>');mask-image:url('data:image/svg+xml,<svg data-v-852d534d="" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" class="icon-placeholder"><path d="M236.8,188.09,149.35,36.22h0a24.76,24.76,0,0,0-42.7,0L19.2,188.09a23.51,23.51,0,0,0,0,23.72A24.35,24.35,0,0,0,40.55,224h174.9a24.35,24.35,0,0,0,21.33-12.19A23.51,23.51,0,0,0,236.8,188.09ZM222.93,203.8a8.5,8.5,0,0,1-7.48,4.2H40.55a8.5,8.5,0,0,1-7.48-4.2,7.59,7.59,0,0,1,0-7.72L120.52,44.21a8.75,8.75,0,0,1,15,0l87.45,151.87A7.59,7.59,0,0,1,222.93,203.8ZM120,144V104a8,8,0,0,1,16,0v40a8,8,0,0,1-16,0Zm20,36a12,12,0,1,1-12-12A12,12,0,0,1,140,180Z"></path></svg>')}.scalar-app .markdown .markdown-alert.markdown-alert-caution{background-color:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-caution{background-color:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-caution{background-color:color-mix(in srgb,var(--scalar-color-red),transparent 97%)}}}.scalar-app .markdown .markdown-alert.markdown-alert-caution{border:var(--scalar-border-width)solid var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-caution{border:var(--scalar-border-width)solid var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-caution{border:var(--scalar-border-width)solid color-mix(in srgb,var(--scalar-color-red),transparent 50%)}}}.scalar-app .markdown .markdown-alert.markdown-alert-caution .markdown-alert-icon:before{color:var(--scalar-color-red);-webkit-mask-image:url('data:image/svg+xml,<svg data-v-852d534d="" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" class="icon-placeholder"><path d="M128,24A104,104,0,1,0,232,128,104.11,104.11,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Zm-8-80V80a8,8,0,0,1,16,0v56a8,8,0,0,1-16,0Zm20,36a12,12,0,1,1-12-12A12,12,0,0,1,140,172Z"></path></svg>');mask-image:url('data:image/svg+xml,<svg data-v-852d534d="" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" class="icon-placeholder"><path d="M128,24A104,104,0,1,0,232,128,104.11,104.11,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Zm-8-80V80a8,8,0,0,1,16,0v56a8,8,0,0,1-16,0Zm20,36a12,12,0,1,1-12-12A12,12,0,0,1,140,172Z"></path></svg>')}.scalar-app .markdown .markdown-alert.markdown-alert-success{background-color:var(--scalar-color-green)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-success{background-color:var(--scalar-color-green)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-success{background-color:color-mix(in srgb,var(--scalar-color-green),transparent 97%)}}}.scalar-app .markdown .markdown-alert.markdown-alert-success{border:var(--scalar-border-width)solid var(--scalar-color-green)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-success{border:var(--scalar-border-width)solid var(--scalar-color-green)}@supports (color:color-mix(in lab,red,red)){.scalar-app .markdown .markdown-alert.markdown-alert-success{border:var(--scalar-border-width)solid color-mix(in srgb,var(--scalar-color-green),transparent 50%)}}}.scalar-app .markdown .markdown-alert.markdown-alert-success .markdown-alert-icon:before{color:var(--scalar-color-green);-webkit-mask-image:url('data:image/svg+xml,<svg data-v-852d534d="" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" class="icon-placeholder"><path d="M173.66,98.34a8,8,0,0,1,0,11.32l-56,56a8,8,0,0,1-11.32,0l-24-24a8,8,0,0,1,11.32-11.32L112,148.69l50.34-50.35A8,8,0,0,1,173.66,98.34ZM232,128A104,104,0,1,1,128,24,104.11,104.11,0,0,1,232,128Zm-16,0a88,88,0,1,0-88,88A88.1,88.1,0,0,0,216,128Z"></path></svg>');mask-image:url('data:image/svg+xml,<svg data-v-852d534d="" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" class="icon-placeholder"><path d="M173.66,98.34a8,8,0,0,1,0,11.32l-56,56a8,8,0,0,1-11.32,0l-24-24a8,8,0,0,1,11.32-11.32L112,148.69l50.34-50.35A8,8,0,0,1,173.66,98.34ZM232,128A104,104,0,1,1,128,24,104.11,104.11,0,0,1,232,128Zm-16,0a88,88,0,1,0-88,88A88.1,88.1,0,0,0,216,128Z"></path></svg>')}.scalar-app .markdown .markdown-alert.markdown-alert-note .markdown-alert-icon:before{color:var(--scalar-color-blue)}.scalar-app .markdown .markdown-alert.markdown-alert-tip .markdown-alert-icon:before{color:var(--scalar-color-2)}.scalar-app .markdown .markdown-alert.markdown-alert-important .markdown-alert-icon:before{color:var(--scalar-color-purple)}.scalar-app .markdown .markdown-alert.markdown-alert-warning .markdown-alert-icon:before{color:var(--scalar-color-orange)}.scalar-app .markdown .markdown-alert .markdown-alert-content{line-height:var(--markdown-line-height);margin:0}.scalar-app .markdown.markdown-summary.markdown-summary :before,.scalar-app .markdown.markdown-summary.markdown-summary :after{content:none}.scalar-app .markdown.markdown-summary.markdown-summary :not(strong,em,a){font-size:inherit;font-weight:inherit;line-height:var(--markdown-line-height);display:contents}.scalar-app .markdown.markdown-summary.markdown-summary img,.scalar-app .markdown.markdown-summary.markdown-summary svg,.scalar-app .markdown.markdown-summary.markdown-summary hr,.scalar-app .markdown.markdown-summary.markdown-summary pre{display:none}.dark-mode .scalar-dropdown-item[data-v-cc5bd05e]:hover{filter:brightness(1.1)}.group\\/item>*>.scalar-sidebar-indent .scalar-sidebar-indent-border[data-v-3e080c68]{inset-block:-1px}.group\\/item:first-child>*>.scalar-sidebar-indent .scalar-sidebar-indent-border[data-v-3e080c68]{top:0}.group\\/item:last-child>*>.scalar-sidebar-indent .scalar-sidebar-indent-border[data-v-3e080c68]{bottom:0}.group\\/items.-translate-x-full .group\\/button{transition-behavior:allow-discrete;max-height:0;transition-property:display,max-height;transition-duration:0s;transition-delay:.3s;display:none}.group\\/item.group\\/nested-items-open>*>.group\\/items.translate-x-0 .group\\/button{max-height:3.40282e38px;display:flex}:where(body)>.scalar-tooltip{--scalar-tooltip-padding:8px;padding:calc(var(--scalar-tooltip-padding) + var(--scalar-tooltip-offset));z-index:99999;max-width:320px;font-size:var(--scalar-font-size-5);--tw-leading:var(--scalar-line-height-5);line-height:var(--scalar-line-height-5);--tw-font-weight:var(--scalar-semibold);font-weight:var(--scalar-semibold);overflow-wrap:break-word;color:var(--scalar-tooltip-color)}:where(body)>.scalar-tooltip:before{content:"";inset:var(--scalar-tooltip-offset);z-index:-1;border-radius:var(--scalar-radius);background-color:var(--scalar-tooltip-background);--tw-backdrop-blur:blur(8px);-webkit-backdrop-filter:var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,);backdrop-filter:var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,);position:absolute}:where(body.dark-mode)>.scalar-tooltip:before{--tw-shadow:inset 0 0 0 var(--tw-shadow-color,calc(var(--scalar-border-width)*2))var(--scalar-border-color);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.dark-mode .scalar-dropdown-item[data-v-457c1cd3]:hover{filter:brightness(1.1)}.scalar-modal-layout[data-v-589f8aa0]{animation:.3s ease-in-out forwards fadein-layout-589f8aa0}.scalar-modal[data-v-589f8aa0]{box-shadow:var(--scalar-shadow-2);animation:.3s ease-in-out .1s forwards fadein-modal-589f8aa0;transform:translateY(10px)}.scalar-modal-layout-full[data-v-589f8aa0]{opacity:1!important;background:0 0!important}.modal-content-search .modal-body[data-v-589f8aa0]{flex-direction:column;max-height:440px;padding:0;display:flex;overflow:hidden}@media (max-width:720px) and (max-height:480px){.scalar-modal-layout .scalar-modal[data-v-589f8aa0]{max-height:90svh;margin-top:5svh}}.full-size-styles[data-v-589f8aa0]{margin:initial;border-right:var(--scalar-border-width)solid var(--scalar-border-color);animation:.3s ease-in-out forwards fadein-layout-589f8aa0;left:0;transform:translate(0);background-color:var(--scalar-background-1)!important;max-height:100%!important;box-shadow:none!important;border-radius:0!important;position:absolute!important;top:0!important}@media (min-width:800px){.full-size-styles[data-v-589f8aa0]{width:50dvw!important}}.full-size-styles[data-v-589f8aa0]:after{content:"";width:50dvw;height:100dvh;position:absolute;top:0;right:-50dvw}.scalar-app .pointer-events-auto{pointer-events:auto}.scalar-app .pointer-events-none{pointer-events:none}.scalar-app .collapse{visibility:collapse}.scalar-app .visible{visibility:visible}.scalar-app .floating-bg:before{background-color:var(--scalar-background-2);border-radius:var(--scalar-radius);content:"";opacity:0;z-index:1;width:calc(100% + 8px);height:calc(100% - 4px);transition:opacity .2s ease-in-out;position:absolute;top:2.5px;left:-4px}.scalar-app .floating-bg:hover:before{opacity:1}.scalar-app .centered{--tw-translate-y:-50%;--tw-translate-x:-50%;translate:var(--tw-translate-x)var(--tw-translate-y);position:absolute;top:50%;left:50%}.scalar-app .centered-y{--tw-translate-y:-50%;translate:var(--tw-translate-x)var(--tw-translate-y);position:absolute;top:50%}.scalar-app .centered-x{--tw-translate-x:-50%;translate:var(--tw-translate-x)var(--tw-translate-y);position:absolute;left:50%}.scalar-app .sr-only{clip:rect(0,0,0,0);white-space:nowrap;border-width:0;width:1px;height:1px;margin:-1px;padding:0;position:absolute;overflow:hidden}.scalar-app .absolute{position:absolute}.scalar-app .fixed{position:fixed}.scalar-app .relative{position:relative}.scalar-app .static{position:static}.scalar-app .sticky{position:sticky}.scalar-app .inset-0{top:0;right:0;bottom:0;left:0}.scalar-app .inset-x-1{inset-inline:4px}.scalar-app .-top-\\(--scalar-address-bar-height\\){top:calc(var(--scalar-address-bar-height)*-1)}.scalar-app .-top-\\[104px\\]{top:-104px}.scalar-app .top-0{top:0}.scalar-app .top-2{top:8px}.scalar-app .top-12{top:48px}.scalar-app .-right-\\[30px\\]{right:-30px}.scalar-app .right-0{right:0}.scalar-app .right-1{right:4px}.scalar-app .right-1\\.5{right:6px}.scalar-app .right-1\\/2{right:50%}.scalar-app .right-2{right:8px}.scalar-app .right-4{right:16px}.scalar-app .right-7{right:28px}.scalar-app .right-14{right:56px}.scalar-app .right-16{right:64px}.scalar-app .bottom-0{bottom:0}.scalar-app .bottom-1{bottom:4px}.scalar-app .bottom-1\\/2{bottom:50%}.scalar-app .bottom-\\[var\\(--scalar-border-width\\)\\]{bottom:var(--scalar-border-width)}.scalar-app .left-0{left:0}.scalar-app .left-1\\/2{left:50%}.scalar-app .left-3{left:12px}.scalar-app .-z-1{z-index:-1}.scalar-app .z-0{z-index:0}.scalar-app .z-1{z-index:1}.scalar-app .z-10{z-index:10}.scalar-app .z-20{z-index:20}.scalar-app .z-50{z-index:50}.scalar-app .z-\\[1\\]{z-index:1}.scalar-app .z-\\[1002\\]{z-index:1002}.scalar-app .z-context{z-index:1000}.scalar-app .z-context-plus{z-index:1001}.scalar-app .z-overlay{z-index:10000}.scalar-app .order-last{order:9999}.scalar-app .col-span-full{grid-column:1/-1}.scalar-app .container{width:100%}@media (min-width:400px){.scalar-app .container{max-width:400px}}@media (min-width:600px){.scalar-app .container{max-width:600px}}@media (min-width:800px){.scalar-app .container{max-width:800px}}@media (min-width:1000px){.scalar-app .container{max-width:1000px}}@media (min-width:1200px){.scalar-app .container{max-width:1200px}}@media (min-width:96rem){.scalar-app .container{max-width:96rem}}.scalar-app .\\!m-0{margin:0!important}.scalar-app .-m-0\\.5{margin:-2px}.scalar-app .m-0{margin:0}.scalar-app .m-4{margin:16px}.scalar-app .m-auto{margin:auto}.scalar-app .-mx-0\\.25{margin-inline:-1px}.scalar-app .mx-auto{margin-inline:auto}.scalar-app .-my-1{margin-block:-4px}.scalar-app .my-12{margin-block:48px}.scalar-app .-mt-\\[\\.5px\\]{margin-top:-.5px}.scalar-app .mt-0\\.25{margin-top:1px}.scalar-app .mt-1{margin-top:4px}.scalar-app .mt-1\\.5{margin-top:6px}.scalar-app .mt-2{margin-top:8px}.scalar-app .mt-3{margin-top:12px}.scalar-app .mt-5{margin-top:20px}.scalar-app .mt-10{margin-top:40px}.scalar-app .mt-\\[0\\.5px\\]{margin-top:.5px}.scalar-app .mt-auto{margin-top:auto}.scalar-app .\\!mr-0{margin-right:0!important}.scalar-app .-mr-0\\.5{margin-right:-2px}.scalar-app .-mr-1{margin-right:-4px}.scalar-app .-mr-1\\.5{margin-right:-6px}.scalar-app .-mr-3{margin-right:-12px}.scalar-app .mr-0\\.5{margin-right:2px}.scalar-app .mr-0\\.75{margin-right:3px}.scalar-app .mr-1{margin-right:4px}.scalar-app .mr-1\\.5{margin-right:6px}.scalar-app .mr-1\\.25{margin-right:5px}.scalar-app .mr-2{margin-right:8px}.scalar-app .mr-2\\.5{margin-right:10px}.scalar-app .mr-3{margin-right:12px}.scalar-app .mr-\\[6\\.25px\\]{margin-right:6.25px}.scalar-app .mr-auto{margin-right:auto}.scalar-app .\\!mb-0{margin-bottom:0!important}.scalar-app .-mb-\\[var\\(--scalar-border-width\\)\\]{margin-bottom:calc(var(--scalar-border-width)*-1)}.scalar-app .mb-0{margin-bottom:0}.scalar-app .mb-1{margin-bottom:4px}.scalar-app .mb-1\\.5{margin-bottom:6px}.scalar-app .mb-2{margin-bottom:8px}.scalar-app .mb-4{margin-bottom:16px}.scalar-app .mb-\\[\\.5px\\]{margin-bottom:.5px}.scalar-app .-ml-0\\.5{margin-left:-2px}.scalar-app .-ml-0\\.25{margin-left:-1px}.scalar-app .-ml-1{margin-left:-4px}.scalar-app .-ml-2{margin-left:-8px}.scalar-app .-ml-12{margin-left:-48px}.scalar-app .ml-0\\.5{margin-left:2px}.scalar-app .ml-0\\.75{margin-left:3px}.scalar-app .ml-1{margin-left:4px}.scalar-app .ml-1\\.25{margin-left:5px}.scalar-app .ml-3{margin-left:12px}.scalar-app .ml-auto{margin-left:auto}.scalar-app .box-border{box-sizing:border-box}.scalar-app .box-content{box-sizing:content-box}.scalar-app .flex-center{justify-content:center;align-items:center;display:flex}.scalar-app .line-clamp-1{-webkit-line-clamp:1;-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden}.scalar-app .\\!block{display:block!important}.scalar-app .\\!flex{display:flex!important}.scalar-app .block{display:block}.scalar-app .contents{display:contents}.scalar-app .flex{display:flex}.scalar-app .grid{display:grid}.scalar-app .hidden{display:none}.scalar-app .inline-block{display:inline-block}.scalar-app .inline-flex{display:inline-flex}.scalar-app .table{display:table}.scalar-app .aspect-\\[4\\/3\\]{aspect-ratio:4/3}.scalar-app .aspect-square{aspect-ratio:1}.scalar-app .size-2\\.5{width:10px;height:10px}.scalar-app .size-3{width:12px;height:12px}.scalar-app .size-3\\.5{width:14px;height:14px}.scalar-app .size-3\\/4{width:75%;height:75%}.scalar-app .size-4{width:16px;height:16px}.scalar-app .size-5{width:20px;height:20px}.scalar-app .size-7{width:28px;height:28px}.scalar-app .size-8{width:32px;height:32px}.scalar-app .size-10{width:40px;height:40px}.scalar-app .h-\\(--scalar-address-bar-height\\){height:var(--scalar-address-bar-height)}.scalar-app .h-1\\.5{height:6px}.scalar-app .h-2\\.5{height:10px}.scalar-app .h-2\\.25{height:9px}.scalar-app .h-3{height:12px}.scalar-app .h-3\\.5{height:14px}.scalar-app .h-4{height:16px}.scalar-app .h-5{height:20px}.scalar-app .h-6{height:24px}.scalar-app .h-7{height:28px}.scalar-app .h-8{height:32px}.scalar-app .h-9{height:36px}.scalar-app .h-10{height:40px}.scalar-app .h-12{height:48px}.scalar-app .h-64{height:256px}.scalar-app .h-\\[68px\\]{height:68px}.scalar-app .h-\\[calc\\(100\\%-273\\.5px\\)\\]{height:calc(100% - 273.5px)}.scalar-app .h-\\[calc\\(100\\%_-_50px\\)\\]{height:calc(100% - 50px)}.scalar-app .h-auto{height:auto}.scalar-app .h-fit{height:fit-content}.scalar-app .h-full{height:100%}.scalar-app .h-header{height:48px}.scalar-app .h-px{height:1px}.scalar-app .h-screen{height:100vh}.scalar-app .\\!max-h-\\[initial\\]{max-height:initial!important}.scalar-app .max-h-8{max-height:32px}.scalar-app .max-h-40{max-height:160px}.scalar-app .max-h-\\[40dvh\\]{max-height:40dvh}.scalar-app .max-h-\\[50dvh\\]{max-height:50dvh}.scalar-app .max-h-\\[60svh\\]{max-height:60svh}.scalar-app .max-h-\\[auto\\]{max-height:auto}.scalar-app .max-h-\\[calc\\(100\\%-32px\\)\\]{max-height:calc(100% - 32px)}.scalar-app .max-h-\\[inherit\\]{max-height:inherit}.scalar-app .max-h-fit{max-height:fit-content}.scalar-app .max-h-screen{max-height:100vh}.scalar-app .min-h-0{min-height:0}.scalar-app .min-h-8{min-height:32px}.scalar-app .min-h-10{min-height:40px}.scalar-app .min-h-11{min-height:44px}.scalar-app .min-h-12{min-height:48px}.scalar-app .min-h-16{min-height:64px}.scalar-app .min-h-20{min-height:80px}.scalar-app .min-h-\\[65px\\]{min-height:65px}.scalar-app .min-h-\\[calc\\(1rem\\*4\\)\\]{min-height:4rem}.scalar-app .min-h-\\[calc\\(4rem\\+0\\.5px\\)\\]{min-height:calc(4rem + .5px)}.scalar-app .min-h-\\[calc\\(4rem\\+1px\\)\\]{min-height:calc(4rem + 1px)}.scalar-app .min-h-fit{min-height:fit-content}.scalar-app .\\!w-fit{width:fit-content!important}.scalar-app .w-0\\.5{width:2px}.scalar-app .w-1\\.5{width:6px}.scalar-app .w-1\\/2{width:50%}.scalar-app .w-2\\.5{width:10px}.scalar-app .w-2\\.25{width:9px}.scalar-app .w-3{width:12px}.scalar-app .w-3\\.5{width:14px}.scalar-app .w-4{width:16px}.scalar-app .w-5{width:20px}.scalar-app .w-6{width:24px}.scalar-app .w-7{width:28px}.scalar-app .w-8{width:32px}.scalar-app .w-10{width:40px}.scalar-app .w-20{width:80px}.scalar-app .w-56{width:224px}.scalar-app .w-64{width:256px}.scalar-app .w-72{width:288px}.scalar-app .w-\\[60px\\]{width:60px}.scalar-app .w-\\[calc\\(100\\%-10px\\)\\]{width:calc(100% - 10px)}.scalar-app .w-\\[calc\\(100\\%_-_8px\\)\\]{width:calc(100% - 8px)}.scalar-app .w-\\[inherit\\]{width:inherit}.scalar-app .w-auto{width:auto}.scalar-app .w-dvw{width:100dvw}.scalar-app .w-fit{width:fit-content}.scalar-app .w-full{width:100%}.scalar-app .w-max{width:max-content}.scalar-app .max-w-8{max-width:32px}.scalar-app .max-w-40{max-width:160px}.scalar-app .max-w-48{max-width:192px}.scalar-app .max-w-\\[14px\\]{max-width:14px}.scalar-app .max-w-\\[37px\\]{max-width:37px}.scalar-app .max-w-\\[100\\%\\]{max-width:100%}.scalar-app .max-w-\\[150px\\]{max-width:150px}.scalar-app .max-w-\\[380px\\]{max-width:380px}.scalar-app .max-w-\\[420px\\]{max-width:420px}.scalar-app .max-w-\\[720px\\]{max-width:720px}.scalar-app .max-w-\\[calc\\(100dvw-24px\\)\\]{max-width:calc(100dvw - 24px)}.scalar-app .max-w-full{max-width:100%}.scalar-app .min-w-0{min-width:0}.scalar-app .min-w-2\\.25{min-width:9px}.scalar-app .min-w-3\\.5{min-width:14px}.scalar-app .min-w-4{min-width:16px}.scalar-app .min-w-8{min-width:32px}.scalar-app .min-w-48{min-width:192px}.scalar-app .min-w-\\[37px\\]{min-width:37px}.scalar-app .min-w-\\[296px\\]{min-width:296px}.scalar-app .min-w-fit{min-width:fit-content}.scalar-app .min-w-full{min-width:100%}.scalar-app .flex-1{flex:1}.scalar-app .shrink-0{flex-shrink:0}.scalar-app .flex-grow{flex-grow:1}.scalar-app .-translate-x-1\\/2{--tw-translate-x:-50%;translate:var(--tw-translate-x)var(--tw-translate-y)}.scalar-app .translate-x-0{--tw-translate-x:0px;translate:var(--tw-translate-x)var(--tw-translate-y)}.scalar-app .translate-x-1\\/2{--tw-translate-x:50%;translate:var(--tw-translate-x)var(--tw-translate-y)}.scalar-app .translate-y-1\\/2{--tw-translate-y:50%;translate:var(--tw-translate-x)var(--tw-translate-y)}.scalar-app .scale-75{--tw-scale-x:75%;--tw-scale-y:75%;--tw-scale-z:75%;scale:var(--tw-scale-x)var(--tw-scale-y)}.scalar-app .rotate-90{rotate:90deg}.scalar-app .transform{transform:var(--tw-rotate-x,)var(--tw-rotate-y,)var(--tw-rotate-z,)var(--tw-skew-x,)var(--tw-skew-y,)}.scalar-app .cursor-auto{cursor:auto}.scalar-app .cursor-default{cursor:default}.scalar-app .cursor-grab{cursor:grab}.scalar-app .cursor-help{cursor:help}.scalar-app .cursor-pointer{cursor:pointer}.scalar-app .cursor-text{cursor:text}.scalar-app .resize{resize:both}.scalar-app .resize-none{resize:none}.scalar-app .auto-rows-\\[32px\\]{grid-auto-rows:32px}.scalar-app .auto-rows-auto{grid-auto-rows:auto}.scalar-app .grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.scalar-app .grid-cols-\\[44px_1fr_repeat\\(3\\,auto\\)\\]{grid-template-columns:44px 1fr repeat(3,auto)}.scalar-app .grid-cols-\\[auto_1fr\\]{grid-template-columns:auto 1fr}.scalar-app .grid-cols-\\[repeat\\(auto-fill\\,minmax\\(32px\\,1fr\\)\\)\\]{grid-template-columns:repeat(auto-fill,minmax(32px,1fr))}.scalar-app .flex-col{flex-direction:column}.scalar-app .flex-row{flex-direction:row}.scalar-app .flex-wrap{flex-wrap:wrap}.scalar-app .content-between{align-content:space-between}.scalar-app .content-start{align-content:flex-start}.scalar-app .items-center{align-items:center}.scalar-app .items-end{align-items:flex-end}.scalar-app .items-start{align-items:flex-start}.scalar-app .items-stretch{align-items:stretch}.scalar-app .justify-between{justify-content:space-between}.scalar-app .justify-center{justify-content:center}.scalar-app .justify-end{justify-content:flex-end}.scalar-app .justify-start{justify-content:flex-start}.scalar-app .justify-stretch{justify-content:stretch}.scalar-app .\\!gap-2{gap:8px!important}.scalar-app .gap-0\\.5{gap:2px}.scalar-app .gap-0\\.75{gap:3px}.scalar-app .gap-1{gap:4px}.scalar-app .gap-1\\.5{gap:6px}.scalar-app .gap-1\\.75{gap:7px}.scalar-app .gap-2{gap:8px}.scalar-app .gap-2\\.5{gap:10px}.scalar-app .gap-3{gap:12px}.scalar-app .gap-4{gap:16px}.scalar-app .gap-6{gap:24px}.scalar-app .gap-8{gap:32px}.scalar-app .gap-10{gap:40px}.scalar-app .gap-12{gap:48px}.scalar-app .gap-\\[1\\.5px\\]{gap:1.5px}.scalar-app .gap-px{gap:1px}.scalar-app .gap-x-2\\.5{column-gap:10px}:where(.scalar-app .space-x-1>:not(:last-child)){--tw-space-x-reverse:0;margin-inline-start:calc(4px*var(--tw-space-x-reverse));margin-inline-end:calc(4px*calc(1 - var(--tw-space-x-reverse)))}:where(.scalar-app .divide-y>:not(:last-child)){--tw-divide-y-reverse:0;border-bottom-style:var(--tw-border-style);border-top-style:var(--tw-border-style);border-top-width:calc(var(--scalar-border-width)*var(--tw-divide-y-reverse));border-bottom-width:calc(var(--scalar-border-width)*calc(1 - var(--tw-divide-y-reverse)))}.scalar-app .self-center{align-self:center}.scalar-app .truncate{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.scalar-app .overflow-auto{overflow:auto}.scalar-app .overflow-hidden{overflow:hidden}.scalar-app .overflow-visible{overflow:visible}.scalar-app .overflow-x-auto{overflow-x:auto}.scalar-app .overflow-y-auto{overflow-y:auto}.scalar-app .overflow-y-hidden{overflow-y:hidden}.scalar-app .\\!rounded-none{border-radius:0!important}.scalar-app .rounded{border-radius:var(--scalar-radius)}.scalar-app .rounded-\\[10px\\]{border-radius:10px}.scalar-app .rounded-full{border-radius:9999px}.scalar-app .rounded-lg{border-radius:var(--scalar-radius-lg)}.scalar-app .rounded-md{border-radius:var(--scalar-radius)}.scalar-app .rounded-px{border-radius:1px}.scalar-app .rounded-xl{border-radius:var(--scalar-radius-xl)}.scalar-app .rounded-t{border-top-left-radius:var(--scalar-radius);border-top-right-radius:var(--scalar-radius)}.scalar-app .rounded-t-lg{border-top-left-radius:var(--scalar-radius-lg);border-top-right-radius:var(--scalar-radius-lg)}.scalar-app .rounded-t-none{border-top-left-radius:0;border-top-right-radius:0}.scalar-app .rounded-b{border-bottom-right-radius:var(--scalar-radius);border-bottom-left-radius:var(--scalar-radius)}.scalar-app .rounded-b-lg{border-bottom-right-radius:var(--scalar-radius-lg);border-bottom-left-radius:var(--scalar-radius-lg)}.scalar-app .\\!border-0{border-style:var(--tw-border-style)!important;border-width:0!important}.scalar-app .border{border-style:var(--tw-border-style);border-width:var(--scalar-border-width)}.scalar-app .border-0{border-style:var(--tw-border-style);border-width:0}.scalar-app .border-\\[1\\.5px\\]{border-style:var(--tw-border-style);border-width:1.5px}.scalar-app .border-\\[1px\\]{border-style:var(--tw-border-style);border-width:1px}.scalar-app .border-x{border-inline-style:var(--tw-border-style);border-inline-width:var(--scalar-border-width)}.scalar-app .border-x-0{border-inline-style:var(--tw-border-style);border-inline-width:0}.scalar-app .border-y{border-block-style:var(--tw-border-style);border-block-width:var(--scalar-border-width)}.scalar-app .border-t{border-top-style:var(--tw-border-style);border-top-width:var(--scalar-border-width)}.scalar-app .border-t-0{border-top-style:var(--tw-border-style);border-top-width:0}.scalar-app .\\!border-r{border-right-style:var(--tw-border-style)!important;border-right-width:var(--scalar-border-width)!important}.scalar-app .border-r{border-right-style:var(--tw-border-style);border-right-width:var(--scalar-border-width)}.scalar-app .border-r-0{border-right-style:var(--tw-border-style);border-right-width:0}.scalar-app .border-b{border-bottom-style:var(--tw-border-style);border-bottom-width:var(--scalar-border-width)}.scalar-app .border-b-0{border-bottom-style:var(--tw-border-style);border-bottom-width:0}.scalar-app .border-b-\\[1px\\]{border-bottom-style:var(--tw-border-style);border-bottom-width:1px}.scalar-app .border-l{border-left-style:var(--tw-border-style);border-left-width:var(--scalar-border-width)}.scalar-app .border-l-0{border-left-style:var(--tw-border-style);border-left-width:0}.scalar-app .border-dashed{--tw-border-style:dashed;border-style:dashed}.scalar-app .border-none{--tw-border-style:none;border-style:none}.scalar-app .\\!border-current{border-color:currentColor!important}.scalar-app .border-c-1{border-color:var(--scalar-color-1)}.scalar-app .border-c-3{border-color:var(--scalar-color-3)}.scalar-app .border-transparent{border-color:#0000}.scalar-app .border-r-transparent{border-right-color:#0000}.scalar-app .bg-b-1{background-color:var(--scalar-background-1)}.scalar-app .bg-b-2{background-color:var(--scalar-background-2)}.scalar-app .bg-b-3{background-color:var(--scalar-background-3)}.scalar-app .bg-b-danger{background-color:var(--scalar-background-danger)}.scalar-app .bg-c-3\\/5{background-color:var(--scalar-color-3)}@supports (color:color-mix(in lab,red,red)){.scalar-app .bg-c-3\\/5{background-color:var(--scalar-color-3)}@supports (color:color-mix(in lab,red,red)){.scalar-app .bg-c-3\\/5{background-color:color-mix(in oklab,var(--scalar-color-3)5%,transparent)}}}.scalar-app .bg-c-accent{background-color:var(--scalar-color-accent)}.scalar-app .bg-current{background-color:currentColor}.scalar-app .bg-grey{background-color:var(--scalar-color-3)}.scalar-app .bg-sidebar-b-active{background-color:var(--scalar-sidebar-item-active-background,var(--scalar-background-2))}.scalar-app .bg-none{background-image:none}.scalar-app .fill-current{fill:currentColor}.scalar-app .stroke-2{stroke-width:2px}.scalar-app .stroke-\\[1\\.5\\]{stroke-width:1.5px}.scalar-app .stroke-\\[1\\.75\\]{stroke-width:1.75px}.scalar-app .stroke-\\[2\\.25\\]{stroke-width:2.25px}.scalar-app .object-contain{object-fit:contain}.scalar-app .\\!p-0{padding:0!important}.scalar-app .p-0{padding:0}.scalar-app .p-0\\.5{padding:2px}.scalar-app .p-0\\.75{padding:3px}.scalar-app .p-1{padding:4px}.scalar-app .p-1\\.5{padding:6px}.scalar-app .p-1\\.25{padding:5px}.scalar-app .p-1\\.75{padding:7px}.scalar-app .p-2{padding:8px}.scalar-app .p-3{padding:12px}.scalar-app .p-4{padding:16px}.scalar-app .p-\\[3px\\]{padding:3px}.scalar-app .p-\\[5px\\]{padding:5px}.scalar-app .p-px{padding:1px}.scalar-app .\\!px-3{padding-inline:12px!important}.scalar-app .px-0{padding-inline:0}.scalar-app .px-0\\.5{padding-inline:2px}.scalar-app .px-0\\.75{padding-inline:3px}.scalar-app .px-1{padding-inline:4px}.scalar-app .px-1\\.5{padding-inline:6px}.scalar-app .px-1\\.25{padding-inline:5px}.scalar-app .px-2{padding-inline:8px}.scalar-app .px-2\\.5{padding-inline:10px}.scalar-app .px-3{padding-inline:12px}.scalar-app .px-4{padding-inline:16px}.scalar-app .px-5{padding-inline:20px}.scalar-app .px-6{padding-inline:24px}.scalar-app .px-8{padding-inline:32px}.scalar-app .\\!py-1\\.5{padding-block:6px!important}.scalar-app .py-0{padding-block:0}.scalar-app .py-0\\.5{padding-block:2px}.scalar-app .py-0\\.25{padding-block:1px}.scalar-app .py-0\\.75{padding-block:3px}.scalar-app .py-1{padding-block:4px}.scalar-app .py-1\\.5{padding-block:6px}.scalar-app .py-1\\.25{padding-block:5px}.scalar-app .py-1\\.75{padding-block:7px}.scalar-app .py-2{padding-block:8px}.scalar-app .py-2\\.5{padding-block:10px}.scalar-app .py-3{padding-block:12px}.scalar-app .py-5{padding-block:20px}.scalar-app .py-8{padding-block:32px}.scalar-app .py-px{padding-block:1px}.scalar-app .\\!pt-0{padding-top:0!important}.scalar-app .pt-0{padding-top:0}.scalar-app .pt-2{padding-top:8px}.scalar-app .pt-3{padding-top:12px}.scalar-app .pt-4{padding-top:16px}.scalar-app .pt-6{padding-top:24px}.scalar-app .pt-8{padding-top:32px}.scalar-app .pt-px{padding-top:1px}.scalar-app .pr-0{padding-right:0}.scalar-app .pr-0\\.75{padding-right:3px}.scalar-app .pr-1{padding-right:4px}.scalar-app .pr-1\\.5{padding-right:6px}.scalar-app .pr-2{padding-right:8px}.scalar-app .pr-2\\.5{padding-right:10px}.scalar-app .pr-2\\.25{padding-right:9px}.scalar-app .pr-3{padding-right:12px}.scalar-app .pr-6{padding-right:24px}.scalar-app .pr-8{padding-right:32px}.scalar-app .pr-9{padding-right:36px}.scalar-app .pr-10{padding-right:40px}.scalar-app .pr-12{padding-right:48px}.scalar-app .pr-\\[26px\\]{padding-right:26px}.scalar-app .pb-0{padding-bottom:0}.scalar-app .pb-1\\.5{padding-bottom:6px}.scalar-app .pb-2{padding-bottom:8px}.scalar-app .pb-3{padding-bottom:12px}.scalar-app .pb-5{padding-bottom:20px}.scalar-app .pb-6{padding-bottom:24px}.scalar-app .pb-8{padding-bottom:32px}.scalar-app .pb-14{padding-bottom:56px}.scalar-app .pb-\\[75px\\]{padding-bottom:75px}.scalar-app .\\!pl-3{padding-left:12px!important}.scalar-app .pl-1{padding-left:4px}.scalar-app .pl-1\\.5{padding-left:6px}.scalar-app .pl-1\\.25{padding-left:5px}.scalar-app .pl-2{padding-left:8px}.scalar-app .pl-3{padding-left:12px}.scalar-app .pl-5{padding-left:20px}.scalar-app .pl-6{padding-left:24px}.scalar-app .pl-8\\.5{padding-left:34px}.scalar-app .pl-9{padding-left:36px}.scalar-app .pl-12{padding-left:48px}.scalar-app .pl-px{padding-left:1px}.scalar-app .text-center{text-align:center}.scalar-app .text-left{text-align:left}.scalar-app .text-right{text-align:right}.scalar-app .font-code{font-family:var(--scalar-font-code)}.scalar-app .font-sans{font-family:var(--scalar-font)}.scalar-app .text-3xs{font-size:var(--scalar-font-size-7)}.scalar-app .text-\\[6px\\]{font-size:6px}.scalar-app .text-\\[11px\\]{font-size:11px}.scalar-app .text-\\[21px\\]{font-size:21px}.scalar-app .text-base{font-size:var(--scalar-font-size-3)}.scalar-app .text-sm{font-size:var(--scalar-font-size-4)}.scalar-app .text-xl{font-size:var(--scalar-font-size-1)}.scalar-app .text-xs{font-size:var(--scalar-font-size-5)}.scalar-app .text-xxs{font-size:var(--scalar-font-size-6)}.scalar-app .\\!leading-\\[6px\\]{--tw-leading:6px!important;line-height:6px!important}.scalar-app .leading-2{--tw-leading:var(--scalar-line-height-2);line-height:var(--scalar-line-height-2)}.scalar-app .leading-3{--tw-leading:var(--scalar-line-height-3);line-height:var(--scalar-line-height-3)}.scalar-app .leading-\\[1\\.44\\]{--tw-leading:1.44;line-height:1.44}.scalar-app .leading-\\[7px\\]{--tw-leading:7px;line-height:7px}.scalar-app .leading-\\[20px\\]{--tw-leading:20px;line-height:20px}.scalar-app .leading-\\[21px\\]{--tw-leading:21px;line-height:21px}.scalar-app .leading-\\[22px\\]{--tw-leading:22px;line-height:22px}.scalar-app .leading-\\[normal\\]{--tw-leading:normal;line-height:normal}.scalar-app .leading-none{--tw-leading:1;line-height:1}.scalar-app .leading-normal{--tw-leading:var(--leading-normal);line-height:var(--leading-normal)}.scalar-app .leading-snug{--tw-leading:var(--leading-snug);line-height:var(--leading-snug)}.scalar-app .font-bold{--tw-font-weight:var(--scalar-bold);font-weight:var(--scalar-bold)}.scalar-app .font-medium{--tw-font-weight:var(--scalar-semibold);font-weight:var(--scalar-semibold)}.scalar-app .font-normal{--tw-font-weight:var(--scalar-regular);font-weight:var(--scalar-regular)}.scalar-app .text-balance{text-wrap:balance}.scalar-app .text-pretty{text-wrap:pretty}.scalar-app .break-words{overflow-wrap:break-word}.scalar-app .break-all{word-break:break-all}.scalar-app .text-ellipsis{text-overflow:ellipsis}.scalar-app .whitespace-nowrap{white-space:nowrap}.scalar-app .whitespace-pre{white-space:pre}.scalar-app .whitespace-pre-wrap{white-space:pre-wrap}.scalar-app .\\!text-c-1{color:var(--scalar-color-1)!important}.scalar-app .text-b-1{color:var(--scalar-background-1)}.scalar-app .text-blue{color:var(--scalar-color-blue)}.scalar-app .text-border{color:var(--scalar-border-color)}.scalar-app .text-c-1{color:var(--scalar-color-1)}.scalar-app .text-c-2{color:var(--scalar-color-2)}.scalar-app .text-c-3{color:var(--scalar-color-3)}.scalar-app .text-c-btn{color:var(--scalar-button-1-color)}.scalar-app .text-green{color:var(--scalar-color-green)}.scalar-app .text-grey{color:var(--scalar-color-3)}.scalar-app .text-orange{color:var(--scalar-color-orange)}.scalar-app .text-purple{color:var(--scalar-color-purple)}.scalar-app .text-red{color:var(--scalar-color-red)}.scalar-app .text-sidebar-c-2{color:var(--scalar-sidebar-color-2,var(--scalar-color-2))}.scalar-app .text-sidebar-c-active{color:var(--scalar-sidebar-color-active,currentColor)}.scalar-app .text-transparent{color:#0000}.scalar-app .text-yellow{color:var(--scalar-color-yellow)}.scalar-app .capitalize{text-transform:capitalize}.scalar-app .lowercase{text-transform:lowercase}.scalar-app .uppercase{text-transform:uppercase}.scalar-app .no-underline{text-decoration-line:none}.scalar-app .underline{text-decoration-line:underline}.scalar-app .decoration-c-3{-webkit-text-decoration-color:var(--scalar-color-3);text-decoration-color:var(--scalar-color-3)}.scalar-app .underline-offset-2{text-underline-offset:2px}.scalar-app .opacity-0{opacity:0}.scalar-app .opacity-50{opacity:.5}.scalar-app .opacity-100{opacity:1}.scalar-app .bg-blend-normal{background-blend-mode:normal}.scalar-app .mix-blend-luminosity{mix-blend-mode:luminosity}.scalar-app .shadow{--tw-shadow:var(--scalar-shadow-1);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.scalar-app .shadow-\\[-8px_0_4px_var\\(--scalar-background-1\\)\\]{--tw-shadow:-8px 0 4px var(--tw-shadow-color,var(--scalar-background-1));box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.scalar-app .shadow-\\[0_-8px_0_8px_var\\(--scalar-background-1\\)\\,0_0_8px_8px_var\\(--scalar-background-1\\)\\]{--tw-shadow:0 -8px 0 8px var(--tw-shadow-color,var(--scalar-background-1)),0 0 8px 8px var(--tw-shadow-color,var(--scalar-background-1));box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.scalar-app .shadow-border{--tw-shadow:inset 0 0 0 var(--tw-shadow-color,calc(var(--scalar-border-width)*2))var(--scalar-border-color);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.scalar-app .shadow-lg{--tw-shadow:var(--scalar-shadow-2);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.scalar-app .shadow-none{--tw-shadow:0 0 #0000;box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.scalar-app .outline{outline-style:var(--tw-outline-style);outline-width:1px}.scalar-app .-outline-offset-1{outline-offset:-1px}.scalar-app .outline-offset-2{outline-offset:2px}.scalar-app .outline-b-3{outline-color:var(--scalar-background-3)}.scalar-app .blur{--tw-blur:blur(8px);filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)}.scalar-app .brightness-90{--tw-brightness:brightness(90%);filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)}.scalar-app .brightness-\\[\\.9\\]{--tw-brightness:brightness(.9);filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)}.scalar-app .brightness-lifted{--tw-brightness:brightness(var(--scalar-lifted-brightness));filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)}.scalar-app .filter{filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)}.scalar-app .backdrop-filter{-webkit-backdrop-filter:var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,);backdrop-filter:var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,)}.scalar-app .transition{transition-property:color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,--tw-gradient-from,--tw-gradient-via,--tw-gradient-to,opacity,box-shadow,transform,translate,scale,rotate,filter,-webkit-backdrop-filter,backdrop-filter,display,visibility,content-visibility,overlay,pointer-events;transition-timing-function:var(--tw-ease,var(--default-transition-timing-function));transition-duration:var(--tw-duration,var(--default-transition-duration))}.scalar-app .transition-colors{transition-property:color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,--tw-gradient-from,--tw-gradient-via,--tw-gradient-to;transition-timing-function:var(--tw-ease,var(--default-transition-timing-function));transition-duration:var(--tw-duration,var(--default-transition-duration))}.scalar-app .transition-opacity{transition-property:opacity;transition-timing-function:var(--tw-ease,var(--default-transition-timing-function));transition-duration:var(--tw-duration,var(--default-transition-duration))}.scalar-app .transition-transform{transition-property:transform,translate,scale,rotate;transition-timing-function:var(--tw-ease,var(--default-transition-timing-function));transition-duration:var(--tw-duration,var(--default-transition-duration))}.scalar-app .transition-none{transition-property:none}.scalar-app .duration-100{--tw-duration:.1s;transition-duration:.1s}.scalar-app .duration-150{--tw-duration:.15s;transition-duration:.15s}.scalar-app .duration-200{--tw-duration:.2s;transition-duration:.2s}.scalar-app .duration-300{--tw-duration:.3s;transition-duration:.3s}.scalar-app .ease-in-out{--tw-ease:var(--ease-in-out);transition-timing-function:var(--ease-in-out)}.scalar-app .outline-none{--tw-outline-style:none;outline-style:none}.scalar-app .select-none{-webkit-user-select:none;user-select:none}.scalar-app .\\[--scalar-address-bar-height\\:32px\\]{--scalar-address-bar-height:32px}.scalar-app .app-drag-region{-webkit-app-region:drag}.scalar-app .app-no-drag-region{-webkit-app-region:no-drag}:is(.scalar-app .\\*\\:flex>*){display:flex}:is(.scalar-app .\\*\\:h-8>*){height:32px}:is(.scalar-app .\\*\\:cursor-pointer>*){cursor:pointer}:is(.scalar-app .\\*\\:items-center>*){align-items:center}:is(.scalar-app .\\*\\:rounded-none>*){border-radius:0}:is(.scalar-app .\\*\\:border-t>*){border-top-style:var(--tw-border-style);border-top-width:var(--scalar-border-width)}:is(.scalar-app .\\*\\:border-b-0>*){border-bottom-style:var(--tw-border-style);border-bottom-width:0}:is(.scalar-app .\\*\\:px-1\\.5>*){padding-inline:6px}:is(.scalar-app .\\*\\:pl-4>*){padding-left:16px}.scalar-app .group-first\\/row\\:border-t-0:is(:where(.group\\/row):first-child *){border-top-style:var(--tw-border-style);border-top-width:0}.scalar-app .group-last\\:border-b-transparent:is(:where(.group):last-child *){border-bottom-color:#0000}.scalar-app .group-last\\/label\\:rounded-br-lg:is(:where(.group\\/label):last-child *){border-bottom-right-radius:var(--scalar-radius-lg)}@media (hover:hover){.scalar-app .group-hover\\:block:is(:where(.group):hover *){display:block}.scalar-app .group-hover\\:flex:is(:where(.group):hover *){display:flex}.scalar-app .group-hover\\:hidden:is(:where(.group):hover *){display:none}.scalar-app .group-hover\\:inline:is(:where(.group):hover *){display:inline}.scalar-app .group-hover\\:pr-5:is(:where(.group):hover *){padding-right:20px}.scalar-app .group-hover\\:pr-6:is(:where(.group):hover *){padding-right:24px}.scalar-app .group-hover\\:pr-10:is(:where(.group):hover *){padding-right:40px}.scalar-app .group-hover\\:text-c-1:is(:where(.group):hover *){color:var(--scalar-color-1)}.scalar-app .group-hover\\:opacity-80:is(:where(.group):hover *){opacity:.8}.scalar-app .group-hover\\:opacity-100:is(:where(.group):hover *){opacity:1}.scalar-app .group-hover\\/auth\\:absolute:is(:where(.group\\/auth):hover *){position:absolute}.scalar-app .group-hover\\/auth\\:h-auto:is(:where(.group\\/auth):hover *){height:auto}.scalar-app .group-hover\\/auth\\:border-b:is(:where(.group\\/auth):hover *){border-bottom-style:var(--tw-border-style);border-bottom-width:var(--scalar-border-width)}.scalar-app .group-hover\\/cell\\:opacity-100:is(:where(.group\\/cell):hover *){opacity:1}.scalar-app .group-hover\\/item\\:flex:is(:where(.group\\/item):hover *){display:flex}.scalar-app .group-hover\\/item\\:opacity-100:is(:where(.group\\/item):hover *),.scalar-app .group-hover\\/params\\:opacity-100:is(:where(.group\\/params):hover *){opacity:1}.scalar-app .group-hover\\/scopes-accordion\\:text-c-2:is(:where(.group\\/scopes-accordion):hover *){color:var(--scalar-color-2)}.scalar-app .group-hover\\/upload\\:block:is(:where(.group\\/upload):hover *){display:block}}.scalar-app .group-focus-visible\\:opacity-100:is(:where(.group):focus-visible *){opacity:1}.scalar-app .group-focus-visible\\:outline:is(:where(.group):focus-visible *){outline-style:var(--tw-outline-style);outline-width:1px}.scalar-app .group-has-\\[\\.cm-focused\\]\\:z-1:is(:where(.group):has(.cm-focused) *){z-index:1}.scalar-app .group-has-\\[\\.cm-focused\\]\\:flex:is(:where(.group):has(.cm-focused) *){display:flex}.scalar-app .group-has-\\[\\.cm-focused\\]\\:pr-6:is(:where(.group):has(.cm-focused) *){padding-right:24px}.scalar-app .group-has-\\[\\.cm-focused\\]\\:pr-10:is(:where(.group):has(.cm-focused) *){padding-right:40px}.scalar-app .group-has-\\[\\:focus-visible\\]\\:hidden:is(:where(.group):has(:focus-visible) *){display:none}.scalar-app .group-has-\\[\\:focus-visible\\]\\:opacity-100:is(:where(.group):has(:focus-visible) *){opacity:1}.scalar-app .group-has-\\[\\:focus-visible\\]\\/cell\\:border-c-accent:is(:where(.group\\/cell):has(:focus-visible) *){border-color:var(--scalar-color-accent)}.scalar-app .group-has-\\[\\:focus-visible\\]\\/cell\\:opacity-100:is(:where(.group\\/cell):has(:focus-visible) *){opacity:1}.scalar-app .group-has-\\[\\:focus-visible\\]\\/input\\:block:is(:where(.group\\/input):has(:focus-visible) *){display:block}.scalar-app .group-has-\\[input\\]\\/label\\:mr-0:is(:where(.group\\/label):has(:is(input)) *){margin-right:0}.scalar-app .group-aria-expanded\\/button\\:rotate-180:is(:where(.group\\/button)[aria-expanded=true] *),.scalar-app .group-aria-expanded\\/combobox-button\\:rotate-180:is(:where(.group\\/combobox-button)[aria-expanded=true] *){rotate:180deg}.scalar-app .group-\\[\\.alert\\]\\:bg-b-alert:is(:where(.group).alert *){background-color:var(--scalar-background-alert)}.scalar-app .group-\\[\\.alert\\]\\:bg-transparent:is(:where(.group).alert *){background-color:#0000}.scalar-app .group-\\[\\.alert\\]\\:shadow-none:is(:where(.group).alert *){--tw-shadow:0 0 #0000;box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.scalar-app .group-\\[\\.alert\\]\\:outline-orange:is(:where(.group).alert *){outline-color:var(--scalar-color-orange)}.scalar-app .group-\\[\\.error\\]\\:bg-b-danger:is(:where(.group).error *){background-color:var(--scalar-background-danger)}.scalar-app .group-\\[\\.error\\]\\:bg-transparent:is(:where(.group).error *){background-color:#0000}.scalar-app .group-\\[\\.error\\]\\:text-red:is(:where(.group).error *){color:var(--scalar-color-red)}.scalar-app .group-\\[\\.error\\]\\:shadow-none:is(:where(.group).error *){--tw-shadow:0 0 #0000;box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.scalar-app .group-\\[\\.error\\]\\:outline-red:is(:where(.group).error *){outline-color:var(--scalar-color-red)}.scalar-app .peer-checked\\:text-c-1:is(:where(.peer):checked~*){color:var(--scalar-color-1)}.scalar-app .peer-has-\\[\\.cm-focused\\]\\:opacity-0:is(:where(.peer):has(.cm-focused)~*){opacity:0}.scalar-app .peer-has-\\[\\.color-selector\\]\\:hidden:is(:where(.peer):has(.color-selector)~*){display:none}.scalar-app .before\\:pointer-events-none:before{content:var(--tw-content);pointer-events:none}.scalar-app .before\\:absolute:before{content:var(--tw-content);position:absolute}.scalar-app .before\\:top-0:before{content:var(--tw-content);top:0}.scalar-app .before\\:left-3:before{content:var(--tw-content);left:12px}.scalar-app .before\\:left-\\[calc\\(\\.75rem_\\+_\\.5px\\)\\]:before{content:var(--tw-content);left:calc(.75rem + .5px)}.scalar-app .before\\:z-1:before{content:var(--tw-content);z-index:1}.scalar-app .before\\:h-\\[calc\\(100\\%_\\+_\\.5px\\)\\]:before{content:var(--tw-content);height:calc(100% + .5px)}.scalar-app .before\\:w-\\[\\.5px\\]:before{content:var(--tw-content);width:.5px}.scalar-app .before\\:bg-border:before{content:var(--tw-content);background-color:var(--scalar-border-color)}.scalar-app .after\\:content-\\[\\'\\:\\'\\]:after{--tw-content:":";content:var(--tw-content)}:is(.scalar-app .\\*\\:first\\:line-clamp-1>*):first-child{-webkit-line-clamp:1;-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden}:is(.scalar-app .\\*\\:first\\:rounded-l>*):first-child{border-top-left-radius:var(--scalar-radius);border-bottom-left-radius:var(--scalar-radius)}:is(.scalar-app .\\*\\:first\\:border-t-0>*):first-child,:is(.scalar-app .first\\:\\*\\:border-t-0:first-child>*){border-top-style:var(--tw-border-style);border-top-width:0}:is(.scalar-app .\\*\\:first\\:text-ellipsis>*):first-child{text-overflow:ellipsis}@media (hover:hover){:is(.scalar-app .group-hover\\/auth\\:\\*\\:first\\:line-clamp-none:is(:where(.group\\/auth):hover *)>*):first-child{-webkit-line-clamp:unset;-webkit-box-orient:horizontal;display:block;overflow:visible}}.scalar-app .last\\:mb-0:last-child{margin-bottom:0}.scalar-app .last\\:rounded-b-lg:last-child{border-bottom-right-radius:var(--scalar-radius-lg);border-bottom-left-radius:var(--scalar-radius-lg)}.scalar-app .last\\:border-r-0:last-child{border-right-style:var(--tw-border-style);border-right-width:0}:is(.scalar-app .\\*\\:last\\:rounded-r>*):last-child{border-top-right-radius:var(--scalar-radius);border-bottom-right-radius:var(--scalar-radius)}.scalar-app .last\\:before\\:h-full:last-child:before{content:var(--tw-content);height:100%}.scalar-app .last-of-type\\:first-of-type\\:border-b-0:last-of-type:first-of-type{border-bottom-style:var(--tw-border-style);border-bottom-width:0}.scalar-app .focus-within\\:z-20:focus-within{z-index:20}.scalar-app .focus-within\\:border-\\(--scalar-background-3\\):focus-within{border-color:var(--scalar-background-3)}.scalar-app .focus-within\\:bg-b-1:focus-within{background-color:var(--scalar-background-1)}.scalar-app .focus-within\\:text-c-1:focus-within{color:var(--scalar-color-1)}@media (hover:hover){.scalar-app .hover\\:cursor-default:hover{cursor:default}.scalar-app .hover\\:border-\\(--scalar-background-3\\):hover{border-color:var(--scalar-background-3)}.scalar-app .hover\\:border-inherit:hover{border-color:inherit}.scalar-app .hover\\:bg-b-2:hover{background-color:var(--scalar-background-2)}.scalar-app .hover\\:bg-b-3:hover{background-color:var(--scalar-background-3)}.scalar-app .hover\\:bg-inherit:hover{background-color:inherit}.scalar-app .hover\\:bg-sidebar-b-active:hover{background-color:var(--scalar-sidebar-item-active-background,var(--scalar-background-2))}.scalar-app .hover\\:whitespace-normal:hover{white-space:normal}.scalar-app .hover\\:text-c-1:hover{color:var(--scalar-color-1)}.scalar-app .hover\\:text-c-2:hover{color:var(--scalar-color-2)}.scalar-app .hover\\:underline:hover{text-decoration-line:underline}.scalar-app .hover\\:brightness-75:hover{--tw-brightness:brightness(75%);filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)}}.scalar-app .focus\\:border-b-1:focus{border-bottom-style:var(--tw-border-style);border-bottom-width:1px;border-color:var(--scalar-background-1)}.scalar-app .focus\\:text-c-1:focus{color:var(--scalar-color-1)}.scalar-app .focus\\:outline-none:focus{--tw-outline-style:none;outline-style:none}.scalar-app .focus-visible\\:z-10:focus-visible{z-index:10}.scalar-app .active\\:text-c-1:active{color:var(--scalar-color-1)}.scalar-app .disabled\\:cursor-default:disabled{cursor:default}.scalar-app .disabled\\:text-c-2:disabled{color:var(--scalar-color-2)}.scalar-app .has-\\[\\.empty-sidebar-item\\]\\:border-t:has(.empty-sidebar-item){border-top-style:var(--tw-border-style);border-top-width:var(--scalar-border-width)}.scalar-app .has-\\[\\:focus-visible\\]\\:absolute:has(:focus-visible){position:absolute}.scalar-app .has-\\[\\:focus-visible\\]\\:z-1:has(:focus-visible){z-index:1}.scalar-app .has-\\[\\:focus-visible\\]\\:rounded-\\[4px\\]:has(:focus-visible){border-radius:4px}.scalar-app .has-\\[\\:focus-visible\\]\\:bg-b-1:has(:focus-visible){background-color:var(--scalar-background-1)}.scalar-app .has-\\[\\:focus-visible\\]\\:opacity-100:has(:focus-visible){opacity:1}.scalar-app .has-\\[\\:focus-visible\\]\\:outline:has(:focus-visible){outline-style:var(--tw-outline-style);outline-width:1px}@media (min-width:600px){.scalar-app .sm\\:not-sr-only{clip:auto;white-space:normal;width:auto;height:auto;margin:0;padding:0;position:static;overflow:visible}.scalar-app .sm\\:order-none{order:0}.scalar-app .sm\\:mr-1\\.5{margin-right:6px}.scalar-app .sm\\:mb-1\\.5{margin-bottom:6px}.scalar-app .sm\\:ml-1\\.5{margin-left:6px}.scalar-app .sm\\:flex{display:flex}.scalar-app .sm\\:hidden{display:none}.scalar-app .sm\\:max-w-max{max-width:max-content}.scalar-app .sm\\:min-w-max{min-width:max-content}.scalar-app .sm\\:flex-col{flex-direction:column}.scalar-app .sm\\:flex-row{flex-direction:row}.scalar-app .sm\\:justify-between{justify-content:space-between}.scalar-app .sm\\:gap-px{gap:1px}.scalar-app .sm\\:rounded{border-radius:var(--scalar-radius)}.scalar-app .sm\\:rounded-lg{border-radius:var(--scalar-radius-lg)}.scalar-app .sm\\:px-2{padding-inline:8px}.scalar-app .sm\\:px-3{padding-inline:12px}.scalar-app .sm\\:py-1\\.5{padding-block:6px}:is(.scalar-app .sm\\:\\*\\:rounded-lg>*){border-radius:var(--scalar-radius-lg)}}@media (min-width:800px){.scalar-app .md\\:right-10{right:40px}.scalar-app .md\\:bottom-10{bottom:40px}.scalar-app .md\\:mx-auto{margin-inline:auto}.scalar-app .md\\:-ml-1\\.25{margin-left:-5px}.scalar-app .md\\:ml-1\\.5{margin-left:6px}.scalar-app .md\\:block{display:block}.scalar-app .md\\:grid{display:grid}.scalar-app .md\\:w-full{width:100%}.scalar-app .md\\:max-w-\\[720px\\]{max-width:720px}.scalar-app .md\\:min-w-fit{min-width:fit-content}.scalar-app .md\\:flex-none{flex:none}.scalar-app .md\\:translate-x-0{--tw-translate-x:0px;translate:var(--tw-translate-x)var(--tw-translate-y)}.scalar-app .md\\:translate-y-0{--tw-translate-y:0px;translate:var(--tw-translate-x)var(--tw-translate-y)}.scalar-app .md\\:grid-cols-\\[1fr_720px_1fr\\]{grid-template-columns:1fr 720px 1fr}.scalar-app .md\\:flex-row{flex-direction:row}.scalar-app .md\\:border-r{border-right-style:var(--tw-border-style);border-right-width:var(--scalar-border-width)}.scalar-app .md\\:border-b-0{border-bottom-style:var(--tw-border-style);border-bottom-width:0}.scalar-app .md\\:p-1\\.5{padding:6px}.scalar-app .md\\:px-0{padding-inline:0}.scalar-app .md\\:px-1\\.5{padding-inline:6px}.scalar-app .md\\:px-2{padding-inline:8px}.scalar-app .md\\:px-2\\.5{padding-inline:10px}.scalar-app .md\\:px-4{padding-inline:16px}.scalar-app .md\\:px-\\[18px\\]{padding-inline:18px}.scalar-app .md\\:py-2\\.5{padding-block:10px}.scalar-app .md\\:pb-2\\.5{padding-bottom:10px}.scalar-app .md\\:pb-\\[37px\\]{padding-bottom:37px}.scalar-app .md\\:pl-0{padding-left:0}:is(.scalar-app .md\\:\\*\\:border-t-0>*){border-top-style:var(--tw-border-style);border-top-width:0}}@media (min-width:1000px){.scalar-app .lg\\:order-none{order:0}.scalar-app .lg\\:-mr-1{margin-right:-4px}.scalar-app .lg\\:mb-0{margin-bottom:0}.scalar-app .lg\\:flex{display:flex}.scalar-app .lg\\:min-h-header{min-height:48px}.scalar-app .lg\\:w-auto{width:auto}.scalar-app .lg\\:max-w-\\[580px\\]{max-width:580px}.scalar-app .lg\\:min-w-\\[580px\\]{min-width:580px}.scalar-app .lg\\:flex-1{flex:1}.scalar-app .lg\\:p-1{padding:4px}.scalar-app .lg\\:px-1{padding-inline:4px}.scalar-app .lg\\:px-2\\.5{padding-inline:10px}.scalar-app .lg\\:pt-1{padding-top:4px}.scalar-app .lg\\:pr-24{padding-right:96px}}@media (min-width:1200px){.scalar-app .xl\\:\\!flex{display:flex!important}.scalar-app .xl\\:flex{display:flex}.scalar-app .xl\\:hidden{display:none}.scalar-app .xl\\:h-fit{height:fit-content}.scalar-app .xl\\:h-full{height:100%}.scalar-app .xl\\:min-h-header{min-height:48px}.scalar-app .xl\\:max-w-\\[720px\\]{max-width:720px}.scalar-app .xl\\:min-w-0{min-width:0}.scalar-app .xl\\:min-w-\\[720px\\]{min-width:720px}.scalar-app .xl\\:flex-row{flex-direction:row}.scalar-app .xl\\:overflow-auto{overflow:auto}.scalar-app .xl\\:overflow-hidden{overflow:hidden}.scalar-app .xl\\:rounded-none{border-radius:0}.scalar-app .xl\\:pr-0\\.5{padding-right:2px}.scalar-app .xl\\:pl-2{padding-left:8px}:is(.scalar-app .\\*\\:xl\\:border-t-0>*){border-top-style:var(--tw-border-style);border-top-width:0}:is(.scalar-app .\\*\\:xl\\:border-l>*){border-left-style:var(--tw-border-style);border-left-width:var(--scalar-border-width)}:is(.scalar-app .\\*\\:first\\:xl\\:border-l-0>*):first-child{border-left-style:var(--tw-border-style);border-left-width:0}}.scalar-app .dark\\:bg-b-2:where(.dark-mode,.dark-mode *){background-color:var(--scalar-background-2)}@media (hover:hover){.scalar-app .hover\\:dark\\:bg-b-2:hover:where(.dark-mode,.dark-mode *){background-color:var(--scalar-background-2)}}.scalar-app .ui-open\\:rotate-90[data-headlessui-state~=open],:where([data-headlessui-state~=open]) :is(.scalar-app .ui-open\\:rotate-90){rotate:90deg}.scalar-app .ui-open\\:rotate-180[data-headlessui-state~=open],:where([data-headlessui-state~=open]) :is(.scalar-app .ui-open\\:rotate-180){rotate:180deg}.scalar-app .last\\:ui-open\\:border-b-0:last-child[data-headlessui-state~=open],:where([data-headlessui-state~=open]) .scalar-app .last\\:ui-open\\:border-b-0:last-child{border-bottom-style:var(--tw-border-style);border-bottom-width:0}.scalar-app .ui-not-open\\:hidden[data-headlessui-state]:not([data-headlessui-state~=open]),:where([data-headlessui-state]:not([data-headlessui-state~=open])) :is(.scalar-app .ui-not-open\\:hidden):not([data-headlessui-state]){display:none}.scalar-app .ui-not-open\\:rotate-0[data-headlessui-state]:not([data-headlessui-state~=open]),:where([data-headlessui-state]:not([data-headlessui-state~=open])) :is(.scalar-app .ui-not-open\\:rotate-0):not([data-headlessui-state]){rotate:none}.scalar-app .ui-checked\\:bg-b-3[data-headlessui-state~=checked],:where([data-headlessui-state~=checked]) :is(.scalar-app .ui-checked\\:bg-b-3){background-color:var(--scalar-background-3)}.scalar-app .ui-active\\:bg-b-2[data-headlessui-state~=active],:where([data-headlessui-state~=active]) :is(.scalar-app .ui-active\\:bg-b-2),:is(.scalar-app .ui-active\\:\\*\\:bg-b-2[data-headlessui-state~=active]>*),:is(:where([data-headlessui-state~=active]) :is(.scalar-app .ui-active\\:\\*\\:bg-b-2)>*){background-color:var(--scalar-background-2)}@media (max-width:720px) and (max-height:480px){.scalar-app .zoomed\\:static{position:static}.scalar-app .zoomed\\:p-1{padding:4px}}.app-platform-mac :is(.scalar-app .mac\\:pl-\\[72px\\]){padding-left:72px}@property --tw-scale-x{syntax:"*";inherits:false;initial-value:1}@property --tw-scale-y{syntax:"*";inherits:false;initial-value:1}@property --tw-scale-z{syntax:"*";inherits:false;initial-value:1}@property --tw-space-x-reverse{syntax:"*";inherits:false;initial-value:0}@property --tw-content{syntax:"*";inherits:false;initial-value:""}.nav-item[data-v-507381a3]{cursor:pointer;border-radius:var(--scalar-radius-lg);background:var(--scalar-background-3);border:var(--scalar-border-width)solid var(--scalar-background-2);color:var(--scalar-color-3);flex:1;justify-content:center;align-items:center;min-width:0;padding:4.5px;display:flex;position:relative;overflow:hidden}.dark-mode .nav-item[data-v-507381a3]{background:var(--scalar-background-2)}@supports (color:color-mix(in lab,red,red)){.dark-mode .nav-item[data-v-507381a3]{background:color-mix(in srgb,var(--scalar-background-2),transparent)}}.nav-item-icon-copy[data-v-507381a3]{white-space:nowrap;max-width:100%;-webkit-mask-image:linear-gradient(to left,transparent 0,var(--scalar-background-2)20px);mask-image:linear-gradient(to left,transparent 0,var(--scalar-background-2)20px);overflow:hidden}.nav-item:hover .nav-item-icon-copy[data-v-507381a3]{-webkit-mask-image:linear-gradient(to left,transparent 20px,var(--scalar-background-2)40px);mask-image:linear-gradient(to left,transparent 20px,var(--scalar-background-2)40px)}.nav-item-copy[data-v-507381a3]{max-width:calc(100% - 20px)}.nav-item[data-v-507381a3]:hover{color:var(--scalar-color-1)}.nav-item__active[data-v-507381a3]{background-color:var(--scalar-background-1);color:var(--scalar-color-1);border-color:var(--scalar-border-color)}.dark-mode .nav-item__active[data-v-507381a3]{background-color:var(--scalar-background-2)}.nav-item-close[data-v-507381a3]{border-radius:var(--scalar-radius);stroke-width:1.5px;max-width:20px;color:var(--scalar-color-3);opacity:0;background:0 0;margin-left:-20px;padding:2px;position:absolute;right:3px}.nav-item:hover .nav-item-close[data-v-507381a3]{opacity:1}.nav-item-close[data-v-507381a3]:hover{background-color:var(--scalar-background-4)}.nav-item__active .nav-item-close[data-v-507381a3]:hover{background-color:var(--scalar-background-2)}.download-app-button[data-v-cb45fa05]{box-shadow:0 0 0 .5px var(--scalar-border-color);background:linear-gradient(#ffffffbf,#00000009)}.dark-mode .download-app-button[data-v-cb45fa05]{background:linear-gradient(#ffffff1a,#00000026)}.download-app-button[data-v-cb45fa05]:hover{background:linear-gradient(#00000009,#ffffffbf)}.dark-mode .download-app-button[data-v-cb45fa05]:hover{background:linear-gradient(#00000026,#ffffff1a)}.http-bg-gradient[data-v-076b14a1]{background:linear-gradient(#ffffffbf,#00000009)}.http-bg-gradient[data-v-076b14a1]:hover{background:linear-gradient(#00000009,#ffffffbf)}.dark-mode .http-bg-gradient[data-v-076b14a1]{background:linear-gradient(#ffffff09,#00000026)}.dark-mode .http-bg-gradient[data-v-076b14a1]:hover{background:linear-gradient(#00000026,#ffffff09)}.scroll-timeline-x[data-v-19cf46d6]{scroll-timeline:--scroll-timeline x;scroll-timeline:--scroll-timeline horizontal;-ms-overflow-style:none;scrollbar-width:none;overflow:auto}.commandmenu[data-v-f2bbd082]{box-shadow:var(--scalar-shadow-2);border-radius:var(--scalar-radius-lg);background-color:var(--scalar-background-1);opacity:0;width:100%;max-width:580px;max-height:60dvh;margin:12px;animation:.3s ease-in-out .1s forwards fadeincommandmenu-f2bbd082;position:fixed;top:150px;left:50%;transform:translate(-50%,10px)}.commandmenu-overlay[data-v-f2bbd082]{cursor:pointer;background:#0003;animation:.3s ease-in-out forwards fadeincommand-f2bbd082;position:fixed;top:0;right:0;bottom:0;left:0}@keyframes fadeincommand-f2bbd082{0%{opacity:0}to{opacity:1}}@keyframes fadeincommandmenu-f2bbd082{0%{opacity:0;transform:translate(-50%,10px)}to{opacity:1;transform:translate(-50%)}}.scalar .scalar-app-layout[data-v-45e9730e]{background:var(--scalar-background-1);opacity:0;border:var(--scalar-border-width)solid var(--scalar-border-color);border-radius:8px;width:100%;max-width:1390px;height:calc(100% - 120px);margin:auto;animation:.35s forwards scalarapiclientfadein-45e9730e;position:relative;overflow:hidden}@media (max-width:720px) and (max-height:480px){.scalar .scalar-app-layout[data-v-45e9730e]{height:100%;max-height:90svh}}@keyframes scalarapiclientfadein-45e9730e{0%{opacity:0}to{opacity:1}}.scalar .scalar-app-exit[data-v-45e9730e]{cursor:pointer;z-index:-1;background:#00000038;width:100vw;height:100vh;transition:all .3s ease-in-out;animation:.35s forwards scalardrawerexitfadein-45e9730e;position:fixed;top:0;left:0}.dark-mode .scalar .scalar-app-exit[data-v-45e9730e]{background:#00000073}.scalar .scalar-app-exit[data-v-45e9730e]:before{text-align:center;color:#fff;opacity:.6;font-family:sans-serif;font-size:30px;font-weight:100;line-height:50px;position:absolute;top:0;right:12px}.scalar .scalar-app-exit[data-v-45e9730e]:hover:before{opacity:1}@keyframes scalardrawerexitfadein-45e9730e{0%{opacity:0}to{opacity:1}}.scalar-container[data-v-45e9730e]{visibility:visible;z-index:10000;justify-content:center;align-items:center;width:100%;height:100%;display:flex;position:fixed;top:0;bottom:0;left:0;overflow:hidden}.scalar .url-form-input[data-v-45e9730e]{min-height:auto!important}.scalar .scalar-container[data-v-45e9730e]{line-height:normal}.scalar .scalar-app-header span[data-v-45e9730e]{color:var(--scalar-color-3)}.scalar .scalar-app-header a[data-v-45e9730e]{color:var(--scalar-color-1)}.scalar .scalar-app-header a[data-v-45e9730e]:hover{text-decoration:underline}.scalar-activate[data-v-45e9730e]{cursor:pointer;align-items:center;gap:6px;width:fit-content;margin:0 .75rem .75rem auto;font-size:.875rem;font-weight:600;line-height:24px;display:flex}.scalar-activate-button[data-v-45e9730e]{color:var(--scalar-color-blue);-webkit-appearance:none;-moz-appearance:none;appearance:none;background:0 0;border:none;outline:none;align-items:center;gap:6px;padding:0 .5rem;display:flex}.scalar-activate:hover .scalar-activate-button[data-v-45e9730e]{background:var(--scalar-background-3);border-radius:3px}.scalar-modal-layout .scalar-button-danger[data-v-a93bfefe]{background:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.scalar-modal-layout .scalar-button-danger[data-v-a93bfefe]{background:color-mix(in srgb,var(--scalar-color-red),transparent 95%)}}.scalar-modal-layout .scalar-button-danger[data-v-a93bfefe]{color:var(--scalar-color-red)}.scalar-modal-layout .scalar-button-danger[data-v-a93bfefe]:hover,.scalar-modal-layout .scalar-button-danger[data-v-a93bfefe]:focus{background:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.scalar-modal-layout .scalar-button-danger[data-v-a93bfefe]:hover,.scalar-modal-layout .scalar-button-danger[data-v-a93bfefe]:focus{background:color-mix(in srgb,var(--scalar-color-red),transparent 90%)}}.fade-request-section-content[data-v-f97cc68c]{background:linear-gradient(to left,var(--scalar-background-1)64%,transparent)}.filter-hover[data-v-f97cc68c]{height:100%;padding-left:24px;padding-right:39px;transition:width 0s ease-in-out .2s;position:absolute;right:0;overflow:hidden}.filter-hover[data-v-f97cc68c]:hover,.filter-hover[data-v-f97cc68c]:has(:focus-visible){z-index:10;width:100%}.filter-hover[data-v-f97cc68c]:before{content:"";background-color:var(--scalar-background-1);opacity:0;pointer-events:none;width:100%;height:fit-content;transition:all .3s ease-in-out;position:absolute;top:0;left:0}.filter-hover-item[data-v-f97cc68c]{opacity:0}.filter-hover-item[data-v-f97cc68c]:not(:last-of-type){transform:translateY(3px)}.filter-hover:hover .filter-hover-item[data-v-f97cc68c]{transition:opacity .2s ease-in-out,transform .2s ease-in-out}.filter-hover:hover .filter-hover-item[data-v-f97cc68c]:last-of-type{transition-delay:50ms}.filter-hover:hover .filter-hover-item[data-v-f97cc68c]:nth-last-of-type(2){transition-delay:.1s}.filter-hover:hover .filter-hover-item[data-v-f97cc68c]:nth-last-of-type(3){transition-delay:.15s}.filter-hover:hover .filter-hover-item[data-v-f97cc68c]:nth-last-of-type(4){transition-delay:.2s}.filter-hover:hover .filter-hover-item[data-v-f97cc68c]:nth-last-of-type(5){transition-delay:.25s}.filter-hover:hover .filter-hover-item[data-v-f97cc68c]:nth-last-of-type(6){transition-delay:.3s}.filter-hover:hover .filter-hover-item[data-v-f97cc68c]:nth-last-of-type(7){transition-delay:.35s}.filter-hover:hover .filter-hover-item[data-v-f97cc68c],.filter-hover:has(:focus-visible) .filter-hover-item[data-v-f97cc68c]{opacity:1;transform:translateZ(0)}.filter-hover[data-v-f97cc68c]:hover:before,.filter-hover[data-v-f97cc68c]:has(:focus-visible):before{opacity:.9;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}.filter-button[data-v-f97cc68c]{top:50%;transform:translateY(-50%)}.context-bar-group:hover .context-bar-group-hover\\:text-c-1[data-v-f97cc68c],.context-bar-group:has(:focus-visible) .context-bar-group-hover\\:text-c-1[data-v-f97cc68c]{--tw-text-opacity:1;color:rgb(var(--scalar-color-1)/var(--tw-text-opacity))}.context-bar-group:hover .context-bar-group-hover\\:hidden[data-v-f97cc68c],.context-bar-group:has(:focus-visible) .context-bar-group-hover\\:hidden[data-v-f97cc68c]{display:none}.light-mode .bg-preview[data-v-0956ad2d]{background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23000' fill-opacity='10%25'%3E%3Crect width='8' height='8' /%3E%3Crect x='8' y='8' width='8' height='8' /%3E%3C/svg%3E")}.dark-mode .bg-preview[data-v-0956ad2d]{background-image:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23FFF' fill-opacity='10%25'%3E%3Crect width='8' height='8' /%3E%3Crect x='8' y='8' width='8' height='8' /%3E%3C/svg%3E")}[data-v-85d2902e] .cm-editor{font-size:var(--scalar-small);background-color:#0000;outline:none}[data-v-85d2902e] .cm-gutters{background-color:var(--scalar-background-1);border-radius:var(--scalar-radius)0 0 var(--scalar-radius)}.body-raw[data-v-85d2902e] .cm-scroller{min-width:100%;overflow:auto}.scalar-code-block[data-v-17966bf4] .hljs *{font-size:var(--scalar-small)}.response-body-virtual[data-headlessui-state=open],.response-body-virtual[data-headlessui-state=open] .diclosure-panel{flex-direction:column;flex-grow:1;display:flex}.ascii-art-animate .ascii-art-line[data-v-69ebd973]{border-right:1ch solid #0000;animation:4s step-end 1s both typewriter-69ebd973,.5s step-end infinite blinkTextCursor-69ebd973}@keyframes typewriter-69ebd973{0%{width:0}to{width:100%}}@keyframes blinkTextCursor-69ebd973{0%{border-right-color:currentColor}50%{border-right-color:#0000}}.keycap-n[data-v-45a9fc44]{background:-webkit-linear-gradient(5deg,transparent 30%,var(--scalar-color-3)50%);-webkit-text-fill-color:transparent;-webkit-background-clip:text}.keycap-hotkey[data-v-45a9fc44]{line-height:26px;position:absolute;top:32px}.scalar-version-number[data-v-6d2bdb61]{width:76px;height:76px;font-size:8px;font-family:var(--scalar-font-code);box-shadow:inset 2px 0 0 2px var(--scalar-background-2);text-align:center;text-transform:initial;-webkit-text-decoration-color:var(--scalar-color-3);text-decoration-color:var(--scalar-color-3);border-radius:9px 9px 16px 12px;flex-direction:column;justify-content:center;align-items:center;margin-top:-113px;margin-left:-36px;line-height:11px;display:flex;position:absolute;transform:skewY(13deg)}.scalar-version-number a[data-v-6d2bdb61]{background:var(--scalar-background-2);border:.5px solid var(--scalar-border-color);border-radius:3px;padding:2px 4px;font-weight:700;text-decoration:none}.gitbook-show[data-v-6d2bdb61]{display:none}.v-enter-active[data-v-62b8db3f]{transition:opacity .5s}.v-enter-from[data-v-62b8db3f]{opacity:0}.animate-response-heading .response-heading[data-v-7138ed84]{opacity:1;animation:.2s ease-in-out forwards push-response-7138ed84}@keyframes push-response-7138ed84{0%{opacity:1;transform:translateY(0)}to{opacity:0;transform:translateY(-4px)}}.animate-response-heading .animate-response-children[data-v-7138ed84]{opacity:0;animation:.2s ease-in-out 50ms forwards response-spans-7138ed84}@keyframes response-spans-7138ed84{0%{opacity:0;transform:translateY(4px)}to{opacity:1;transform:translateY(0)}}[data-v-599b2506] .cm-editor{background:0 0;outline:none;height:100%;padding:0}[data-v-599b2506] .cm-placeholder{color:var(--scalar-color-3)}[data-v-599b2506] .cm-content{font-family:var(--scalar-font-code);font-size:var(--scalar-small);max-height:20px;padding:8px 0}[data-v-599b2506] .cm-tooltip{filter:brightness(var(--scalar-lifted-brightness));border-radius:var(--scalar-radius);box-shadow:var(--scalar-shadow-2);background:0 0!important;border:none!important;outline:none!important;overflow:hidden!important}[data-v-599b2506] .cm-tooltip-autocomplete ul li{padding:3px 6px!important}[data-v-599b2506] .cm-completionIcon-type:after{color:var(--scalar-color-3)!important}[data-v-599b2506] .cm-tooltip-autocomplete ul li[aria-selected]{background:var(--scalar-background-2)!important;color:var(--scalar-color-1)!important}[data-v-599b2506] .cm-tooltip-autocomplete ul{position:relative;padding:6px!important}[data-v-599b2506] .cm-tooltip-autocomplete ul li:hover{border-radius:3px;color:var(--scalar-color-1)!important;background:var(--scalar-background-3)!important}[data-v-599b2506] .cm-activeLine,[data-v-599b2506] .cm-activeLineGutter{background-color:#0000}[data-v-599b2506] .cm-selectionMatch,[data-v-599b2506] .cm-matchingBracket{border-radius:var(--scalar-radius);background:var(--scalar-background-4)!important}[data-v-599b2506] .cm-css-color-picker-wrapper{outline:1px solid var(--scalar-background-3);border-radius:3px;display:inline-flex;overflow:hidden}[data-v-599b2506] .cm-gutters{color:var(--scalar-color-3);font-size:var(--scalar-small);background-color:#0000;border-right:none;border-radius:0 0 0 3px;line-height:22px}[data-v-599b2506] .cm-gutters:before{content:"";border-radius:var(--scalar-radius)0 0 var(--scalar-radius);background-color:var(--scalar-background-1);width:calc(100% - 2px);height:calc(100% - 4px);position:absolute;top:2px;left:2px}[data-v-599b2506] .cm-gutterElement{justify-content:flex-end;align-items:center;display:flex;position:relative;font-family:var(--scalar-font-code)!important;padding-left:0!important;padding-right:6px!important}[data-v-599b2506] .cm-lineNumbers .cm-gutterElement{min-width:fit-content}[data-v-599b2506] .cm-gutter+.cm-gutter :not(.cm-foldGutter) .cm-gutterElement{padding-left:0!important}[data-v-599b2506] .cm-scroller{overflow:auto}.line-wrapping[data-v-599b2506]:focus-within .cm-content{white-space:break-spaces;word-break:break-all;min-height:fit-content;padding:3px 6px;display:inline-table}.cm-pill{--tw-bg-base:var(--scalar-color-1);color:var(--tw-bg-base);font-size:var(--scalar-small);border-radius:30px;padding:0 9px;display:inline-block;background:var(--tw-bg-base)!important}@supports (color:color-mix(in lab,red,red)){.cm-pill{background:color-mix(in srgb,var(--tw-bg-base),transparent 94%)!important}}.cm-pill.bg-grey{background:var(--scalar-background-3)!important}.dark-mode .cm-pill{background:var(--tw-bg-base)!important}@supports (color:color-mix(in lab,red,red)){.dark-mode .cm-pill{background:color-mix(in srgb,var(--tw-bg-base),transparent 90%)!important}}.cm-pill:first-of-type{margin-left:0}.cm-editor .cm-widgetBuffer{display:none}.cm-foldPlaceholder:hover{color:var(--scalar-color-1)}.cm-foldGutter .cm-gutterElement{font-size:var(--scalar-heading-4);padding:2px!important}.cm-foldGutter .cm-gutterElement:first-of-type{display:none}.cm-foldGutter .cm-gutterElement .cm-foldMarker{padding:2px}.cm-foldGutter .cm-gutterElement:hover .cm-foldMarker{background:var(--scalar-background-2);border-radius:var(--scalar-radius);color:var(--scalar-color-1)}.schema>span[data-v-4df72868]:not(:first-child):before{content:"·";margin:0 .5ch;display:block}.schema>span[data-v-4df72868]{white-space:nowrap;display:flex}[data-v-04661eb4] .cm-editor{padding:0}[data-v-04661eb4] .cm-content{font-family:var(--scalar-font);font-size:var(--scalar-small);background-color:#0000;align-items:center;width:100%;padding:5px 8px;display:flex}[data-v-04661eb4] .cm-content:has(.cm-pill){padding:5px 8px}[data-v-04661eb4] .cm-content .cm-pill:not(:last-of-type){margin-right:.5px}[data-v-04661eb4] .cm-content .cm-pill:not(:first-of-type){margin-left:.5px}[data-v-04661eb4] .cm-line{text-overflow:ellipsis;padding:0;overflow:hidden}.filemask[data-v-04661eb4]{-webkit-mask-image:linear-gradient(to right,transparent 0,var(--scalar-background-2)20px);mask-image:linear-gradient(to right,transparent 0,var(--scalar-background-2)20px)}[data-v-a4d93a6f] .cm-content{font-size:var(--scalar-small)}[data-v-6764f087] .cm-editor{padding:0}[data-v-6764f087] .cm-content{font-family:var(--scalar-font);font-size:var(--scalar-small);background-color:#0000;align-items:center;width:100%;padding:5px 8px;display:flex}[data-v-6764f087] .cm-content:has(.cm-pill){padding:5px 8px}[data-v-6764f087] .cm-content .cm-pill:not(:last-of-type){margin-right:.5px}[data-v-6764f087] .cm-content .cm-pill:not(:first-of-type){margin-left:.5px}[data-v-6764f087] .cm-line{text-overflow:ellipsis;word-break:break-word;padding:0;overflow:hidden}.required[data-v-6764f087]:after{content:"Required"}input[data-v-6764f087]::placeholder{color:var(--scalar-color-3)}.scalar-password-input[data-v-6764f087]{text-security:disc;-webkit-text-security:disc;-moz-text-security:disc}.auth-combobox-position[data-v-7bf13bf7]{margin-left:120px}.scroll-timeline-x[data-v-7bf13bf7]{scroll-timeline:--scroll-timeline x;scroll-timeline:--scroll-timeline horizontal;scrollbar-width:none;-ms-overflow-style:none;overflow:auto}.fade-left[data-v-7bf13bf7],.fade-right[data-v-7bf13bf7]{content:"";pointer-events:none;height:100%;min-height:24px;animation-name:fadein-7bf13bf7;animation-duration:1ms;animation-direction:reverse;animation-timeline:--scroll-timeline;position:sticky}.fade-left[data-v-7bf13bf7]{background:linear-gradient(-90deg,var(--scalar-background-1)0%,var(--scalar-background-1)60%,var(--scalar-background-1)100%)}@supports (color:color-mix(in lab,red,red)){.fade-left[data-v-7bf13bf7]{background:linear-gradient(-90deg,color-mix(in srgb,var(--scalar-background-1),transparent 100%)0%,color-mix(in srgb,var(--scalar-background-1),transparent 20%)60%,var(--scalar-background-1)100%)}}.fade-left[data-v-7bf13bf7]{min-width:3px;animation-direction:normal;left:-1px}.fade-right[data-v-7bf13bf7]{background:linear-gradient(90deg,var(--scalar-background-1)0%,var(--scalar-background-1)60%,var(--scalar-background-1)100%)}@supports (color:color-mix(in lab,red,red)){.fade-right[data-v-7bf13bf7]{background:linear-gradient(90deg,color-mix(in srgb,var(--scalar-background-1),transparent 100%)0%,color-mix(in srgb,var(--scalar-background-1),transparent 20%)60%,var(--scalar-background-1)100%)}}.fade-right[data-v-7bf13bf7]{min-width:24px;margin-left:-20px;top:0;right:-1px}@keyframes fadein-7bf13bf7{0%{opacity:0}15%{opacity:1}}.auth-combobox-position[data-v-2df672a9]{margin-left:120px}.scroll-timeline-x[data-v-2df672a9]{scroll-timeline:--scroll-timeline x;scroll-timeline:--scroll-timeline horizontal;scrollbar-width:none;-ms-overflow-style:none;overflow:auto}.fade-left[data-v-2df672a9],.fade-right[data-v-2df672a9]{content:"";pointer-events:none;height:100%;min-height:24px;animation-name:fadein-2df672a9;animation-duration:1ms;animation-direction:reverse;animation-timeline:--scroll-timeline;position:sticky}.fade-left[data-v-2df672a9]{background:linear-gradient(-90deg,var(--scalar-background-1)0%,var(--scalar-background-1)60%,var(--scalar-background-1)100%)}@supports (color:color-mix(in lab,red,red)){.fade-left[data-v-2df672a9]{background:linear-gradient(-90deg,color-mix(in srgb,var(--scalar-background-1),transparent 100%)0%,color-mix(in srgb,var(--scalar-background-1),transparent 20%)60%,var(--scalar-background-1)100%)}}.fade-left[data-v-2df672a9]{min-width:3px;animation-direction:normal;left:-1px}.fade-right[data-v-2df672a9]{background:linear-gradient(90deg,var(--scalar-background-1)0%,var(--scalar-background-1)60%,var(--scalar-background-1)100%)}@supports (color:color-mix(in lab,red,red)){.fade-right[data-v-2df672a9]{background:linear-gradient(90deg,color-mix(in srgb,var(--scalar-background-1),transparent 100%)0%,color-mix(in srgb,var(--scalar-background-1),transparent 20%)60%,var(--scalar-background-1)100%)}}.fade-right[data-v-2df672a9]{min-width:24px;margin-left:-20px;top:0;right:-1px}@keyframes fadein-2df672a9{0%{opacity:0}15%{opacity:1}}[data-v-1c71f6b6] code.hljs *{font-size:var(--scalar-small)}.request-section-content[data-v-ca5f9f37]{--scalar-border-width:.5px}.request-section-content-filter[data-v-ca5f9f37]{box-shadow:0 -10px 0 10px var(--scalar-background-1)}.request-item:focus-within .request-meta-buttons[data-v-ca5f9f37]{opacity:1}.group-hover-input[data-v-ca5f9f37]{border-width:var(--scalar-border-width);border-color:#0000}.group:hover .group-hover-input[data-v-ca5f9f37]{background:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.group:hover .group-hover-input[data-v-ca5f9f37]{background:color-mix(in srgb,var(--scalar-background-1),var(--scalar-background-2))}}.group:hover .group-hover-input[data-v-ca5f9f37]{border-color:var(--scalar-border-color)}.group-hover-input[data-v-ca5f9f37]:focus{border-color:var(--scalar-border-color)!important;background:0 0!important}@media (min-width:800px){.has-no-import-url,.has-import-url{contain:paint;max-width:100dvw;overflow-x:hidden}.has-no-import-url .scalar-client>main{opacity:1;background:var(--scalar-background-1);animation:.3s ease-in-out forwards transform-restore-layout}.has-import-url .scalar-client>main{opacity:0;border:var(--scalar-border-width)solid var(--scalar-border-color);z-index:10000;border-radius:12px;animation:.3s ease-in-out forwards transform-fade-layout;overflow:hidden;transform:scale(.85)translate(calc(50dvw + 80px))}.has-import-url .scalar-client .sidenav{display:none}.has-no-import-url .scalar-app,.has-import-url .scalar-app{background:var(--scalar-background-1)!important}}@keyframes transform-fade-layout{0%{opacity:0;transform:scale(.85)translate(calc(50dvw + 80px),10px)}to{opacity:1;transform:scale(.85)translate(calc(50dvw + 80px))}}@keyframes transform-restore-layout{0%{opacity:1;transform:scale(.85)translate(calc(50dvw + 80px))}to{opacity:1;transform:scale(1)translate(0)}}.openapi-color{color:var(--scalar-color-green)}.section-flare{position:fixed;top:0;right:-50dvw}#scalar-client{background-color:var(--scalar-background-2);flex-direction:column;width:100dvw;height:100dvh;display:flex;position:relative}.dark-mode #scalar-client{background-color:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.dark-mode #scalar-client{background-color:color-mix(in srgb,var(--scalar-background-1)65%,black)}}.open-api-client-button[data-v-f016469d]{cursor:pointer;text-align:center;white-space:nowrap;width:100%;height:31px;font-size:var(--scalar-mini);font-weight:var(--scalar-semibold);border-radius:var(--scalar-radius);box-shadow:0 0 0 .5px var(--scalar-border-color);color:var(--scalar-sidebar-color-1);justify-content:center;align-items:center;gap:6px;padding:9px 12px;line-height:1.385;text-decoration:none;display:flex}.open-api-client-button[data-v-f016469d]:hover{background:var(--scalar-sidebar-item-hover-background,var(--scalar-background-2))}.address-bar-history-button[data-v-a93fa60f]:hover{background:var(--scalar-background-3)}.address-bar-history-button[data-v-a93fa60f]:focus-within{background:var(--scalar-background-2)}.description[data-v-e86ebacd] .markdown{font-weight:var(--scalar-semibold);color:var(--scalar-color--1);padding:0;display:block}.description[data-v-e86ebacd] .markdown>:first-child{margin-top:0}[data-v-78c9dbb9] .cm-editor{outline:none;width:100%;height:100%}[data-v-78c9dbb9] .cm-line{padding:0}[data-v-78c9dbb9] .cm-content{font-size:var(--scalar-small);align-items:center;padding:0;display:flex}.scroll-timeline-x[data-v-78c9dbb9]{scroll-timeline:--scroll-timeline x;scroll-timeline:--scroll-timeline horizontal;-ms-overflow-style:none}.scroll-timeline-x-hidden[data-v-78c9dbb9]{overflow-x:auto}.scroll-timeline-x-hidden[data-v-78c9dbb9] .cm-scroller{scrollbar-width:none;-ms-overflow-style:none;padding-right:20px;overflow:auto}.scroll-timeline-x-hidden[data-v-78c9dbb9]::-webkit-scrollbar{width:0;height:0;display:none}.scroll-timeline-x-hidden[data-v-78c9dbb9] .cm-scroller::-webkit-scrollbar{width:0;height:0;display:none}.scroll-timeline-x-address[data-v-78c9dbb9]{scrollbar-width:none;line-height:27px}.scroll-timeline-x-address[data-v-78c9dbb9]:after{content:"";cursor:text;width:24px;height:100%;position:absolute;right:0}.scroll-timeline-x-address[data-v-78c9dbb9]:empty:before{content:"Enter URL or cURL request";color:var(--scalar-color-3);pointer-events:none}.fade-left[data-v-78c9dbb9],.fade-right[data-v-78c9dbb9]{content:"";pointer-events:none;z-index:1;height:100%;animation-name:fadein-78c9dbb9;animation-duration:1ms;animation-direction:reverse;animation-timeline:--scroll-timeline;position:sticky}.fade-left[data-v-78c9dbb9]{background:linear-gradient(-90deg,var(--scalar-address-bar-bg)0%,var(--scalar-address-bar-bg)30%,var(--scalar-address-bar-bg)100%)}@supports (color:color-mix(in lab,red,red)){.fade-left[data-v-78c9dbb9]{background:linear-gradient(-90deg,color-mix(in srgb,var(--scalar-address-bar-bg),transparent 100%)0%,color-mix(in srgb,var(--scalar-address-bar-bg),transparent 20%)30%,var(--scalar-address-bar-bg)100%)}}.fade-left[data-v-78c9dbb9]{min-width:6px;animation-direction:normal;left:-1px}.fade-right[data-v-78c9dbb9]{background:linear-gradient(90deg,var(--scalar-address-bar-bg)0%,var(--scalar-address-bar-bg)30%,var(--scalar-address-bar-bg)100%)}@supports (color:color-mix(in lab,red,red)){.fade-right[data-v-78c9dbb9]{background:linear-gradient(90deg,color-mix(in srgb,var(--scalar-address-bar-bg),transparent 100%)0%,color-mix(in srgb,var(--scalar-address-bar-bg),transparent 20%)30%,var(--scalar-address-bar-bg)100%)}}.fade-right[data-v-78c9dbb9]{min-width:24px;right:-1px}@keyframes fadein-78c9dbb9{0%{opacity:0}1%{opacity:1}}.address-bar-bg-states[data-v-78c9dbb9]{--scalar-address-bar-bg:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.address-bar-bg-states[data-v-78c9dbb9]{--scalar-address-bar-bg:color-mix(in srgb,var(--scalar-background-1),var(--scalar-background-2))}}.address-bar-bg-states[data-v-78c9dbb9]{background:var(--scalar-address-bar-bg)}.address-bar-bg-states[data-v-78c9dbb9]:has(.cm-focused){--scalar-address-bar-bg:var(--scalar-background-1);border-color:var(--scalar-border-color);outline:1px solid var(--scalar-color-accent)}.address-bar-bg-states:has(.cm-focused) .fade-left[data-v-78c9dbb9],.address-bar-bg-states:has(.cm-focused) .fade-right[data-v-78c9dbb9]{--scalar-address-bar-bg:var(--scalar-background-1)}.sidebar-height[data-v-72824faa]{min-height:100%}@media (min-width:800px){.sidebar-mask[data-v-72824faa]{-webkit-mask-image:linear-gradient(0,transparent 0,transparent 0,var(--scalar-background-2)30px);mask-image:linear-gradient(0,transparent 0,transparent 0,var(--scalar-background-2)30px)}}.resizer[data-v-72824faa]{cursor:col-resize;border-right:2px solid #0000;width:5px;transition:border-right-color .3s;position:absolute;top:0;bottom:0;right:0}.resizer[data-v-72824faa]:hover,.dragging .resizer[data-v-72824faa]{border-right-color:var(--scalar-background-3)}.dragging[data-v-72824faa]{cursor:col-resize}.dragging[data-v-72824faa]:before{content:"";width:100%;height:100%;display:block;position:absolute}.ellipsis-position[data-v-709241c2]{transform:translate(calc(-100% - 4.5px))}.indent-border-line-offset[data-v-4dedda07]:before{left:var(--eae2c57a)}.indent-padding-left[data-v-4dedda07]{padding-left:calc(var(--7c91ad9b) + 6px)}.sidebar-folderitem[data-v-4dedda07] .ellipsis-position{right:6px;transform:none}.search-button-fade[data-v-bca9c474]{background:linear-gradient(var(--scalar-background-1)32px,var(--scalar-background-1)38px,transparent)}@supports (color:color-mix(in lab,red,red)){.search-button-fade[data-v-bca9c474]{background:linear-gradient(var(--scalar-background-1)32px,color-mix(in srgb,var(--scalar-background-1),transparent)38px,transparent)}}.empty-sidebar-item-content[data-v-bca9c474]{display:none}.empty-sidebar-item .empty-sidebar-item-content[data-v-bca9c474]{display:block}.rabbitjump[data-v-bca9c474]{opacity:0}.empty-sidebar-item:hover .rabbitjump[data-v-bca9c474]{opacity:1;animation:.5s step-end infinite rabbitAnimation-bca9c474}.empty-sidebar-item:hover .rabbitsit[data-v-bca9c474]{opacity:0;animation:.5s step-end infinite rabbitAnimation2-bca9c474}.empty-sidebar-item:hover .rabbit-ascii[data-v-bca9c474]{animation:8s linear infinite rabbitRun-bca9c474}@keyframes rabbitRun-bca9c474{0%{transform:translateZ(0)}25%{transform:translate(250px)}25.01%{transform:translate(-250px)}75%{transform:translate(250px)}75.01%{transform:translate(-250px)}to{transform:translateZ(0)}}@keyframes rabbitAnimation-bca9c474{0%,to{opacity:1}50%{opacity:0}}@keyframes rabbitAnimation2-bca9c474{0%,to{opacity:0}50%{opacity:1;transform:translateY(-8px)}}.request-text-color-text[data-v-8a88f90a]{color:var(--scalar-color-1);background:linear-gradient(var(--scalar-background-1),var(--scalar-background-3));box-shadow:0 0 0 1px var(--scalar-border-color)}@media screen and (max-width:800px){.sidebar-active-hide-layout[data-v-8a88f90a]{display:none}.sidebar-active-width[data-v-8a88f90a]{width:100%}}.gitbook-show[data-v-c8df97c6]{display:none}.app-exit-button[data-v-c8df97c6]{color:#fff;background:#0000001a}.app-exit-button[data-v-c8df97c6]:hover{background:#ffffff1a}.request-text-color-text[data-v-0100effe]{color:var(--scalar-color-1);background:linear-gradient(var(--scalar-background-1),var(--scalar-background-3));box-shadow:0 0 0 1px var(--scalar-border-color)}@media screen and (max-width:800px){.sidebar-active-hide-layout[data-v-0100effe]{display:none}.sidebar-active-width[data-v-0100effe]{width:100%}}.group-hover-input[data-v-fced736a]{border-width:var(--scalar-border-width);border-color:#0000}.group:hover .group-hover-input[data-v-fced736a]{background:var(--scalar-background-1)}@supports (color:color-mix(in lab,red,red)){.group:hover .group-hover-input[data-v-fced736a]{background:color-mix(in srgb,var(--scalar-background-1),var(--scalar-background-2))}}.group:hover .group-hover-input[data-v-fced736a]{border-color:var(--scalar-border-color)}.group-hover-input[data-v-fced736a]:focus{border-color:var(--scalar-border-color)!important;background:0 0!important}[data-v-68d5218e] .markdown h2{font-size:var(--scalar-font-size-2)}[data-v-5997a667] .cm-content{min-height:fit-content}[data-v-5997a667] .cm-scroller{max-width:100%;overflow:auto hidden}[data-v-83bfcc8a] .cm-editor{padding:0}[data-v-83bfcc8a] .cm-content{font-family:var(--scalar-font);font-size:var(--scalar-small);background-color:#0000;align-items:center;width:100%;padding:5px 8px;display:flex}[data-v-83bfcc8a] .cm-content:has(.cm-pill){padding:5px 8px}[data-v-83bfcc8a] .cm-content .cm-pill:not(:last-of-type){margin-right:.5px}[data-v-83bfcc8a] .cm-content .cm-pill:not(:first-of-type){margin-left:.5px}[data-v-83bfcc8a] .cm-line{text-overflow:ellipsis;padding:0;overflow:hidden}.scalar-collection-auth[data-v-cc87292e]{border:var(--scalar-border-width)solid var(--scalar-border-color);border-radius:var(--scalar-radius-lg);overflow:hidden}.scalar-button-danger[data-v-5170f3be]{background:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.scalar-button-danger[data-v-5170f3be]{background:color-mix(in srgb,var(--scalar-color-red),transparent 95%)}}.scalar-button-danger[data-v-5170f3be]{color:var(--scalar-color-red)}.scalar-button-danger[data-v-5170f3be]:hover,.scalar-button-danger[data-v-5170f3be]:focus{background:var(--scalar-color-red)}@supports (color:color-mix(in lab,red,red)){.scalar-button-danger[data-v-5170f3be]:hover,.scalar-button-danger[data-v-5170f3be]:focus{background:color-mix(in srgb,var(--scalar-color-red),transparent 90%)}}.dragover-asChild[data-v-a89d6a6e],.dragover-above[data-v-a89d6a6e],.dragover-below[data-v-a89d6a6e]{position:relative}.dragover-above[data-v-a89d6a6e]:after,.dragover-below[data-v-a89d6a6e]:after{content:"";background:var(--scalar-color-blue);width:100%;height:3px;display:block;position:absolute;top:-1.5px}@supports (color:color-mix(in lab,red,red)){.dragover-above[data-v-a89d6a6e]:after,.dragover-below[data-v-a89d6a6e]:after{background:color-mix(in srgb,var(--scalar-color-blue),transparent 85%)}}.dragover-above[data-v-a89d6a6e]:after,.dragover-below[data-v-a89d6a6e]:after{pointer-events:none;border-radius:var(--scalar-radius)}.dragover-below[data-v-a89d6a6e]:after{top:initial;bottom:-1.5px}.dragover-asChild[data-v-a89d6a6e]:after{content:"";background:var(--scalar-color-blue);width:100%;height:100%;display:block;position:absolute;top:0;left:0}@supports (color:color-mix(in lab,red,red)){.dragover-asChild[data-v-a89d6a6e]:after{background:color-mix(in srgb,var(--scalar-color-blue),transparent 85%)}}.dragover-asChild[data-v-a89d6a6e]:after{pointer-events:none;border-radius:var(--scalar-radius)}.empty-variable-name[data-v-0b6c70e4]:empty:before{content:"Untitled";color:var(--scalar-color-3)}.form-group[data-v-694018d6]{margin-bottom:1rem}.modal-actions[data-v-694018d6]{justify-content:flex-end;gap:1rem;display:flex}:root{--scalar-loaded-api-reference:true}@property --tw-translate-x{syntax:"*";inherits:false;initial-value:0}@property --tw-translate-y{syntax:"*";inherits:false;initial-value:0}@property --tw-translate-z{syntax:"*";inherits:false;initial-value:0}@property --tw-rotate-x{syntax:"*";inherits:false}@property --tw-rotate-y{syntax:"*";inherits:false}@property --tw-rotate-z{syntax:"*";inherits:false}@property --tw-skew-x{syntax:"*";inherits:false}@property --tw-skew-y{syntax:"*";inherits:false}@property --tw-border-style{syntax:"*";inherits:false;initial-value:solid}@property --tw-leading{syntax:"*";inherits:false}@property --tw-font-weight{syntax:"*";inherits:false}@property --tw-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-shadow-color{syntax:"*";inherits:false}@property --tw-shadow-alpha{syntax:"<percentage>";inherits:false;initial-value:100%}@property --tw-inset-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-inset-shadow-color{syntax:"*";inherits:false}@property --tw-inset-shadow-alpha{syntax:"<percentage>";inherits:false;initial-value:100%}@property --tw-ring-color{syntax:"*";inherits:false}@property --tw-ring-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-inset-ring-color{syntax:"*";inherits:false}@property --tw-inset-ring-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-ring-inset{syntax:"*";inherits:false}@property --tw-ring-offset-width{syntax:"<length>";inherits:false;initial-value:0}@property --tw-ring-offset-color{syntax:"*";inherits:false;initial-value:#fff}@property --tw-ring-offset-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-outline-style{syntax:"*";inherits:false;initial-value:solid}@property --tw-blur{syntax:"*";inherits:false}@property --tw-brightness{syntax:"*";inherits:false}@property --tw-contrast{syntax:"*";inherits:false}@property --tw-grayscale{syntax:"*";inherits:false}@property --tw-hue-rotate{syntax:"*";inherits:false}@property --tw-invert{syntax:"*";inherits:false}@property --tw-opacity{syntax:"*";inherits:false}@property --tw-saturate{syntax:"*";inherits:false}@property --tw-sepia{syntax:"*";inherits:false}@property --tw-drop-shadow{syntax:"*";inherits:false}@property --tw-drop-shadow-color{syntax:"*";inherits:false}@property --tw-drop-shadow-alpha{syntax:"<percentage>";inherits:false;initial-value:100%}@property --tw-drop-shadow-size{syntax:"*";inherits:false}@property --tw-duration{syntax:"*";inherits:false}@layer scalar-config{.scalar-api-reference[data-v-c369ccec]{--refs-sidebar-width: var(--scalar-sidebar-width, 0px);--refs-header-height: calc( var(--scalar-y-offset) + var(--scalar-header-height, 0px) );--refs-content-max-width: var(--scalar-content-max-width, 1540px)}.scalar-api-reference.references-classic[data-v-c369ccec]{--refs-content-max-width: var(--scalar-content-max-width, 1420px);min-height:100dvh;--refs-sidebar-width: 0}}.references-layout[data-v-c369ccec]{min-height:100dvh;min-width:100%;max-width:100%;flex:1;--full-height: 100dvh;display:grid;grid-template-rows:var(--scalar-header-height, 0px) repeat(2,auto);grid-template-columns:var(--refs-sidebar-width) 1fr;grid-template-areas:"header header" "navigation rendered" "footer footer";background:var(--scalar-background-1)}.references-header[data-v-c369ccec]{grid-area:header;position:sticky;top:var(--scalar-custom-header-height, 0px);z-index:1000;height:var(--scalar-header-height, 0px)}.references-editor[data-v-c369ccec]{grid-area:editor;display:flex;min-width:0;background:var(--scalar-background-1)}.references-navigation[data-v-c369ccec]{grid-area:navigation}.references-rendered[data-v-c369ccec]{position:relative;grid-area:rendered;min-width:0;background:var(--scalar-background-1)}.scalar-api-reference.references-classic[data-v-c369ccec],.references-classic .references-rendered[data-v-c369ccec]{height:initial!important;max-height:initial!important}.references-navigation-list[data-v-c369ccec]{position:sticky;top:var(--refs-header-height);height:calc(100dvh - var(--refs-header-height));background:var(--scalar-sidebar-background-1, var(--scalar-background-1));overflow-y:auto;display:flex;flex-direction:column}.references-editor-textarea[data-v-c369ccec]{position:sticky;top:var(--refs-header-height);height:calc(var(--full-height) - var(--refs-header-height));display:flex;min-width:0;flex:1}.references-editable[data-v-c369ccec]{grid-template-columns:var(--refs-sidebar-width) 1fr 1fr;grid-template-areas:"header header header" "navigation editor rendered" "footer footer footer"}@layer scalar-config{.references-sidebar[data-v-c369ccec]{--refs-sidebar-width: var(--scalar-sidebar-width, 280px)}}.references-footer[data-v-c369ccec]{grid-area:footer}@media (max-width: 1150px){.references-layout[data-v-c369ccec]{grid-template-columns:var(--refs-sidebar-width) 1fr 0px}}@media (max-width: 1000px){.references-layout[data-v-c369ccec]{grid-template-columns:auto;grid-template-rows:var(--scalar-header-height, 0px) 0px auto auto;grid-template-areas:"header" "navigation" "rendered" "footer"}.references-editable[data-v-c369ccec]{grid-template-areas:"header" "navigation" "editor"}.references-navigation[data-v-c369ccec],.references-rendered[data-v-c369ccec]{max-height:unset}.references-rendered[data-v-c369ccec]{position:static}.references-navigation[data-v-c369ccec]{display:none;z-index:10}.references-sidebar-mobile-open .references-navigation[data-v-c369ccec]{display:block;top:var(--refs-header-height);height:calc(100dvh - var(--refs-header-height));width:100%;position:sticky}.references-navigation-list[data-v-c369ccec]{position:absolute;top:-1px;height:calc(var(--full-height) - var(--refs-header-height) + 1px);width:100%;border-top:1px solid var(--scalar-border-color);display:flex;flex-direction:column}}@media (max-width: 1000px){.scalar-api-references-standalone-mobile[data-v-c369ccec]{--scalar-header-height: 50px}}.scalar-api-references-standalone-search[data-v-c369ccec]{display:flex;flex-direction:column;padding:12px 12px 6px}.darklight-reference[data-v-c369ccec]{width:100%;margin-top:auto}@layer scalar-base{body{margin:0;background-color:var(--scalar-background-1)}}
`));
      document.head.appendChild(elementStyle);
      console.warn("Auto-loading the references css through js has been deprecated. Please import the css directly. Visit https://github.com/scalar/scalar for more info.");
    }, 0);
  } catch (error) {
    console.error(error, "unable to concat style inside the bundled file");
  }
})();

// node_modules/@scalar/api-reference-react/dist/ApiReferenceReact.js
var import_react = __toESM(require_react(), 1);
globalThis.__VUE_OPTIONS_API__ = true;
globalThis.__VUE_PROD_HYDRATION_MISMATCH_DETAILS__ = true;
globalThis.__VUE_PROD_DEVTOOLS__ = false;
var R7 = (n8) => {
  const e16 = (0, import_react.useRef)(null), [t7, _22] = (0, import_react.useState)(null), i17 = () => Array.isArray(n8.configuration) ? n8.configuration.map((r12) => ({ _integration: "react", ...r12 })) : { _integration: "react", ...n8.configuration };
  return (0, import_react.useEffect)(() => {
    var o8;
    if (!e16.current)
      return (o8 = t7 == null ? void 0 : t7.app) == null ? void 0 : o8.unmount;
    const r12 = g5(e16.current, i17());
    return _22(r12), r12.destroy;
  }, [e16]), (0, import_react.useEffect)(() => {
    t7 == null || t7.updateConfiguration(i17());
  }, [n8.configuration, t7]), (0, import_jsx_runtime.jsx)("div", { ref: e16 });
};
export {
  R7 as ApiReferenceReact
};
/*! Bundled license information:

react/cjs/react-jsx-runtime.development.js:
  (**
   * @license React
   * react-jsx-runtime.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

tabbable/dist/index.esm.js:
  (*!
  * tabbable 6.2.0
  * @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
  *)

focus-trap/dist/focus-trap.esm.js:
  (*!
  * focus-trap 7.6.5
  * @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE
  *)
*/
//# sourceMappingURL=@scalar_api-reference-react.js.map
