server {
    listen 80;
    server_name localhost;

    # # Security headers
    # add_header X-Frame-Options "SAMEORIGIN" always;
    # add_header X-Content-Type-Options "nosniff" always;
    # add_header X-XSS-Protection "1; mode=block" always;
    # add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # # CORS headers
    # add_header Access-Control-Allow-Origin "*" always;
    # add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    # add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
    # add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # # User Service Routes
    # location v1/users {
    #     limit_req zone=api burst=20 nodelay;
        
    #     # Handle preflight requests
    #     if ($request_method = 'OPTIONS') {
    #         add_header Access-Control-Allow-Origin "*";
    #         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
    #         add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
    #         add_header Access-Control-Max-Age 1728000;
    #         add_header Content-Type "text/plain; charset=utf-8";
    #         add_header Content-Length 0;
    #         return 204;
    #     }

    #     proxy_pass http://user_service;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Request-ID $request_id;
        
    #     # Timeouts
    #     proxy_connect_timeout 30s;
    #     proxy_send_timeout 30s;
    #     proxy_read_timeout 30s;
        
    #     # Buffer settings
    #     proxy_buffering on;
    #     proxy_buffer_size 4k;
    #     proxy_buffers 8 4k;
    # }

    # Auth Service Routes
    location ~ ^/v1/auth(/.*)?$ {
        proxy_pass http://auth-service:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_redirect off;
    }

    # # Role Service Routes
    # location v1/roles {
    #     limit_req zone=api burst=20 nodelay;
        
    #     # Handle preflight requests
    #     if ($request_method = 'OPTIONS') {
    #         add_header Access-Control-Allow-Origin "*";
    #         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
    #         add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
    #         add_header Access-Control-Max-Age 1728000;
    #         add_header Content-Type "text/plain; charset=utf-8";
    #         add_header Content-Length 0;
    #         return 204;
    #     }

    #     proxy_pass http://role_service;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Request-ID $request_id;
        
    #     # Timeouts
    #     proxy_connect_timeout 30s;
    #     proxy_send_timeout 30s;
    #     proxy_read_timeout 30s;
        
    #     # Buffer settings
    #     proxy_buffering on;
    #     proxy_buffer_size 4k;
    #     proxy_buffers 8 4k;
    # }

    # # Permission Service Routes
    # location v1/permissions {
    #     limit_req zone=api burst=20 nodelay;
        
    #     # Handle preflight requests
    #     if ($request_method = 'OPTIONS') {
    #         add_header Access-Control-Allow-Origin "*";
    #         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
    #         add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
    #         add_header Access-Control-Max-Age 1728000;
    #         add_header Content-Type "text/plain; charset=utf-8";
    #         add_header Content-Length 0;
    #         return 204;
    #     }

    #     proxy_pass http://permission_service;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Request-ID $request_id;
        
    #     # Timeouts
    #     proxy_connect_timeout 30s;
    #     proxy_send_timeout 30s;
    #     proxy_read_timeout 30s;
        
    #     # Buffer settings
    #     proxy_buffering on;
    #     proxy_buffer_size 4k;
    #     proxy_buffers 8 4k;
    # }


    # Default error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    location = /404.html {
        root /usr/share/nginx/html;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

