{
  "openapi": "3.0.3",
  "info": {
    "title": "Auth Examples API",
    "version": "1.0.0",
    "description": "Single spec demonstrating multiple authentication mechanisms in OpenAPI/Swagger."
  },
  "servers": [
    { "url": "https://api.example.com/v1" }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://auth.example.com/oauth/authorize",
            "tokenUrl": "https://auth.example.com/oauth/token",
            "scopes": {
              "read": "Grants read access",
              "write": "Grants write access",
              "admin": "Grants admin access"
            }
          }
        }
      }
    }
  },
  "security": [
    { "BearerAuth": [] }
  ],
  "paths": {
    "/profile": {
      "get": {
        "summary": "Get my profile (uses global Bearer JWT)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "email": { "type": "string", "format": "email" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List users (API Key)",
        "security": [
          { "ApiKeyAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "type": "object" }
                }
              }
            }
          }
        }
      }
    },
    "/admin/login": {
      "post": {
        "summary": "Admin login (HTTP Basic)",
        "security": [
          { "BasicAuth": [] }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/reports": {
      "get": {
        "summary": "Get reports (OAuth2 read scope)",
        "security": [
          { "OAuth2": ["read"] }
        ],
        "responses": {
          "200": { "description": "OK" },
          "403": { "description": "Forbidden (insufficient scope)" }
        }
      },
      "post": {
        "summary": "Create report (OAuth2 write scope)",
        "security": [
          { "OAuth2": ["write"] }
        ],
        "responses": {
          "201": { "description": "Created" },
          "403": { "description": "Forbidden (insufficient scope)" }
        }
      }
    }
  }
}
