syntax = "proto3";

package user_service;

option go_package = "./pb";

message User {
  string id = 1;
  string email = 2;
  string first_name = 3;
  string middle_name = 4;
  string last_name = 5;
  bool is_active = 6;
  string role = 7;
  string created_at = 8;
  string updated_at = 9;
}

message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string first_name = 4;
  string last_name = 5;
  string role = 6;
}

// RegisterResponse represents the response from a registration operation
message RegisterResponse {
  bool success = 1;
  string message = 2;
}

// GetUserRequest represents a request to get a user
message GetUserRequest {
  string id = 1;
}

// GetUserResponse represents the response from getting a user
message GetUserResponse {
  bool success = 1;
  string message = 2;
  User user = 3;
}

// UpdateUserRequest represents a request to update a user
message UpdateUserRequest {
  string id = 1;
  string username = 2;
  string email = 3;
  string first_name = 4;
  string last_name = 5;
  bool is_active = 6;
  string role = 7;
}

// UpdateUserResponse represents the response from updating a user
message UpdateUserResponse {
  bool success = 1;
  string message = 2;
}

// DeleteUserRequest represents a request to delete a user
message DeleteUserRequest {
  string id = 1;
}

// DeleteUserResponse represents the response from deleting a user
message DeleteUserResponse {
  bool success = 1;
  string message = 2;
}

// ListUsersRequest represents a request to list users
message ListUsersRequest {
  int32 limit = 1;
  int32 offset = 2;
}

// ListUsersResponse represents the response from listing users
message ListUsersResponse {
  bool success = 1;
  string message = 2;
  repeated User users = 3;
  int64 total = 4;
  int32 limit = 5;
  int32 offset = 6;
  bool has_more = 7;
  int32 next_offset = 8;
}

service UserService {
  rpc CreateUser(RegisterRequest) returns (RegisterResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc GetUserByEmail(GetUserByEmailRequest) returns (ApiResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
}

message GetUserByEmailRequest {
  string email = 1;
}

message ApiResponse {
  bool success = 1;
  string message = 2;
  User user = 3;
}